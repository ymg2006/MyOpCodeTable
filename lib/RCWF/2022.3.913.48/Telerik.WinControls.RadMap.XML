<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.WinControls.RadMap</name>
    </assembly>
    <members>
        <member name="M:Telerik.WinControls.UI.ElevationCompletedEventArgs.#ctor(Telerik.WinControls.UI.Map.Bing.ElevationData[],Telerik.WinControls.UI.Map.Bing.SeaLevelData[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ElevationCompletedEventArgs"/> class.
            </summary>
            <param name="elevations">The elevations.</param>
            <param name="seaLevels">The seaLevels.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ElevationCompletedEventArgs.#ctor(Telerik.WinControls.UI.Map.Bing.ElevationData[],Telerik.WinControls.UI.Map.Bing.SeaLevelData[],System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ElevationCompletedEventArgs"/> class.
            </summary>
            <param name="elevations">The elevations.</param>
            <param name="seaLevels">The seaLevels.</param>
            <param name="userData">A user-defined object that is passed to the method invoked  when the asynchronous operation completes</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ElevationCompletedEventArgs.Elevations">
            <summary>
            Gets the elevations response.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ElevationCompletedEventArgs.SeaLevels">
            <summary>
            Gets the sea levels response.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ElevationCompletedEventArgs.UserData">
            <summary>
            A user-defined object that is passed to the method invoked  when the asynchronous operation completes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapSearchEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapSearchEventArgs"/> class.
            </summary>
            <param name="searchCriteria">The search criteria.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchEventArgs.SearchCriteria">
            <summary>
            Gets or sets the search criteria.
            </summary>
            <value>The search criteria.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.RequestErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RequestErrorEventArgs"/> class.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.RequestErrorEventArgs.Error">
            <summary>
            Gets the error that occurred.
            </summary>
            <value>The error.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.AsyncFileReaderBase">
            <summary>
            Base class for the asynchronous map shape readers for ESRI shape-file and KML.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncFileReaderBase.#ctor">
            <summary>
            Initializes a new instance of the AsyncFileReaderBase class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncFileReaderBase.BaseAddress">
            <summary>
            Gets or sets the uri of the base address.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncFileReaderBase.Source">
            <summary>
            Gets or sets the uri of geospatial file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncFileReaderBase.SourceCollection">
            <summary>
            Gets or sets the collection of geospatial sources.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncFileReaderBase.SourceCollectionBaseZIndex">
            <summary>
            Gets or sets the start z-index for reading multiple sources.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncFileReaderBase.SourceCollectionUseZIndex">
            <summary>
            Gets or sets the flag which allows to use incremental z-index for shapes of each read sources.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncFileReaderBase.StreamSource">
            <summary>
            Gets or sets the stream of geospatial data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncFileReaderBase.Timeout">
            <summary>
            Gets or sets the timeout which is used for reading of the stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncFileReaderBase.RequestCacheLevel">
            <summary>
            Gets or sets the request cache level which is used for downloading data from Uri which is specified in the Source property.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncFileReaderBase.OnReaderPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Occurs when the properties which are used for loading are changed.
            </summary>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.AsyncReaderBase">
            <summary>
            Base class for the asynchronous map shape readers (KML, ESRI, WKT/WKB).
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.AsyncReaderBase.ReadShapeDataCompleted">
            <summary>
            Occurs when the reader completes to read shapes and pass them to target information layer.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.AsyncReaderBase.PreviewReadShapeDataCompleted">
            <summary>
            Occurs when the reader completes to read shapes.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.AsyncReaderBase.ProgressChanged">
            <summary>
            Occurs when part of data is read.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.AsyncReaderBase.PreviewReadShapeData">
            <summary>
            Occurs when a shape data is read.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncReaderBase.ClearLayer">
            <summary>
            Gets or sets the ClearLayer property.
            If it is set to true, then the reader clears its information layer after reading.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncReaderBase.Layer">
            <summary>
            Target layer.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncReaderBase.ExtendedPropertySet">
            <summary>
            Gets or sets extended property set which will be
            used during shape file (KML or ESRI) reading.
            </summary>
            <remarks>Can be null. In this case extended property set will be created depends on the
            extended data available in the KML file or in the attributes file (DBF).</remarks>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncReaderBase.ToolTipFormat">
            <summary>
            Gets or sets tooltip format.
            Either ToolTipFormat or ToolTipTemplate should be specified.
            If both properties are set, then ToolTipTemplate will be used.
            </summary>
            <example>The tooltip format can be specified in a few different ways: 
            as simple name of the extended property, as formatted extended property, 
            or as format string which can use number of the extended properties.
            <code lang="CS">
            this.visualizationLayer.Reader = new AsyncShapeFileReader();
            
            // Using of the single extended property name.
            this.visualizationLayer.Reader.ToolTipFormat = "CNTRY_NAME";
            
            // Using of the formatted extended property.
            // The '|' character is used to separate extended property name and its output format.
            this.visualizationLayer.Reader.ToolTipFormat = "SUM_SQMI_A|F2";
            
            // Format string with number of the extended properties.
            this.visualizationLayer.Reader.ToolTipFormat = "{CNTRY_NAME} Miles: {SUM_SQMI_A|F2}, KM: {SUM_SQKM_A|F1}";
            </code>
            <code lang="VB">
            Me.visualizationLayer.Reader = New AsyncShapeFileReader()
            
            ' Using of the single extended property name.
            Me.visualizationLayer.Reader.ToolTipFormat = "CNTRY_NAME"
            
            ' Using of the formatted extended property.
            ' The '|' character is used to separate extended property name and its output format.
            Me.visualizationLayer.Reader.ToolTipFormat = "SUM_SQMI_A|F2"
            
             Format string with number of the extended properties.
            Me.visualizationLayer.Reader.ToolTipFormat = "{CNTRY_NAME} Miles: {SUM_SQMI_A|F2}, KM: {SUM_SQKM_A|F1}"
            </code>
            <code lang="XAML">
            &lt;telerik:AsyncShapeFileReader Source="/Telerik.RadMap.Silverlight;component/africa"
            	ToolTipFormat="CNTRY_NAME"&gt;
            	
            &lt;telerik:AsyncShapeFileReader Source="/Telerik.RadMap.Silverlight;component/africa"
            	ToolTipFormat="SUM_SQMI_A|F2"&gt;
            	
            &lt;telerik:AsyncShapeFileReader Source="/Telerik.RadMap.Silverlight;component/africa"
            	ToolTipFormat="{}{CNTRY_NAME} Miles: {SUM_SQMI_A|F2}, KM: {SUM_SQKM_A|F1}"&gt;
            </code>.
            </example>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncReaderBase.CoordinateConverter">
            <summary>
            Gets or sets the CoordinateConverter applied to the reader.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderBase.ReadAsync">
            <summary>
            Reads geospatial data using asynchronous mode.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderBase.ReadAsync(System.Object)">
            <summary>
            Reads geospatial data using asynchronous mode.
            </summary>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderBase.CancelAsync">
            <summary>
            Cancels loading of shapes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderBase.CancelAsync(System.Int32)">
            <summary>
            Cancels loading of shapes by process id.
            </summary>
            <param name="processId">Id of the process.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderBase.ReportProgress(System.Int32,System.Object)">
            <summary>
            Raises the ProgressChanged event.
            </summary>
            <param name="percentProgress">The percentage, from 0 to 100, of the background operation that is completed.</param>
            <param name="userState">The state object passed to ReadAsync(System.Object).</param>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderBase.ReaderPropertyChanged(Telerik.WinControls.RadObject,Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Starts loading when the properties which are used for loading are changed.
            </summary>
            <param name="source">Source object.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderBase.OnReaderPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Occurs when the properties which are used for loading are changed.
            </summary>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.AsyncReaderSource">
            <summary>
            The class represents a source for reading of multiple shape-files.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncReaderSource.DataSource">
            <summary>
            Gets or sets the uri of the data-file (dbf).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncReaderSource.Source">
            <summary>
            Gets or sets the uri of geospatial file.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.AsyncReaderSourceCollection">
            <summary>
            Represents AsyncReaderFile collection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollection.#ctor">
            <summary>
            Initializes a new instance of the AsyncReaderSourceCollection class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollection.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the AsyncReaderSourceCollection class.
            </summary>
            <param name="enumerable">The source IEnumerable of Uri or of string.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollection.op_Explicit(System.Object[])~Telerik.WinControls.UI.AsyncReaderSourceCollection">
            <summary>
            Performs an explicit conversion from object[] to AsyncReaderSourceCollection.
            </summary>
            <param name="data">The array.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollection.op_Explicit(System.Collections.ObjectModel.Collection{System.String})~Telerik.WinControls.UI.AsyncReaderSourceCollection">
            <summary>
            Performs an explicit conversion from collection of string to AsyncReaderSourceCollection.
            </summary>
            <param name="data">The collection of string.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollection.op_Explicit(System.Collections.ObjectModel.Collection{System.Uri})~Telerik.WinControls.UI.AsyncReaderSourceCollection">
            <summary>
            Performs an explicit conversion from collection of Uri to AsyncReaderSourceCollection.
            </summary>
            <param name="data">The collection of Uri.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollection.op_Explicit(System.Collections.Generic.List{System.String})~Telerik.WinControls.UI.AsyncReaderSourceCollection">
            <summary>
            Performs an explicit conversion from list of string to AsyncReaderSourceCollection.
            </summary>
            <param name="data">The list of string.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollection.op_Explicit(System.Collections.Generic.List{System.Uri})~Telerik.WinControls.UI.AsyncReaderSourceCollection">
            <summary>
            Performs an explicit conversion from list of Uri to AsyncReaderSourceCollection.
            </summary>
            <param name="data">The list of Uri.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.AsyncReaderSourceCollectionConverter">
            <summary>
            The type converter which converts the instance of IEnumerable to the AsyncReaderSourceCollection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Gets a value that indicates whether this type converter can convert from a given type. 
            </summary>
            <param name="context">ITypeDescriptorContext for this call.</param>
            <param name="sourceType">Type being queried for support.</param>
            <returns>True if this converter can convert from the specified type; false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncReaderSourceCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Attempts to convert to a Location from the given object. 
            </summary>
            <param name="context">The ITypeDescriptorContext for this call.</param>
            <param name="culture">The CultureInfo which is respected when converting.</param>
            <param name="value">The object to convert to an instance of Location. </param>
            <returns>Location that was constructed.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.BackgroundFileReaderBaseParameters">
            <summary>
            Represents the thread safety parameters of the AsyncFileReaderBase class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundFileReaderBaseParameters.BaseAddress">
            <summary>
            Gets or sets the uri of the base address.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundFileReaderBaseParameters.Source">
            <summary>
            Gets or sets Uri of geospatial data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundFileReaderBaseParameters.StreamSource">
            <summary>
            Gets or sets the stream of geospatial data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundFileReaderBaseParameters.StreamSourceContentLength">
            <summary>
            Gets or sets the length of stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundFileReaderBaseParameters.Timeout">
            <summary>
            Gets or sets the timeout which is used for reading of the stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundFileReaderBaseParameters.RequestCacheLevel">
            <summary>
            Gets or sets the request cache level which is used for downloading data from Uri which is specified in the Source property.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.BackgroundMapShapeDataReader">
            <summary>
            Represents the BackgroundMapShapeDataReader. Allows loading shape data in the background thread.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundMapShapeDataReader.CalculateProgress">
            <summary>
            Gets or sets the value which indicates that the reader should report progress.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundMapShapeDataReader.PassRecordPreviewEvent">
            <summary>
            Gets or sets the value which indicates that the reader should raise PreviewReadShapeDataCompleted event for each shape as soon as it is read.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundMapShapeDataReader.CancellationPending">
            <summary>
            Gets or sets the value which indicates that the reader should be cancelled.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.ReadAsync(Telerik.WinControls.UI.BackgroundReaderBaseParameters)">
            <summary>
            Loads shape data in the background thread. 
            </summary>
            <param name="backgroundParameters">Parameters for loading.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.CancelAsync">
            <summary>
            Cancels loading. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.GetProgress">
            <summary>
            The progress calculator.
            </summary>
            <returns>The progress in percent.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.OnCancelled">
            <summary>
            Is called when the reading is cancelled.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.CompleteLoading">
            <summary>
            Completes loading process.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.ReportProgress(System.Int32)">
            <summary>
            Raises the ProgressChanged event.
            </summary>
            <param name="percentProgress">The percentage of progress from 0 to 100.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.AddShapeDataRecord(System.Int32,System.Collections.Generic.List{Telerik.WinControls.UI.MapVisualElement})">
            <summary>
            Adds shape record to the internal dictionary.
            </summary>
            <param name="recordNumber">The record number.</param>
            <param name="dataList">The record.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.GetShapeDataRecord(System.Int32)">
            <summary>
            Gets the record by its number.
            </summary>
            <param name="recordNumber">The record number.</param>
            <returns>The record.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundMapShapeDataReader.ShapeComplete(System.Collections.Generic.List{Telerik.WinControls.UI.MapVisualElement})">
            <summary>
            Is used to raise PreviewReadShapeDataCompleted event for single shape record.
            </summary>
            <param name="dataList"></param>
        </member>
        <member name="T:Telerik.WinControls.UI.BackgroundReaderBaseParameters">
            <summary>
            Represents the thread safety parameters of the AsyncReaderBase class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.UserState">
            <summary>
            Gets the user-defined object which could be set for ReadAsync method.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.ExtendedPropertySet">
            <summary>
            The ExtendedPropertySet for data from dbf-file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.CoordinateConverter">
            <summary>
            The Coordinate Converter.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.AsyncReaderBase">
            <summary>
            Instance of the AsyncReaderBase.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.BackgroundReader">
            <summary>
            The background reader instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.ReaderId">
            <summary>
            The reader id.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.Error">
            <summary>
            Gets or sets the stream of geospatial data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.Items">
            <summary>
            Gets or sets items which are returned during reading.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.Cancelled">
            <summary>
            Gets or sets a value that indicates whether an asynchronous operation has been canceled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundReaderBaseParameters.ToolTipFormat">
            <summary>
            Gets or sets tooltip format.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundReaderBaseParameters.GetLocation(System.Double,System.Double)">
            <summary>
            Get location using Coordinate Converter.
            </summary>
            <param name="latitude">Latitude.</param>
            <param name="longitude">Longitude.</param>
            <returns>Location.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundReaderHelper.CompleteUri(System.Uri,System.Uri)">
            <summary>
            Completes Uri with base address.
            </summary>
            <param name="uri">Uri.</param>
            <param name="baseAddress">Base address.</param>
            <returns>Uri.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundReaderHelper.IsResourceUri(System.Uri)">
            <summary>
            Checks that the Uri specifies an application resource.
            </summary>
            <param name="uri">The Uri.</param>
            <returns>Returns true when the Uri specifies an application resource.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundReaderHelper.GetStreamFromResource(System.Uri,System.Exception@)">
            <summary>
            Gets stream from application resources.
            </summary>
            <param name="uri">Uri.</param>
            <param name="error">Outs exception it's occurred.</param>
            <returns>Stream.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.AsyncKmlReader">
            <summary>
            Represents the asynchronous map shape reader for KML file.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncKmlReader.ReadAsync">
            <summary>
            Reads geospatial data using asynchronous mode.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncKmlReader.ReadAsync(System.Object)">
            <summary>
            Reads geospatial data using asynchronous mode.
            </summary>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.BackgroundKmlReaderParameters">
            <summary>
            Represents the thread safety parameters of the AsyncShapeFileReader class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundKmlStreamReader.ReadAsync(Telerik.WinControls.UI.BackgroundReaderBaseParameters)">
            <summary>
            Loads shape data in the background thread. 
            </summary>
            <param name="backgroundParameters">Parameters for loading.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundKmlStreamReader.GetProgress">
            <summary>
            The progress calculator.
            </summary>
            <returns>The progress in percent.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundKmlStreamReader.OnCancelled">
            <summary>
            Completes cancel process.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundKmlStreamReader.Parse(System.String,System.Boolean)">
            <summary>
            Converts a String representation of the LocationCollection into the equivalent LocationCollection class.
            </summary>
            <param name="source">The String representation of the LocationCollection class.</param>
            <param name="reversed">Indicates whether string contains coordinates in reversed order (Longitude-Latitude like in KML files).</param>
            <returns>The equivalent LocationCollection class.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.PreviewReadShapeDataCompletedEventHandler">
            <summary>
            Delegate for the PreviewReadShapeDataCompleted event handler.
            </summary>
            <param name="sender">Object that currently handles event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.PreviewReadShapeDataCompletedEventArgs">
            <summary>
            Represents the PreviewReadShapeDataCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PreviewReadShapeDataCompletedEventArgs.Items">
            <summary>
            Gets the list of read items.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ReadShapeDataCompletedEventHandler">
            <summary>
            Delegate for the ReadShapeDataCompleted event handler.
            </summary>
            <param name="sender">Object which currently handles event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.ReadShapeDataCompletedEventArgs">
            <summary>
            Represents the ReadShapeDataCompletedEventArgs class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ReadShapeDataCompletedEventArgs.Canceled">
            <summary>
            Gets a value that indicates whether an asynchronous operation has been canceled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ReadShapeDataCompletedEventArgs.Error">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ReadShapeDataCompletedEventArgs.UserState">
            <summary>
            Gets the user-defined object which could be set for ReadAsync method.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.AsyncShapeFileReader">
            <summary>
            Represents the asynchronous map shape reader for ESRI shape-file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncShapeFileReader.DataSource">
            <summary>
            Gets or sets the uri of the data-file (dbf).
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncShapeFileReader.StreamDataSource">
            <summary>
            Gets or sets the stream of geospatial data.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncShapeFileReader.Encoding">
            <summary>
            Gets or sets the character encoding applied to the reader.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncShapeFileReader.ReadAsync">
            <summary>
            Reads geospatial data using asynchronous mode.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncShapeFileReader.ReadAsync(System.Object)">
            <summary>
            Reads geospatial data using asynchronous mode.
            </summary>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.BackgroundShapeFileReaderParameters">
            <summary>
            Represents the thread safety parameters of the AsyncShapeFileReader class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundShapeFileReaderParameters.DataSource">
            <summary>
            Uri of DBF file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundShapeFileReaderParameters.StreamDataSource">
            <summary>
            Stream of DBF file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundShapeFileReaderParameters.StreamDataSourceContentLength">
            <summary>
            Gets or sets the length of DBF file stream.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundShapeFileReaderParameters.Encoding">
            <summary>
            DBF-file encoding.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundShapeFileStreamReader.ReadAsync(Telerik.WinControls.UI.BackgroundReaderBaseParameters)">
            <summary>
            Loads shape data in the background thread. 
            </summary>
            <param name="backgroundParameters">Parameters for loading.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundShapeFileStreamReader.GetProgress">
            <summary>
            The progress calculator.
            </summary>
            <returns>The progress in percent.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundShapeFileStreamReader.OnCancelled">
            <summary>
            Completes cancel process.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.AsyncSqlGeospatialDataReader">
            <summary>
            Represents the asynchronous map shape reader for geospatial data in WKB/WKT formats from IEnumerable data source type.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncSqlGeospatialDataReader.GeospatialPropertyName">
            <summary>
            Gets or sets the name of the geospatial data field.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.AsyncSqlGeospatialDataReader.Source">
            <summary>
            Gets or sets the IEnumerable instance.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncSqlGeospatialDataReader.ReadAsync">
            <summary>
            Reads geospatial data using asynchronous mode.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncSqlGeospatialDataReader.ReadAsync(System.Object)">
            <summary>
            Reads geospatial data using asynchronous mode.
            </summary>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.AsyncSqlGeospatialDataReader.OnReaderPropertyChanged(Telerik.WinControls.RadPropertyChangedEventArgs)">
            <summary>
            Occurs when the properties which are used for loading are changed.
            </summary>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundSqlGeospatialDataReader.ReadAsync(Telerik.WinControls.UI.BackgroundReaderBaseParameters)">
            <summary>
            Loads shape data in the background thread. 
            </summary>
            <param name="backgroundParameters">Parameters for loading.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundSqlGeospatialDataReader.GetProgress">
            <summary>
            The progress calculator.
            </summary>
            <returns>The progress in percent.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BackgroundSqlGeospatialDataReader.OnCancelled">
            <summary>
            Completes cancel process.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.BackgroundSqlGeospatialDataReaderParameters">
            <summary>
            Represents the thread safety parameters of the AsyncSqlGeospatialDataReader class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundSqlGeospatialDataReaderParameters.GeospatialPropertyName">
            <summary>
            Gets or sets the name of the geospatial data field.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundSqlGeospatialDataReaderParameters.MarkShapes">
            <summary>
            Gets or sets flag which indicates that the generated shapes should be marked.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BackgroundSqlGeospatialDataReaderParameters.Source">
            <summary>
            Gets or sets the IEnumerable instance.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.BalloonStyle">
            <summary>
            Specifies how the description balloon for place marks is drawn.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BalloonStyle.Background">
            <summary>
            Gets or sets Background color of the balloon (optional). 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BalloonStyle.Foreground">
            <summary>
            Gets or sets foreground color for text. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BalloonStyle.Text">
            <summary>
            Gets or sets text displayed in the balloon.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BalloonStyle.PrepareBalloonContent">
            <summary>
            Prepare balloon content template using style parameters. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.HotSpot.CoordinateSystem">
            <summary>
            Gets or sets coordinate system.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.HotSpot.ElementName">
            <summary>
            Gets or sets name of the child element which is hot spot of the framework element.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.HotspotCoordinateSystem">
            <summary>
            Coordinate system which is used to calculate location of the hotspot inside the element.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.HotspotCoordinateSystem.RadMap">
            <summary>
            The RadMap coordinate system. The point of origin is left-top corner of the element.
            The X is increased from left to right.
            The Y is increased from top to bottom.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.HotspotCoordinateSystem.Kml">
            <summary>
            The Google KML coordinate system. The point of origin is left-bottom corner of the element.
            The X is increased from left to right.
            The Y is increased from bottom to top.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.HotSpotUnit">
            <summary>
            Units are used to position hot spot.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.HotSpotUnit.Fraction">
            <summary>
            Fractions of the icon size.
            The hot spot is inside the icon.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.HotSpotUnit.Pixels">
            <summary>
            Pixels. Distance from the hot spot location to icon.
            The hot spot is outside the icon.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.HotSpotUnit.InsetPixels">
            <summary>
            Offset in pixels from the upper right corner of the icon
            The hot spot is inside the icon.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.IconStyle">
            <summary>
            Represents KML IconStyle element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.IconStyle.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the IconStyle class.
            </summary>
            <param name="iconStyle">IconStyle element to get data from.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.IconStyle.IconUrl">
            <summary>
            Gets or sets icon URL.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.IconStyle.HotSpot">
            <summary>
            Gets or sets hot spot settings.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.IconStyle.Scale">
            <summary>
            Gets or sets icon's scale.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.KmlPlacemarkProperties">
            <summary>
            Represents the KmlPlacemarkProperties class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlPlacemarkProperties.BalloonStyle">
            <summary>
            Balloon style.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlPlacemarkProperties.Description">
            <summary>
            Point description.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlPlacemarkProperties.IconScale">
            <summary>
            Gets or sets icon's scale.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlPlacemarkProperties.IconUrl">
            <summary>
            Icon URI.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlPlacemarkProperties.HotSpot">
            <summary>
            Icon hot spot.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlPlacemarkProperties.Name">
            <summary>
            Point name.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.KmlReader.Read(System.IO.Stream)">
            <summary>
            Reads Kml file from a stream.
            </summary>
            <param name="stream">Stream of Kml file.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.KmlReader.Read(System.IO.Stream,Telerik.WinControls.UI.ExtendedPropertySet)">
            <summary>
            Reads Kml file from a stream.
            </summary>
            <param name="stream">Stream of Kml file.</param>
            <param name="extendedPropertySet">Extended property set for extended data.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.KmlReader.Read(System.String)">
            <summary>
            Reads Kml file from a string.
            </summary>
            <param name="value">String of Kml.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.KmlReader.Read(System.String,Telerik.WinControls.UI.ExtendedPropertySet)">
            <summary>
            Reads Kml file from a string.
            </summary>
            <param name="value">String of Kml.</param>
            <param name="extendedPropertySet">Extended property set for extended data.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.KmlReader.Parse(System.String,System.Boolean)">
            <summary>
            Converts a String representation of the LocationCollection into the equivalent LocationCollection class.
            </summary>
            <param name="source">The String representation of the LocationCollection class.</param>
            <param name="reversed">Indicates whether string contains coordinates in reversed order (Longitude-Latitude like in KML files).</param>
            <returns>The equivalent LocationCollection class.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.KmlReader.PrepareCoordinates(System.String)">
            <summary>
            Prepares coordinates string.
            </summary>
            <param name="coordinates">Coordinates.</param>
            <returns>Prepared coordinates.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.KmlStyle.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the KmlStyle class.
            </summary>
            <param name="style">KML style element to get data from.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlStyle.BalloonStyle">
            <summary>
            Gets or sets balloon style.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlStyle.IconStyle">
            <summary>
            Gets or sets IconStyle.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlStyle.LineStyle">
            <summary>
            Gets or sets line style.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.KmlStyle.PolyStyle">
            <summary>
            Gets or sets polygon style.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.LineStyle">
            <summary>
            Represents KML LineStyle element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.LineStyle.#ctor">
            <summary>
            Initializes a new instance of the LineStyle class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.LineStyle.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the LineStyle class.
            </summary>
            <param name="lineStyle">LineStyle element to get data from.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.LineStyle.Color">
            <summary>
            Gets or sets line color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.LineStyle.Width">
            <summary>
            Gets or sets line width.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.PolyStyle">
            <summary>
            Represents KML PolyStyle element.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PolyStyle.#ctor">
            <summary>
            Initializes a new instance of the PolyStyle class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.PolyStyle.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the PolyStyle class.
            </summary>
            <param name="polyStyle">PolyStyle element to get data from.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.PolyStyle.Color">
            <summary>
            Gets or sets line color.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolyStyle.Fill">
            <summary>
            Gets or sets value which indicates whether the polygon should be filled.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PolyStyle.Outline">
            <summary>
            Gets or sets value which indicates whether the polygon should be outlined.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.DbfEncoding">
            <summary>
            Represents the DbfEncoding class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ShapeFileReader">
            <summary>
            Represents the ShapeFileReader class.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType">
            <summary>
            The ESRI shape type definitions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.NullShape">
            <summary>
            Null Shape.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.Point">
            <summary>
            Point.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.Polyline">
            <summary>
            Polyline.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.Polygon">
            <summary>
            Polygon.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.Multipoint">
            <summary>
            Multipoint.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.PointZ">
            <summary>
            PointZ.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.PolylineZ">
            <summary>
            PolylineZ.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.PolygonZ">
            <summary>
            PolygonZ.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.MultipointZ">
            <summary>
            MultipointZ.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.PointM">
            <summary>
            PointM.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.PolylineM">
            <summary>
            PolylineM.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.PolygonM">
            <summary>
            PolygonM.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.MultipointM">
            <summary>
            MultipointM.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ShapeFileReader.ESRIShapeType.Multipatch">
            <summary>
            Multipatch.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ShapeFileReader.Read(System.IO.Stream)">
            <summary>
            Reads ESRI shape file from a stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="encoding">DBF-file encoding.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,Telerik.WinControls.UI.ExtendedPropertySet)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="extendedPropertySet">The ExtendedPropertySet for data from dbf-file.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,Telerik.WinControls.UI.ExtendedPropertySet,Telerik.WinControls.UI.ICoordinateConverter)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="extendedPropertySet">The ExtendedPropertySet for data from dbf-file.</param>
            <param name="coordinateConverter">The Coordinate Converter.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,Telerik.WinControls.UI.ExtendedPropertySet,System.Text.Encoding)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="extendedPropertySet">The ExtendedPropertySet for data from dbf-file.</param>
            <param name="encoding">DBF-file encoding.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,Telerik.WinControls.UI.ExtendedPropertySet,System.Text.Encoding,Telerik.WinControls.UI.ICoordinateConverter)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="extendedPropertySet">The ExtendedPropertySet for data from dbf-file.</param>
            <param name="encoding">DBF-file encoding.</param>
            <param name="coordinateConverter">The Coordinate Converter.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ShapeFileReader.Read(Telerik.WinControls.UI.ShapeFileReaderParameters)">
            <summary>
            Reads ESRI shape file according to specified parameters.
            </summary>
            <param name="parameters">The parameters of shape-file reader.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.ShapeFileReaderParameters">
            <summary>
            Represents the parameters of shape-file reader.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ShapeFileReaderParameters.ShapeStream">
            <summary>
            Stream of ESRI shape file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ShapeFileReaderParameters.DbfStream">
            <summary>
            Stream of DBF file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ShapeFileReaderParameters.Encoding">
            <summary>
            DBF-file encoding.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ShapeFileReaderParameters.ExtendedPropertySet">
            <summary>
            The ExtendedPropertySet for data from dbf-file.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ShapeFileReaderParameters.CoordinateConverter">
            <summary>
            The Coordinate Converter.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapAirRoute.#ctor(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapAirRoute" /> class.
            </summary>
            <param name="start">The route start.</param>
            <param name="end">The route end.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapAirRoute.Paint(Telerik.WinControls.Paint.IGraphics,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Paints the element to the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapCallout.#ctor(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapCallout"/> class.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapCallout.#ctor(Telerik.WinControls.UI.MapVisualElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapCallout"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapCallout.Distance">
            <summary>
            Gets or sets the distance to the element or location.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapCallout.MaxWidth">
            <summary>
            Gets or sets the maximal width.
            </summary>
            <value>The maximum width.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapCallout.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapCallout.Element">
            <summary>
            Gets the element this callout adorns.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapCallout.ResolveEntityReferences(Telerik.WinControls.UI.MapPoint)">
            <summary>
            Resolves the entity references in the callout text ([$property]).
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLabel.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPathBasedVisualElement.IsInViewport">
            <summary>
            Gets a value indicating whether this instance is visible in the viewport.
            </summary>
            <value><c>true</c> if this instance is visible in the viewport.; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.MapVisualElementInfo">
            <summary>
            This class is used to aid the drawing of map visual elements.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapVisualElementInfo.#ctor(System.Drawing.Drawing2D.GraphicsPath,Telerik.WinControls.UI.Map.PointL)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapVisualElementInfo"/> class.
            </summary>
            <param name="path"></param>
            <param name="offset"></param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElementInfo.Path">
            <summary>
            The path calculated with the provided offset.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElementInfo.Offset">
            <summary>
            The offset used for calculating the path's points.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElementInfo.Bounds">
            <summary>
            The actual bounds as they would be calculated from the geographic location of the visual element.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.IMapElevationProvider.CalculateElevationCompleted">
            <summary>
            Occurs when an elevation calculation request is completed and the result is ready.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.IMapElevationProvider.CalculateElevationError">
            <summary>
            Occurs when the request results in an error.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.IMapElevationProvider.CalculateElevationAsync(Telerik.WinControls.UI.Map.Bing.ElevationRequest)">
            <summary>
            Performs async elevation request.
            Calculates elevation for given list of latitude and longitude pairs. Alternatively can calculate the elevation of equally spaced
            points along a polyline. 
            </summary>
            <param name="request">Elevation request.</param>
        </member>
        <member name="E:Telerik.WinControls.UI.IMapTruckRouteProvider.CalculateTruckRouteCompleted">
            <summary>
            Occurs when a route calculation request is completed and the result is ready.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.IMapTruckRouteProvider.CalculateTruckRouteError">
            <summary>
            Occurs when the request results in an error.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.IMapTruckRouteProvider.CalculateTruckRouteAsync(Telerik.WinControls.UI.Map.Bing.TruckRouteRequest)">
            <summary>
            Performs async routing request.
            Calculates a route between specified stops and returns route directions as well as other route data.
            </summary>
            <param name="request">Route request.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PropertyColorizationStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PropertyColorizationStrategy"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.PropertyColorizationStrategy.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.PropertyColorizationStrategy.PropertyValues">
            <summary>
            Gets or sets the property values.
            </summary>
            <value>The property values.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.PropertyColorizationStrategy.ValueProvider">
            <summary>
            Gets or sets the value provider.
            </summary>
            <value>The value provider.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.PropertyColorizationStrategy.ColorizeElement(Telerik.WinControls.UI.MapGeometry)">
            <summary>
            Colorizes the element.
            </summary>
            <param name="colorizable">The colorizable.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.PropertyColorizationStrategy.GetColorizerColor(System.Object)">
            <summary>
            Gets the color for the give value.
            </summary>
            <param name="value">The value.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.PropertyColorizationStrategy.GetLegendInfo(Telerik.WinControls.UI.MapLegendElement)">
            <summary>
            Gets the information needed by the RadMap legend.
            </summary>
            <param name="mapElement">The map element.</param>
            <returns>List&lt;MapLegendInfoItem&gt;.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.PropertyColorizerItem.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.PropertyColorizerItem"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.PropertyColorizerItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.PropertyColorizerItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Properties.Resources.RadMap">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Properties.Resources.RadMap_VisualStudio_11_0">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.HazardousMaterial">
            <summary>
            Contains options for Hazardous materials.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Combustible">
            <summary>
            Combustible.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Corrosive">
            <summary>
            Corrosive.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Explosive">
            <summary>
            Explosive.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Flammable">
            <summary>
            Flammable.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.FlammableSolid">
            <summary>
            Flammable solid.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Gas">
            <summary>
            Gas.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.GoodsHarmfulToWater">
            <summary>
            Goods harmful to water.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Organic">
            <summary>
            Organic.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Poison">
            <summary>
            Poison.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.PoisonousInhalation">
            <summary>
            Poisonous when inhaled.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousMaterial.Radioactive">
            <summary>
            Radioactive.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.HazardousPermit">
            <summary>
            Contains options for Hazardous permits.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.AllAppropriateForLoad">
            <summary>
            All appropriate for the current load.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.Combustible">
            <summary>
            Combustible.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.Corrosive">
            <summary>
            Corrosive.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.Explosive">
            <summary>
            Explosive.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.Flammable">
            <summary>
            Flammable.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.FlammableSolid">
            <summary>
            Flammable solid.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.Gas">
            <summary>
            Gas.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.Organic">
            <summary>
            Organic.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.Poison">
            <summary>
            Poison.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.PoisonousInhalation">
            <summary>
            Poisonous when inhaled.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.HazardousPermit.Radioactive">
            <summary>
            Radioactive.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteAttributes.RoutePath">
            <summary>
            Include a set of point (latitude and longitude) values that describe the route’s path in the response.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteAvoidance.Highways">
            <summary>
             Avoids the use of highways in the route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteAvoidance.Tolls">
            <summary>
            Avoids the use of toll roads in the route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteAvoidance.MinimizeHighways">
            <summary>
             Minimizes (tries to avoid) the use of highways in the route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteAvoidance.MinimizeTolls">
            <summary>
            Minimizes (tries to avoid) the use of toll roads in the route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteAvoidance.BorderCrossing">
            <summary>
            Avoids crossing country borders in the route.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteBorderRestrictions.RestrictionType">
            <summary>
            Specify whether border crossing should be avoided, allowed, or minimized.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteBorderRestrictions.RestrictionList">
            <summary>
            Defines the list of regions that should be considered for Border Restriction.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteBorderRestrictionType.AvoidCrossing">
            <summary>
             Avoid border or boundary crossing as specified in RestrictionList of <see cref="T:Telerik.WinControls.UI.Map.Bing.TruckRouteBorderRestrictions"/>.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteBorderRestrictionType.MinimizeCrossing">
            <summary>
            Minimize border or boundary crossing as specified in RestrictionList of <see cref="T:Telerik.WinControls.UI.Map.Bing.TruckRouteBorderRestrictions"/>.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteBorderRestrictionType.AllowedRegions">
            <summary>
            Restrict the route only through the specified regions as specified in RestrictionList of <see cref="T:Telerik.WinControls.UI.Map.Bing.TruckRouteBorderRestrictions"/>.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteOptimization.Time">
            <summary>
            The route is calculated to minimize the time. Traffic information is not used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TruckRouteOptimization.TimeWithTraffic">
            <summary>
            The route is calculated to minimize the time and uses current traffic information.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.Avoid">
            <summary>
            Specifies the road types to minimize or avoid when a route is created for the driving travel mode.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.BorderRestrictions">
            <summary>
            Specifies the border crossing preference with respect to countries, dependent territories, special areas of geographical interest, states, subdivision, or provinces
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.DistanceBeforeFirstTurn">
            <summary>
            Specifies the distance before the first turn is allowed in the route. An integer distance specified in meters. Use this parameter to make sure that the moving vehicle has enough distance to make the first turn.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.Heading">
            <summary>
            Specifies the initial heading for the route. An integer value between 0 and 359 that represents degrees from north where north is 0 degrees and the heading is specified clockwise from north. For example, setting the heading of 270 degrees creates a route that initially heads west.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.Optimize">
            <summary>
            Specifies what parameters to use to optimize the route
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.OptimizeWaypoints">
            <summary>
            Instructs the API to rearrange the route waypoints and reduce the route cost specified with the optimize parameter. The route first waypoint and last waypoint order is not changed, their position is considered fixed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.RouteAttributes">
            <summary>
            Specify to include or exclude parts of the routes response.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.DistanceUnit">
            <summary>
            The units to use for distance in the response.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.DateTime">
            <summary>
            When specified and the route is optimized for timeWithTraffic, predictive traffic data is used to calculate the best route for the specified date time of departure.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.Tolerances">
            <summary>
            A set of double values. Each value specifies a tolerance that is used to reduce the number of points needed to display a route on a map and still maintain the route shape. If a point is removed and the new route still falls within the specified tolerance of the old route, then the point is not included in the subset of points returned for that tolerance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteOptions.VehicleSpec">
            <summary>
            The attributes that describe a vehicle.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.Bing.TruckRouteRequest.#ctor">
            <summary>
            Initializes a new instance of the RouteRequest class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteRequest.Options">
            <summary>
            Gets or sets options used to refine the route request.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckRouteRequest.RoutePoints">
            <summary>
            Gets or sets a  collection where each element represents a stop in the route.
            Elements could be <see cref="T:Telerik.WinControls.UI.Waypoint"/> or <see cref="T:Telerik.WinControls.UI.ViaWaypoint"/>. Required.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckWaypoint.Address">
            <summary>
            Gets or sets the address this waypoint represents.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckWaypoint.Latitude">
            <summary>
            Gets or sets the latitude of this waypoint.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckWaypoint.Longitude">
            <summary>
            Gets or sets the longitude of this waypoint.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.TruckWaypoint.IsViaPoint">
            <summary>
            Gets or sets whether this point is a via waypoint.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.VehicleSpec">
            <summary>
            Represents the attributes that describe a vehicle. Used for <see cref="T:Telerik.WinControls.UI.Map.Bing.TruckRouteRequest"/>.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.DimensionUnit">
            <summary>
            The unit of measurement of width, height, length.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.WeightUnit">
            <summary>
            The unit of measurement of weight.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleHeight">
            <summary>
            The height of the vehicle in the specified dimension units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleWidth">
            <summary>
            The width of the vehicle in the specified dimension units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleLength">
            <summary>
            The lenght of the vehicle in the specified dimension units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleWeight">
            <summary>
            The weight of the vehicle in the specified weight units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleAxels">
            <summary>
            The number of axles.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleTrailers">
            <summary>
            The number of trailers.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleSemi">
            <summary>
            Indicates if the truck is pulling a semi-trailer. Semi-trailer restrictions are mostly used in North America.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleMaxGradient">
            <summary>
            The maximum gradient the vehicle can drive measured in degrees.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleMinTurnRadius">
            <summary>
            The minimum required radius for the vehicle to turn in the specified dimension units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleAvoidCrossWinds">
            <summary>
            Indicates if the vehicle shall avoid crosswinds.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleAvoidGroundingRisk">
            <summary>
            Indicates if the route shall avoid the risk of grounding.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleHazardousMaterials">
            <summary>
            List of one or more hazardous materials for which the vehicle is transporting.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.VehicleSpec.VehicleHazardousPermits">
            <summary>
            List of one or more hazardous materials for which the vehicle has a permit.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.ElevationHeights">
            <summary>
            Specifies which sea level model to use to calculate elevation.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ElevationHeights.SeaLevel">
            <summary>
            Use the geoid Earth model (EGM2008 2.5').
            </summary>   
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ElevationHeights.Ellipsoid">
            <summary>
            Use the ellipsoid Earth model (WGS84).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.Bing.ElevationRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.Bing.ElevationRequest"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ElevationRequest.ElevationType">
            <summary>
            Gets or sets the type of the elevation to be calculated.
            </summary>
            <value>The type of the elevation.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ElevationRequest.Points">
            <summary>
            Gets or sets a set of coordinates on the Earth to use in elevation calculations. 
            The exact use of these points depends on the type of elevation request.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ElevationRequest.Bounds">
            <summary>
            Gets or sets the rectangular area over which to provide elevation values.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ElevationRequest.Rows">
            <summary>
            Gets or sets the number of rows to use to divide the bounding box area into a grid. 
            The rows that define the bounding box each count as two (2) of the rows. 
            Elevation values are returned for all vertices of the grid.
            Integers with a value of two 2 or greater. The number of rows and columns can define a maximum of 1024 locations (rows * cols &lt;= 1024).
            </summary>
            <value>The rows.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ElevationRequest.Columns">
            <summary>
            Gets or sets the number of columns to use to divide the bounding box area into a grid. 
            The columns that define the bounding box each count as two (2) of the columns. 
            Elevation values are returned for all vertices of the grid.
            Integers with a value of two 2 or greater. The number of rows and columns can define a maximum of 1024 locations (rows * cols &lt;= 1024).
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ElevationRequest.Samples">
            <summary>
            Gets or sets the number of equally-spaced elevation values to provide along a polyline path.
            A positive integer. The maximum number of samples is 1024.
            </summary>
            <value>The samples.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ElevationRequest.Options">
            <summary>
            Gets or sets the optional parameters for an elevation request.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ElevationRequest.UserData">
            <summary>
            Gets or sets user data.
            This data will be passed to the response which corresponds to this request.
            It can be used to identify request-response pair, for example.
            User data can be obtain from the response through the RequestUserData property.
            </summary>
            <value>The user data.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.ElevationType">
            <summary>
            Defines the different types of elevation requests that can be performed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ElevationType.List">
            <summary>
            Get elevations for latitude and longitude coordinates.
            Required parameters of the <see cref="T:Telerik.WinControls.UI.Map.Bing.ElevationRequest"/>: Points
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ElevationType.Polyline">
            <summary>
            Get elevations at equally-spaced locations along a polyline path.
            Required parameters of the <see cref="T:Telerik.WinControls.UI.Map.Bing.ElevationRequest"/>: Points, Samples
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ElevationType.Bounds">
            <summary>
            Get elevations at equally-spaced locations within an area on the Earth defined as a bounding box.
            Required parameters of the <see cref="T:Telerik.WinControls.UI.Map.Bing.ElevationRequest"/>: Bounds, Rows, Columns
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ElevationType.SeaLevel">
            <summary>
            Get the offset of the geoid sea level Earth model from the ellipsoid Earth model at a set of latitude and longitude coordinates.
            Required parameters of the <see cref="T:Telerik.WinControls.UI.Map.Bing.ElevationRequest"/>: Points
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.SearchRequest">
            <summary>
            Represents unified search request.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.Bing.SearchRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.Bing.SearchRequest"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.SearchRequest.Query">
            <summary>
            A string containing the query to parse and match to a search result.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.SearchRequest.SearchOptions">
            <summary>
            Search options which can be used to refine the search request.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.RouteAvoidance">
            <summary>
            Contains road types to minimize or avoid.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAvoidance.None">
            <summary>
            Use all roads.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAvoidance.Highways">
            <summary>
            Avoids the use of highways in the route. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAvoidance.Tolls">
            <summary>
            Avoids the use of toll roads in the route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAvoidance.Ferry">
            <summary>
            Avoids the use of ferries in the route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAvoidance.MinimizeHighways">
            <summary>
            Minimizes (tries to avoid) the use of highways in the route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAvoidance.MinimizeTolls">
            <summary>
            Minimizes (tries to avoid) the use of toll roads in the route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAvoidance.BorderCrossing">
            <summary>
            Avoids crossing country borders in the route.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.RouteOptimization">
            <summary>
            Contains values that represent route calculation methods.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteOptimization.Distance">
            <summary>
            The route is calculated to minimize the total distance. Traffic information is not used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteOptimization.Time">
            <summary>
            The route is calculated to minimize the total time. Traffic information is not used.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteOptimization.TimeWithTraffic">
            <summary>
            The route is calculated to minimize the time and uses current traffic information.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteOptimization.TimeAvoidClosure">
            <summary>
            The route is calculated to minimize the time and avoid road closures. Traffic information is not used. 
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.RouteOptions">
            <summary>
            Contains properties used to refine a route service request.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.Bing.RouteOptions.#ctor">
            <summary>
            Initializes a new instance of the RouteOptions class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.Mode">
            <summary>
            Gets or sets type of directions to return. The default value is TravelMode.Driving.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.Optimization">
            <summary>
            Gets or sets the calculation method to use. The default value is RouteOptimization.MinimizeTime. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.RouteAttributes">
            <summary>
            Gets or sets whether to include or exclude parts of the routes response. The default value is RouteAttributes.ExcludeItinerary. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.RouteAvoidance">
            <summary>
            Gets or sets value specifying how traffic information is used in the route calculation. The default value is TrafficUsage.None.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.DistanceBeforeFirstTurn">
            <summary>
            Specifies the distance before the first turn is allowed in the route. This option only applies to the driving travel mode.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.Heading">
            <summary>
            An integer value between 0 and 359 that represents degrees from north where north is 0 degrees and the heading is specified clockwise from north.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.Tolerances">
            <summary>
            Specifies a series of tolerance values. Each value produces a subset of points that approximates the route that is described by the full set of points.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.DateTime">
            <summary>
            When specified and the route is optimized for timeWithTraffic, predictive traffic data is used to calculate the best route for the specified date time.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteOptions.MaxSolutions">
            <summary>
            Specifies the maximum number of driving routes to return.
            Should be an integer value between 1 and 3. The default value is 1.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.RouteAttributes">
            <summary>
            Contains route attributes that modify the result returned by a route calculation request.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAttributes.ExcludeItinerary">
            <summary>
            Do not include detailed directions in the response. Detailed directions are provided as itinerary items and contain details such as written instructions and traffic location codes.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAttributes.RoutePath">
            <summary>
            Include a set of point (latitude and longitude) values that describe the route’s path in the response.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAttributes.RouteSummariesOnly">
            <summary>
            Include only travel time and distance for the route, and do not provide other information. 
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.RouteAttributes.All">
            <summary>
            Used to specify the following attributes as a group: ExcluteItinerary and RoutePath.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.RouteRequest">
            <summary>
            Contains the properties needed to make a CalculateRoute request. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.Bing.RouteRequest.#ctor">
            <summary>
            Initializes a new instance of the RouteRequest class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteRequest.Options">
            <summary>
            Gets or sets options used to refine the route request.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteRequest.Waypoints">
            <summary>
            Gets or sets a  collection where each element represents a stop in the route. Required. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.RouteRequest.RoutePoints">
            <summary>
            Gets or sets a  collection where each element represents a stop in the route.
            Elements could be <see cref="T:Telerik.WinControls.UI.Waypoint"/> or <see cref="T:Telerik.WinControls.UI.ViaWaypoint"/>. Required.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.TravelMode">
            <summary>
            Contains travel modes for a route.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TravelMode.Driving">
            <summary>
            The returned route contains driving directions.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.TravelMode.Walking">
            <summary>
            The returned route contains walking directions.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.BingPointG.Coordinates">
            <summary>
            Latitude,Longitude
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse">
            <summary>
            The response to a Bing Maps REST Services Imagery Metadata request.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse.AuthenticationResultCode">
            <summary>
            Gets or sets status code that offers additional information about authentication success or failure.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse.BrandLogoUri">
            <summary>
            Gets or sets a URL that references a brand image to support contractual branding requirements.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse.Copyright">
            <summary>
            Gets or sets a copyright notice.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse.ErrorDetails">
            <summary>
            Gets or sets a collection of error descriptions. 
            For example, ErrorDetails can identify parameter values that are not valid or missing.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse.ResourceSets">
            <summary>
            Gets or sets a collection of ResourceSet objects. 
            A ResourceSet is a container of Resources returned by the request. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse.StatusCode">
            <summary>
            Gets or sets the HTTP Status code for the request.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse.StatusDescription">
            <summary>
            Gets or sets the description of the HTTP status code.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResponse.TraceId">
            <summary>
            Gets or sets a unique identifier for the request.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResourceSet">
            <summary>
            The ResourceSet container.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResourceSet.EstimatedTotal">
            <summary>
            Gets or sets an estimate of the total number of resources in the ResourceSet.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.Bing.ImageryMetadataResourceSet.Resources">
            <summary>
            Gets or sets a collection of one or more imagery metadata resources.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.Bing.ImagerySet">
            <summary>
            The type of imagery.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.Aerial">
            <summary>
            Aerial imagery.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.AerialWithLabels">
            <summary>
            Aerial imagery with a road overlay.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.AerialWithLabelsOnDemand">
            <summary>
            Aerial imagery with on-demand road overlay.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.Road">
            <summary>
            Roads without additional imagery.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.RoadOnDemand">
            <summary>
            Roads without additional imagery. Uses the dynamic tile service.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.CanvasDark">
            <summary>
            A dark version of the road maps.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.CanvasLight">
            <summary>
            A lighter version of the road maps which also has some of the details such as hill shading disabled.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.CanvasGray">
            <summary>
            A grayscale version of the road maps.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.Bing.ImagerySet.OrdnanceSurvey">
            <summary>
            Ordnance Survey imagery. This imagery is visible only for the London area.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.PointL">
            <summary>
            Represents a point in cartesian coordinates represented with Int64 values.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.PointL.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.PointL"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.PointL.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.PointL.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.PointL.Offset(System.Int64,System.Int64)">
            <summary>
            Offsets this point with the specified delta.
            </summary>
            <param name="deltaX">The delta x.</param>
            <param name="deltaY">The delta y.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.PointL.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.PointL.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.PointG">
            <summary>
            Represents a point in Geographic coordinate system, defined by Latitude and Longitude.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.PointG.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.PointG"/> struct.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.PointG.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.PointG.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.PointG.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.PointG.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.RectangleL">
            <summary>
            Represents a rectangle in cartesian coordinate system represented with Int64 values.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.Map.RectangleL.Empty">
            <summary>
            Gets an empty RectangleL
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.#ctor(Telerik.WinControls.UI.Map.PointL,Telerik.WinControls.UI.Map.SizeL)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.RectangleL" /> struct.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.#ctor(System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.RectangleL" /> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleL.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
            <value>The x coordinate.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleL.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
            <value>The y coordinate.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleL.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleL.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleL.Right">
            <summary>
            Gets the right coordinate.
            </summary>
            <value>The right coordinate.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleL.Bottom">
            <summary>
            Gets the bottom coordinate.
            </summary>
            <value>The bottom coordinate.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleL.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleL.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.IntersectsWith(Telerik.WinControls.UI.Map.RectangleL)">
            <summary>
            Gets a value indicating whether this rectangle intersects with the provided one.
            </summary>
            <param name="rect">The rect.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.Offset(System.Int64,System.Int64)">
            <summary>
            Offsets this rectangle with the specified delta.
            </summary>
            <param name="deltaX">The delta x.</param>
            <param name="deltaY">The delta y.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.Offset(Telerik.WinControls.UI.Map.SizeL)">
            <summary>
            Offsets this rectangle with the specified delta.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.Contains(Telerik.WinControls.UI.Map.PointL)">
            <summary>
            Determines whether this rectangle contains the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns><c>true</c> if this rectangle contains the specified point; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.Contains(System.Int64,System.Int64)">
            <summary>
            Determines whether this rectangle contains the specified point.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns><c>true</c> if  this rectangle contains the specified point; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleL.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.RectangleG">
            <summary>
            Represents a rectangle in Geographic coordinate system.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleG.GetBoundingRectangle(System.Collections.Generic.IEnumerable{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Gets the bounding rectangle for the specified collection of points.
            </summary>
            <param name="points">The points.</param>
            <returns>RectangleG.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleG.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.RectangleG"/> struct.
            </summary>
            <param name="north">The north.</param>
            <param name="west">The west.</param>
            <param name="south">The south.</param>
            <param name="east">The east.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleG.NorthWest">
            <summary>
            Gets or sets the north-west corner of the rectangle.
            </summary>
            <value>The north-west corner.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleG.SouthEast">
            <summary>
            Gets or sets the south-east corner of the rectangle.
            </summary>
            <value>The south-east corner.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleG.North">
            <summary>
            Gets or sets the north.
            </summary>
            <value>The north.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleG.West">
            <summary>
            Gets or sets the west.
            </summary>
            <value>The west.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleG.South">
            <summary>
            Gets or sets the south.
            </summary>
            <value>The south.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.RectangleG.East">
            <summary>
            Gets or sets the east.
            </summary>
            <value>The east.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleG.Contains(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Determines whether this rectangle contains the specified point.
            </summary>
            <param name="location">The location.</param>
            <returns><c>true</c> if this rectangle contains the specified point; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleG.IntersectsWith(Telerik.WinControls.UI.Map.RectangleG)">
            <summary>
            Gets a value indicating whether this rectangle intersects with the provided one.
            </summary>
            <param name="rect">The rect.</param>
            <returns><c>true</c> if this rectangle intersects with the provided one, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleG.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.RectangleG.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.SizeG">
            <summary>
            Represents a size in Geographic coordinate system.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.SizeG.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.SizeG"/> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.SizeG.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.SizeG.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.SizeG.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.SizeG.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.Map.SizeL">
            <summary>
            Represents a size represented with Int64 values.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.SizeL.#ctor(System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.Map.SizeL"/> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.SizeL.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.Map.SizeL.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.SizeL.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.Map.SizeL.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.BaseMapElement"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.Providers">
            <summary>
            Gets the providers collection of the map element.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.Layers">
            <summary>
            Gets the layers collection of the map element.
            </summary>
            <value>The layers.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.InputBehavior">
            <summary>
            Gets or sets the input behavior that will handle the user input.
            </summary>
            <value>The input behavior.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.IsAnimationActive">
            <summary>
            Gets a value indicating whether an animation is active.
            </summary>
            <value><c>true</c> if an animation is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.TileScale">
            <summary>
            Gets or sets the tile scale. This property is used for animations of the viewport.
            </summary>
            <value>The tile scale.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.TileOffset">
            <summary>
            Gets or sets the tile offset. This property is used for animations of the viewport.
            </summary>
            <value>The tile offset.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.SelectedElements">
            <summary>
            Gets a collection of the selected elements.
            </summary>
            <value>The selected elements.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.EnableZooming">
            <summary>
            Gets or sets a value indicating whether zooming is allowed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.EnablePanning">
            <summary>
            Gets or sets a value indicating whether panning is allowed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.Pan(Telerik.WinControls.UI.Map.SizeL)">
            <summary>
            Pans the viewport with the specified delta.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.Pan(System.Int64,System.Int64)">
            <summary>
            Pans the viewport to the specified x and y coordinates.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.Zoom(System.Int32)">
            <summary>
            Zooms the viewport to the specified zoom level.
            </summary>
            <param name="zoomLevel">The zoom level.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.Zoom(System.Int32,System.Boolean)">
            <summary>
            Zooms the viewport to the specified zoom level.
            </summary>
            <param name="zoomLevel">The zoom level.</param>
            <param name="animate">if set to <c>true</c> the zoom will be animated.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.Zoom(System.Int32,System.Boolean,System.Drawing.Point)">
            <summary>
            Zooms the viewport to the specified zoom level.
            </summary>
            <param name="zoomLevel">The zoom level.</param>
            <param name="animate">if set to <c>true</c> the zoom will be animated.</param>
            <param name="center">The point in the viewport around where the zoom should be performed.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.IsUpdateSuspended">
            <summary>
            Gets a value indicating whether updates are suspended.
            </summary>
            <value><c>true</c> if updates are suspended; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.BeginUpdate">
            <summary>
            Suspends updates.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.EndUpdate">
            <summary>
            Resumes updates and performs an update.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.EndUpdate(System.Boolean)">
            <summary>
            Resumes updates and performs an update if specified by the update parameter.
            </summary>
            <param name="update">if set to <c>true</c> an update is performed.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.OnScaleAnimationFinished(System.Object,Telerik.WinControls.AnimationStatusEventArgs)">
            <summary>
            Called when a zoom animation finishes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Telerik.WinControls.AnimationStatusEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.OnViewportChanged(Telerik.WinControls.UI.ViewportChangeAction)">
            <summary>
            Called after the viewport changes.
            </summary>
            <param name="action">The change action.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.OnProviderInitializationComplete(Telerik.WinControls.UI.IMapProvider)">
            <summary>
            Called when a map provider is initialized.
            </summary>
            <param name="mapProvider">The map provider.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.OnProviderUpdated(Telerik.WinControls.UI.IMapProvider)">
            <summary>
            Called when a provider updated occurs.
            </summary>
            <param name="mapProvider">The map provider that was updated.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.BringIntoView(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Brings the specified geo point into the center of the viewport.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.BringIntoView(Telerik.WinControls.UI.Map.PointG,System.Int32)">
            <summary>
            Brings the specified geo point into the center of the viewport and zooms the viewport to the specified zoom level.
            </summary>
            <param name="location">The location.</param>
            <param name="zoomLevel">The zoom level.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.BringIntoView(Telerik.WinControls.UI.Map.RectangleG)">
            <summary>
            Calculates the best zoom level that will fit the specified rectangle and centers it in the viewport.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.PaintElement(Telerik.WinControls.Paint.IGraphics)">
            <summary>
            Paints the element, the providers content and the layers.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.PaintZoomImage(Telerik.WinControls.Paint.IGraphics)">
            <summary>
            Paints the zoom image whild a zoom animation is ongoing.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.PaintProvidersContent(Telerik.WinControls.Paint.IGraphics)">
            <summary>
            Paints the content of the providers.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.PaintLayers(Telerik.WinControls.Paint.IGraphics)">
            <summary>
            Paints the content of the layers.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="E:Telerik.WinControls.UI.BaseMapElement.SelectionChanged">
            <summary>
            Occurs when the selection changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.OnSelectionChanged(Telerik.WinControls.UI.MapSelectionChangedEventArgs)">
            <summary>
            Fires the <see cref="E:SelectionChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.MapSelectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Telerik.WinControls.UI.BaseMapElement.ViewportChanged">
            <summary>
            Occurs when the viewport changed.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.BaseMapElement.OnViewportChanged(Telerik.WinControls.UI.ViewportChangedEventArgs)">
            <summary>
            Fires the <see cref="E:ViewportChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.ViewportChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.Center">
            <summary>
            Gets or sets the center of the viewport in geo coordinates.
            </summary>
            <value>The center.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.CenterPixel">
            <summary>
            Gets or sets the coordinates of the center of the viewport in pixels.
            </summary>
            <value>The center pixel.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.Viewport">
            <summary>
            Gets or sets the currently visible viewport in geo coordinates.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.ViewportInPixels">
            <summary>
            Gets or sets the viewport in pixels.
            </summary>
            <value>The viewport in pixels.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.Wraparound">
            <summary>
            Gets or sets a value indicating whether wraparound is enabled.
            </summary>
            <value><c>true</c> if wraparound is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.NumberOfWraparounds">
            <summary>
            Gets the number of wraparounds visible in the viewport.
            </summary>
            <value>The number of wraparounds.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.PanOffset">
            <summary>
            Gets or sets the current pan offset of the viewport in pixels.
            </summary>
            <value>The pan offset.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BaseMapElement.ZoomLevel">
            <summary>
            Gets or sets the current zoom level.
            </summary>
            <value>The zoom level.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.RequestBase">
            <summary>
            Base class for all requests.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RequestBase.#ctor">
            <summary>
            Initializes a new instance of the BaseRequest class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RequestBase.Culture">
            <summary>
            The culture in which to return results.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RequestBase.CurrentLocation">
            <summary>
            Gets or sets the current location of the user. Optional. Set this property before making a service request.
            </summary>
            <value>The current location.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RequestBase.CurrentIP">
            <summary>
            Gets or sets the current ip of the user. Optional. IPv4 format. Set this property before making a service request.
            </summary>
            <value>The current ip.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RequestBase.DistanceUnit">
            <summary>
            Gets or sets distance unit.
            </summary>
            <value>The distance unit.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RequestBase.UserData">
            <summary>
            Gets or sets user data.
            This data will be passed to the response which corresponds to this request.
            It can be used to identify request-response pair, for example.
            User data can be obtain from the response through the RequestUserData property.
            </summary>
            <value>The user data.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.DistanceUnit">
            <summary>
            This enumeration specifies map distance unit.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.DistanceUnit.Kilometer">
            <summary>
            The Kilometer unit.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.DistanceUnit.Mile">
            <summary>
            The Mile unit (1609.344 m).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapSelectionChangedEventArgs.#ctor(System.Collections.Generic.ICollection{Telerik.WinControls.UI.MapVisualElement})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapSelectionChangedEventArgs"/> class.
            </summary>
            <param name="selectedElements">The selected elements.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSelectionChangedEventArgs.SelectedElements">
            <summary>
            Gets the selected elements.
            </summary>
            <value>The selected elements.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.ViewportChangedEventArgs.#ctor(Telerik.WinControls.UI.IMapViewport,Telerik.WinControls.UI.ViewportChangeAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ViewportChangedEventArgs"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="action">The action.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ViewportChangedEventArgs.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.ViewportChangedEventArgs.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.CoordinateConverters">
            <summary>
            Coordinate Converters converter.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.CoordinateConverters.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type
            to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type" /> that represents the type
            you want to convert from.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.CoordinateConverters.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified
            type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type" /> that represents the
            type you want to convert to.</param>
            <returns>
            True if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.CoordinateConverters.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified
            context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to
            use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.
            </exception>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.CoordinateConverters.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If
            null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object" /> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type" /> to convert the
            <paramref name="value" /> parameter to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType" />
            parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.
            </exception>
            <returns>
            An <see cref="T:System.Object" /> that represents the converted value.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.CoordinateConverters.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can
            be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context.</param>
            <returns>
            True if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />
            should be called to find a common set of values the object supports; otherwise,
            false.
            </returns>
        </member>
        <member name="M:Telerik.WinControls.UI.CoordinateConverters.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type
            converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />
            that provides a format context that can be used to extract additional information
            about the environment from which this converter is invoked. This parameter or
            properties of this parameter can be null.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
            that holds a standard set of valid values, or null if the data type does not
            support a standard set of values.
            </returns>
        </member>
        <member name="T:Telerik.WinControls.UI.EPSG900913Converter">
            <summary>
            Convert co-ordinates between WGS-84 and EPSG:900913.
            Also known as EPSG:3857 and Pseudo-Mercator projection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.EPSG900913Converter.ConvertBack(System.Collections.Generic.List{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Convert from the collection of coordinates are given
            in the form specific for the coordinate system other than WGS 1984
            to the collection of the WGS 1984 coordinates.
            </summary>
            <param name="collection">Collection of coordinates are given
            in the form specific for the coordinate system.</param>
            <returns>Converted collection.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.EPSG900913Converter.ConvertTo(System.Collections.Generic.List{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Convert from the collection of coordinates are given
            in the WGS 1984 coordinates to the form specific for the coordinate 
            system other than WGS 1984.
            </summary>
            <param name="collection">Collection of coordinates are given
            in the form specific for the coordinate system.</param>
            <returns>Converted collection.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.EPSG900913Converter.FromLocation(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts from the latitude/longitude to the representation 
            specific for the coordinate system other than WGS 1984.
            </summary>
            <param name="location">Location to be converter.</param>
            <returns>Coordinate system specific location.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.EPSG900913Converter.ToString(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts Location to Coordinate system specific string.
            </summary>
            <param name="location">Location.</param>
            <returns>Coordinate system specific string.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.EPSG900913Converter.ToLocation(System.Object)">
            <summary>
            Convert OS grid reference to the WGS 1984 latitude/longitude.
            </summary>
            <param name="coordinates">OS grid reference. Can be string which
            represents standard grid reference, or Point object which represents
            fully numeric reference.</param>
            <returns>Location.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.SqlGeospatialDataReader.ExtendedPropertySet">
            <summary>
            Gets or sets extended property set which will be
            used during shape file (KML or ESRI) reading.
            </summary>
            <remarks>Can be null. In this case extended property set will be created depends on the
            extended data available in the KML file or in the attributes file (DBF).</remarks>
        </member>
        <member name="P:Telerik.WinControls.UI.SqlGeospatialDataReader.CoordinateConverter">
            <summary>
            Gets or sets the CoordinateConverter applied to the reader.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SqlGeospatialDataReader.Source">
            <summary>
            Gets or sets the IEnumerable instance.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SqlGeospatialDataReader.GeospatialPropertyName">
            <summary>
            Gets or sets the name of the geospatial data field.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.SqlGeospatialDataReader.Read">
            <summary>
            Reads shapes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.SqlGeospatialDataReader.Read(System.Object)">
            <summary>
            Reads shapes.
            </summary>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.SqlGeospatialDataReader.Read(System.Collections.IEnumerable,System.String)">
            <summary>
            Reads shapes from the IEnumerable instance.
            </summary>
            <param name="itemsSource">The IEnumerable instance.</param>
            <param name="geospatialPropertyName">The Name of property which contains geospatial data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.SqlGeospatialDataReader.Read(System.Collections.IEnumerable,System.String,System.Object)">
            <summary>
            Reads shapes from the IEnumerable instance.
            </summary>
            <param name="itemsSource">The IEnumerable instance.</param>
            <param name="geospatialPropertyName">The Name of property which contains geospatial data.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.SqlGeospatialDataReader.Read(System.Collections.IEnumerable,System.String,System.Boolean,System.Object)">
            <summary>
            Reads shapes from the IEnumerable instance.
            </summary>
            <param name="itemsSource">The IEnumerable instance.</param>
            <param name="geospatialPropertyName">The Name of property which contains geospatial data.</param>
            <param name="markShapes">if set to <c>true</c> read shapes are marked with this reader.</param>
            <param name="userState">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <returns>List&lt;MapVisualElement&gt;.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.EntityReferencesHelper.ResolveEntityReferences(System.String,Telerik.WinControls.UI.ExtendedData)">
            <summary>
            Resolves the entity references in the provided text ([$property]).
            </summary>
            <param name="originalText">The original text.</param>
            <param name="extendedData">The extended data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.MapInputBehavior.MapElement">
            <summary>
            Gets the MapElement this behavior is associated with.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapInputBehavior.MaxZoomDelta">
            <summary>
            Gets the maximum amount of zoom levels that can be changed at once when using the mouse wheel.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapInputBehavior.PanDelta">
            <summary>
            Gets or sets the number of pixels the map is moved when using the keyboard keys to pan.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapLegendElement"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.#ctor(Telerik.WinControls.UI.IMapLegendInfoProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapLegendElement"/> class.
            </summary>
            <param name="legendInfoProvider">The legend information provider.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.CreateTitleElement">
            <summary>
            Creates a title element.
            </summary>
            <returns>MapLegendTitleElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.CreateSubtitleElement">
            <summary>
            Creates a subtitle element.
            </summary>
            <returns>MapLegendTitleElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.CreateStackLayoutElement">
            <summary>
            Creates a stack layout element.
            </summary>
            <returns>StackLayoutElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.CreateItemsStackLayoutElement">
            <summary>
            Creates a item stack layout element.
            </summary>
            <returns>StackLayoutElement.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.LegendInfoProvider">
            <summary>
            Gets or sets the legend information provider.
            </summary>
            <value>The legend information provider.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.TitleElement">
            <summary>
            Gets the title element.
            </summary>
            <value>The title element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.SubtitleElement">
            <summary>
            Gets the title element.
            </summary>
            <value>The title element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.StackElement">
            <summary>
            Gets the stack element.
            </summary>
            <value>The stack element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.ItemStackElement">
            <summary>
            Gets the item stack element.
            </summary>
            <value>The item stack element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.Converter">
            <summary>
            Gets or sets the converter used for converting an item to the text that will be displayed for it.
            </summary>
            <value>The converter.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.Orientation">
            <summary>
            Gets or sets the orientation of the items in the legend.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.VerticalOrientationItemSpacing">
            <summary>
            Gets or sets the item spacing when the orientation of the legend is vertical.
            </summary>
            <value>The item spacing.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendElement.HorizontalOrientationItemSpacing">
            <summary>
            Gets or sets the item spacing when the orientation of the legend is vertical.
            </summary>
            <value>The item spacing.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.Initialize">
            <summary>
            Initializes the items in the legend based on the LegendInfoProvider.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.GetDisplayText(Telerik.WinControls.UI.MapLegendInfoItem)">
            <summary>
            Gets the display text for a given item.
            </summary>
            <param name="item">The item.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendElement.CreateMapLegendItemElement(Telerik.WinControls.UI.MapLegendInfoItem)">
            <summary>
            Creates a map legend item element base on the provided item.
            </summary>
            <param name="item">The item.</param>
            <returns>MapLegendItemElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendInfoItem.#ctor(System.String,System.Drawing.Color,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapLegendInfoItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="color">The color.</param>
            <param name="itemValue">The item value.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendInfoItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendInfoItem.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendInfoItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendItemElement.CreateColorElement">
            <summary>
            Creates the color element.
            </summary>
            <returns>MapLegendItemColorElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendItemElement.CreateTextElement">
            <summary>
            Creates the text element.
            </summary>
            <returns>MapLegendItemTextElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendItemElement.#ctor(Telerik.WinControls.UI.MapLegendInfoItem,System.String,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapLegendItemElement"/> class.
            </summary>
            <param name="item">The item.</param>
            <param name="text">The text.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLegendItemElement.#ctor(System.String,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapLegendItemElement"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="color">The color.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendItemElement.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendItemElement.ColorElement">
            <summary>
            Gets the color element.
            </summary>
            <value>The color element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendItemElement.TextElement">
            <summary>
            Gets the text element.
            </summary>
            <value>The text element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLegendItemElement.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationBarElement.CreateZoomInButton">
            <summary>
            Creates a zoom in button.
            </summary>
            <returns>MapZoomInButton.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationBarElement.CreateZoomOutButton">
            <summary>
            Creates a zoom out button.
            </summary>
            <returns>MapZoomOutButton.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationBarElement.CreateViewButton">
            <summary>
            Creates a view button.
            </summary>
            <returns>MapViewButton.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationBarElement.CreateNavigationElement">
            <summary>
            Creates a navigation element.
            </summary>
            <returns>MapNavigationElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationBarElement.#ctor(Telerik.WinControls.UI.RadMapElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapNavigationBarElement"/> class.
            </summary>
            <param name="mapElement">The map element.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationBarElement.MapElement">
            <summary>
            Gets the map element.
            </summary>
            <value>The map element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationBarElement.ZoomInButton">
            <summary>
            Gets the zoom in button.
            </summary>
            <value>The zoom in button.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationBarElement.ZoomOutButton">
            <summary>
            Gets the zoom out button.
            </summary>
            <value>The zoom out button.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationBarElement.ViewButton">
            <summary>
            Gets the view button.
            </summary>
            <value>The view button.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationBarElement.MapNavigationElement">
            <summary>
            Gets the map navigation element.
            </summary>
            <value>The map navigation element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.MapElement">
            <summary>
            Gets the map element.
            </summary>
            <value>The map element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.MiniMapMode">
            <summary>
            Gets or sets the mini map mode.
            </summary>
            <value>The mini map mode.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.ZoomLevel">
            <summary>
            Gets or sets the current zoom level.
            </summary>
            <value>The zoom level.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.ZoomOffset">
            <summary>
            Gets or sets the zoom offset. This property is used when the MiniMapMode is set to OffsetZoom.
            </summary>
            <value>The zoom offset.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.ToggleMiniMapButton">
            <summary>
            Gets the toggle mini map button.
            </summary>
            <value>The toggle mini map button.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.MiniMapSize">
            <summary>
            Gets or sets the size of the mini map.
            </summary>
            <value>The size of the mini map.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.IsCollapsed">
            <summary>
            Gets or sets a value indicating whether this instance is collapsed.
            </summary>
            <value><c>true</c> if this instance is collapsed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.ViewportControlBackColor">
            <summary>
            Gets or sets the back color of the viewport control.
            </summary>
            <value>The color of the viewport control back.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.ViewportControlBorderColor">
            <summary>
            Gets or sets the border color of the viewport control.
            </summary>
            <value>The color of the viewport control border.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MiniMapElement.IsAnimating">
            <summary>
            Gets a value indicating whether a collapse or expand animation is currently active.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.Subscribe">
            <summary>
            Subscribes to the map viewport events that affect the mini map.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.Unsubscribe">
            <summary>
            Unsubscribes to the map viewport events that affect the mini map.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.SetMapElement(Telerik.WinControls.UI.RadMapElement)">
            <summary>
            Sets the map element.
            </summary>
            <param name="mapElement">The map element.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.SetMiniMapMode(Telerik.WinControls.UI.MiniMapMode)">
            <summary>
            Sets the mini map mode.
            </summary>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.OnProviderInitializationComplete(Telerik.WinControls.UI.IMapProvider)">
            <summary>
            Called when a map provider is initialized.
            </summary>
            <param name="mapProvider">The map provider.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.OnMapElementViewportChanged(System.Object,Telerik.WinControls.UI.ViewportChangedEventArgs)">
            <summary>
            Handles the MapElement ViewportChanged event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.ViewportChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.Collapse">
            <summary>
            Collapses the mini map.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.Expand">
            <summary>
            Expands the mini map.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.PaintWholeWorldMiniMap(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Paints the mini map when the mode is set to WholeWorld.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="angle">The angle.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.PaintStaticMiniMap(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Paints the mini map when the mode is set to StaticZoom.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="angle">The angle.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.PaintDynamicMiniMap(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Paints the mini map when the mode is set to OffsetZoom.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="angle">The angle.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MiniMapElement.DrawViewportControlRectangle(Telerik.WinControls.Paint.IGraphics,System.Single,System.Drawing.SizeF)">
            <summary>
            Draws the viewport control rectangle.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="angle">The angle.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.MiniMapMode">
            <summary>
            Defines the different modes in which the RadMap mini map can operate.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.MiniMapMode.WholeWorld">
            <summary>
            The mini map will show the whole world map at zoom level 1.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.MiniMapMode.StaticZoom">
            <summary>
            The mini map will show a fixed zoom level at all times. Use the BringIntoView method to position the map at the required location and zoom level.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.MiniMapMode.OffsetZoom">
            <summary>
            The mini map will show a dynamic zoom level offset from the main map view. Use the ZoomLevelOffset property to define the offset.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapCluster.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapCluster"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapCluster.ClusteredItems">
            <summary>
            Gets the clustered items.
            </summary>
            <value>The clustered items.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapCluster.GetItemsBoundingRectangle">
            <summary>
            Gets the items bounding rectangle.
            </summary>
            <returns>RectangleG.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.DistanceClusterStrategy.GenerateClusters(System.Collections.Generic.IEnumerable{Telerik.WinControls.UI.IClusterable},System.Int64,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Generates the clusters.
            </summary>
            <param name="items">The items.</param>
            <param name="distance">The distance.</param>
            <param name="viewport">The viewport.</param>
            <returns>List&lt;Cluster&gt;.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.DistanceClusterStrategy.GetCoordinatesAverage(System.Collections.Generic.IList{Telerik.WinControls.UI.IClusterable})">
            <summary>
            Gets the coordinates average of all items in the cluster.
            </summary>
            <param name="cluster">The cluster.</param>
            <returns>PointG.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.DistanceClusterStrategy.GetSquareDistance(Telerik.WinControls.UI.Map.PointL,Telerik.WinControls.UI.Map.PointL)">
            <summary>
            Gets the square distance between two points.
            </summary>
            <param name="location1">The location1.</param>
            <param name="location2">The location2.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ElementClusterStrategy.GenerateClusters(System.Collections.Generic.IEnumerable{Telerik.WinControls.UI.IClusterable},System.Int64,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Generates the clusters.
            </summary>
            <param name="items">The items.</param>
            <param name="distance">The distance.</param>
            <param name="viewport">The viewport.</param>
            <returns>List&lt;Cluster&gt;.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ElementClusterStrategy.GetClosestCenter(System.Collections.Generic.List{Telerik.WinControls.UI.ElementClusterStrategy.ClusterRegion},Telerik.WinControls.UI.Map.PointL)">
            <summary>
            Gets the closest cluster to the given point.
            </summary>
            <param name="nearClusterRegions">The near cluster regions.</param>
            <param name="point">The point.</param>
            <returns>ClusterRegion.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ElementClusterStrategy.GetSquareDistance(Telerik.WinControls.UI.Map.PointL,Telerik.WinControls.UI.Map.PointL)">
            <summary>
            Gets the square distance between two points.
            </summary>
            <param name="location1">The location1.</param>
            <param name="location2">The location2.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChoroplethColorizationStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.ChoroplethColorizationStrategy"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ChoroplethColorizationStrategy.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.ChoroplethColorizationStrategy.ColorStops">
            <summary>
            Gets or sets the color stops.
            </summary>
            <value>The color stops.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.ChoroplethColorizationStrategy.ValueProvider">
            <summary>
            Gets or sets the value provider.
            </summary>
            <value>The value provider.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.ChoroplethColorizationStrategy.ColorizeElement(Telerik.WinControls.UI.MapGeometry)">
            <summary>
            Colorizes the provided element.
            </summary>
            <param name="colorizable">The colorizable.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ChoroplethColorizationStrategy.TryGetValue(Telerik.WinControls.UI.MapGeometry,System.Double@)">
            <summary>
            Tries the get the value of the given geometry.
            </summary>
            <param name="colorizable">The colorizable.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChoroplethColorizationStrategy.GetColorizerColor(System.Double)">
            <summary>
            Gets the color for the given value.
            </summary>
            <param name="value">The value.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ChoroplethColorizationStrategy.GetLegendInfo(Telerik.WinControls.UI.MapLegendElement)">
            <summary>
            Gets the legend information need by the RadMap legend.
            </summary>
            <param name="mapElement">The map element.</param>
            <returns>List&lt;MapLegendInfoItem&gt;.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.GraphColorizationStrategy.Colors">
            <summary>
            Gets or sets the colors to be used by the colorizer.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.GraphColorizationStrategy.ColorizeElement(Telerik.WinControls.UI.MapGeometry)">
            <summary>
            Colorizes the element.
            </summary>
            <param name="colorizable">The colorizable.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.GraphColorizationStrategy.GetColorizerColor(Telerik.WinControls.UI.MapGeometry)">
            <summary>
            Gets the color of the colorizer.
            </summary>
            <param name="element">The element.</param>
            <returns>Color.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapGeometryPropertyValueProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapGeometryPropertyValueProvider"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapGeometryPropertyValueProvider.PropertyName">
            <summary>
            Gets or sets the name of the property that will be used to extract a value.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapGeometryPropertyValueProvider.GetValue(Telerik.WinControls.UI.MapGeometry)">
            <summary>
            Gets the value of the geometry specified by the PropertyName.
            </summary>
            <param name="colorizable">The colorizable.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapLayer"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapLayer"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayer.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayer.IsUpdateSuspended">
            <summary>
            Gets a value indicating whether updates are suspended.
            </summary>
            <value><c>true</c> if updates are suspended; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayer.ClusterDistance">
            <summary>
            Gets or sets the cluster distance.
            </summary>
            <value>The cluster distance.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayer.ClusterStrategy">
            <summary>
            Gets or sets the cluster strategy.
            </summary>
            <value>The cluster strategy.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayer.ColorizationStrategy">
            <summary>
            Gets or sets the colorization strategy.
            </summary>
            <value>The colorization strategy.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayer.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayer.Overlays">
            <summary>
            Gets the overlays contained within this layer.
            </summary>
            <value>The overlays.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayer.VisibleOverlays">
            <summary>
            Gets the currently visible overlays in this layer. When cluster strategy is applied the visible overlays may differ from the user added ones.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.AddRange(System.Collections.Generic.IEnumerable{Telerik.WinControls.UI.MapVisualElement})">
            <summary>
            Adds the specified overlays to the layer.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.AddRange(Telerik.WinControls.UI.MapVisualElement[])">
            <summary>
            Adds the specified overlays to the layer.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.ViewportUpdated(Telerik.WinControls.UI.IMapViewport,Telerik.WinControls.UI.ViewportChangeAction)">
            <summary>
            Called when the viewport is updated.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.Paint(Telerik.WinControls.Paint.IGraphics,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Paints the layer to the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.BeginUpdate">
            <summary>
            Suspends updates.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.EndUpdate">
            <summary>
            Resumes updates and performs an update.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.EndUpdate(System.Boolean)">
            <summary>
            Resumes updates and performs an update based on the provided parameter
            </summary>
            <param name="update">if set to <c>true</c> an update is performed.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.HitTest(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Hit tests the overlays in the layer.
            </summary>
            <param name="point">The point.</param>
            <returns>MapVisualElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.HitTest(Telerik.WinControls.UI.Map.PointL)">
            <summary>
            Hit tests the overlays in the layer.
            </summary>
            <param name="point">The point.</param>
            <returns>MapVisualElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.HitTest(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.PointL)">
            <summary>
            Hit tests the overlays in the layer.
            </summary>
            <param name="pointG">The point g.</param>
            <param name="pointL">The point l.</param>
            <returns>MapVisualElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.UpdateOverlaysColorizerColor">
            <summary>
            Updates the colorizer color of all overlays.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayer.OverlayLocationChanged(Telerik.WinControls.UI.MapVisualElement)">
            <summary>
            Called when the location property of an overlay changes.
            </summary>
            <param name="overlay"></param>
        </member>
        <member name="T:Telerik.WinControls.UI.EPSG900913Projection">
            <summary>
            The EPSG:900913 Projection.
            Also known as EPSG:3857 and Pseudo-Mercator projection.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.EPSG900913Projection.#ctor">
            <summary>
            Initializes a new instance of the EPSG900913Projection class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.EPSG900913Projection.GetSizeInReferenceUnits(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.SizeG)">
            <summary>
            Calculate size of rectangle from base point.
            </summary>
            <param name="basePoint">Base point (left-top).</param>
            <param name="size">Size in kilometers.</param>
            <returns>Size of rectangle in meters.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.EPSG900913Projection.GetSizeInKilometers(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.SizeG)">
            <summary>
            Calculate size of rectangle from base point.
            </summary>
            <param name="basePoint">Base point (left-top).</param>
            <param name="size">Size in meters.</param>
            <returns>Size of rectangle in kilometers.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.ExtendedData">
            <summary>
            Represents map shape extended data.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedData.#ctor(Telerik.WinControls.UI.ExtendedPropertySet)">
            <summary>
            Initializes a new instance of the ExtendedData class.
            </summary>
            <param name="propertySet">Set of the extended properties this extended data can operates with.</param>
        </member>
        <member name="E:Telerik.WinControls.UI.ExtendedData.ExtendedPropertyChanged">
            <summary>
            Occurs when extended property changed in the extended data.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.ExtendedData.PropertyChanged">
            <summary>
            Occurs when property changed. Implemented for binding.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedData.Data">
            <summary>
            Return reference to self.
            This property can be used within Binding in XAML to implement
            binding which reflect extended property changes.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedData.PropertySet">
            <summary>
            Gets set of the extended properties this extended data can operates with.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedData.Item(System.String)">
            <summary>
            Gets value from object using format string.
            </summary>
            <param name="format">Format string.</param>
            <returns>Formatted value.</returns>
            <example>Format string can be specified in a few different ways: 
            as simple name of the extended property, as formatted extended property, 
            or as format string which can use number of the extended properties.
            <code lang="CS">
            // Using of the single extended property name.
            string value = extendedData["CNTRY_NAME"];
            
            // Using of the formatted extended property.
            // The '|' character is used to separate extended property name and its output format.
            string value = extendedData["SUM_SQMI_A|F2"];
            
            // Format string with number of the extended properties.
            string value = extendedData["{CNTRY_NAME} Miles: {SUM_SQMI_A|F2}, KM: {SUM_SQKM_A|F1}"];
            </code>
            <code lang="VB">
            ' Using of the single extended property name.
            Dim value as String = extendedData("CNTRY_NAME")
            
            ' Using of the formatted extended property.
            ' The '|' character is used to separate extended property name and its output format.
            Dim value as String = extendedData("SUM_SQMI_A|F2")
            
             Format string with number of the extended properties.
            Dim value as String = extendedData("{CNTRY_NAME} Miles: {SUM_SQMI_A|F2}, KM: {SUM_SQKM_A|F1}")
            </code>
            </example>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedData.Item(System.String,System.String)">
            <summary>
            Gets value from object using format string.
            </summary>
            <param name="format">Format string.</param>
            <param name="lang">Language.</param>
            <returns>Formatted value.</returns>
            <example>Format string can be specified in a few different ways: 
            as simple name of the extended property, as formatted extended property, 
            or as format string which can use number of the extended properties.
            <code lang="CS">
            // Using of the single extended property name.
            string value = extendedData["CNTRY_NAME"];
            
            // Using of the formatted extended property.
            // The '|' character is used to separate extended property name and its output format.
            string value = extendedData["SUM_SQMI_A|F2"];
            
            // Format string with number of the extended properties.
            string value = extendedData["{CNTRY_NAME} Miles: {SUM_SQMI_A|F2}, KM: {SUM_SQKM_A|F1}"];
            </code>
            <code lang="VB">
            ' Using of the single extended property name.
            Dim value as String = extendedData("CNTRY_NAME")
            
            ' Using of the formatted extended property.
            ' The '|' character is used to separate extended property name and its output format.
            Dim value as String = extendedData("SUM_SQMI_A|F2")
            
             Format string with number of the extended properties.
            Dim value as String = extendedData("{CNTRY_NAME} Miles: {SUM_SQMI_A|F2}, KM: {SUM_SQKM_A|F1}")
            </code>
            </example>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedData.Clone">
            <summary>
            Clones current instance.
            </summary>
            <returns>The clone.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedData.GetValue(System.String)">
            <summary>
            Gets value of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedData.HasValue(System.String)">
            <summary>
            Gets value which indicates whether extended data
            contains specified property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>True - when extended data contains specified property. Otherwise - false.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedData.SetDefaults">
            <summary>
            Set default value to every extended property. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedData.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">Value to be set.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedData.SetValue(System.String,System.Object,System.Boolean)">
            <summary>
            Sets value of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">Value to be set.</param>
            <param name="fireEvent">Indicates whether the layout changed event should be fired.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.ExtendedDataConverter">
            <summary>
            Value converter to access extended data properties from XAML.
            2-way binding can't be specified.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedDataConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use. It can be specified in a few different ways: 
            <list type="bullet">
            	<item>
            		<description>Simple name of the extended property.</description>
            	</item>
            	<item>
            		<description>Formatted extended property. For example: "SUM_SQMI_A|F2". The '|' character is used to separate extended property name and its output format.</description>
            	</item>
            	<item>
            		<description>Format string which can use number of the extended properties. 
            		For example: "{CNTRY_NAME} Miles: {SUM_SQMI_A|F2}, KM: {SUM_SQKM_A|F1}". 
            		</description>
            	</item>
            </list>
            </param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null (Nothing in Visual Basic), the valid null value is used.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedDataConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetType">The array of types to convert to. 
            The array length indicates the number and types of values that are 
            suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>An array of values that have been converted from the target value back to the source values.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedDataConverter.GetFormattedValue(Telerik.WinControls.UI.ExtendedData,System.String,System.String)">
            <summary>
            Get values from the extended data according to the format string.
            </summary>
            <param name="data">Extended data.</param>
            <param name="format">Format string.</param>
            <param name="lang">Language.</param>
            <returns>Formatted value.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.ExtendedProperty">
            <summary>
            Represents extended property of the map shape.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedProperty.#ctor(System.String,System.String,System.Type,System.Object)">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="displayName">Display name of the property.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="defaultValue">Default value.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedProperty.Name">
            <summary>
            Gets name of the property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedProperty.Type">
            <summary>
            Gets type of the property.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedProperty.Default">
            <summary>
            Gets default value.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ExtendedPropertyChangedEventArgs">
            <summary>
            Arguments of the property changed event.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ExtendedPropertyChangedEventArgs.extendedProperty">
            <summary>
            Extended property which has been changed.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ExtendedPropertyChangedEventArgs.oldValue">
            <summary>
            Old property value.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ExtendedPropertyChangedEventArgs.newValue">
            <summary>
            New property value.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedPropertyChangedEventArgs.#ctor(Telerik.WinControls.UI.ExtendedProperty,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the ExtendedPropertyChangedEventArgs class.
            </summary>
            <param name="property">Extended property which has been changed.</param>
            <param name="oldValue">Old property value.</param>
            <param name="newValue">New property value.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedPropertyChangedEventArgs.Property">
            <summary>
            Gets property which has been changed.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedPropertyChangedEventArgs.OldValue">
            <summary>
            Gets old value.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedPropertyChangedEventArgs.NewValue">
            <summary>
            Gets new value.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ExtendedPropertySet">
            <summary>
            Represents set of the extended properties.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedPropertySet.#ctor">
            <summary>
            Initializes a new instance of the ExtendedPropertySet class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedPropertySet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ExtendedPropertySet class.
            </summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.ExtendedPropertySet.Item(System.String)">
            <summary>
            Gets extended property definition.
            </summary>
            <param name="propertyName">Name of the extended property.</param>
            <returns>Extended property definition or null.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedPropertySet.Parse(System.String)">
            <summary>
            Converts a String representation of the ExtendedPropertySet into the equivalent ExtendedPropertySet class.
            </summary>
            <param name="source">The String representation of the ExtendedPropertySet class.</param>
            <returns>The equivalent ExtendedPropertySet class.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedPropertySet.RegisterProperty(System.String,System.String,System.Type,System.Object)">
            <summary>
            Register new property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="displayName">Display name of the property.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="defaultValue">Default value.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedPropertySet.PrepareCoordinates(System.String)">
            <summary>
            Prepares coordinates string.
            </summary>
            <param name="coordinates">Coordinates.</param>
            <returns>Prepared coordinates.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.ExtendedPropertySetConverter">
            <summary>
            Converts instances of other types to and from instances of ExtendedPropertySet. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedPropertySetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Gets a value that indicates whether this type converter can convert from a given type. 
            </summary>
            <param name="context">ITypeDescriptorContext for this call.</param>
            <param name="sourceType">Type being queried for support.</param>
            <returns>True if this converter can convert from the specified type; false otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ExtendedPropertySetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Attempts to convert to a Point3DCollection from the given object. 
            </summary>
            <param name="context">The ITypeDescriptorContext for this call.</param>
            <param name="culture">The CultureInfo which is respected when converting.</param>
            <param name="value">The object to convert to an instance of ExtendedPropertySet. </param>
            <returns>ExtendedPropertySet that was constructed.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.ICoordinateConverter">
            <summary>
            Interface which must be implemented by any coordinate converter.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ICoordinateConverter.ConvertBack(System.Collections.Generic.List{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Convert from the collection of coordinates are given
            in the form specific for the coordinate system other than WGS 1984
            to the collection of the WGS 1984 coordinates.
            </summary>
            <param name="collection">Collection of coordinates are given
            in the form specific for the coordinate system.</param>
            <returns>Converted collection.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ICoordinateConverter.ConvertTo(System.Collections.Generic.List{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Convert from the collection of coordinates are given
            in the WGS 1984 coordinates to the form specific for the coordinate 
            system other than WGS 1984.
            </summary>
            <param name="collection">Collection of coordinates are given
            in the form specific for the coordinate system.</param>
            <returns>Converted collection.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ICoordinateConverter.FromLocation(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts from the latitude/longitude to the representation 
            specific for the coordinate system other than WGS 1984.
            </summary>
            <param name="location">Location to be converter.</param>
            <returns>Coordinate system location.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ICoordinateConverter.ToString(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts Location to Coordinate system specific string.
            </summary>
            <param name="location">Location.</param>
            <returns>Coordinate system specific string.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ICoordinateConverter.ToLocation(System.Object)">
            <summary>
            Converts from the coordinate system specific object to
            the WGS 1984 latitude/longitude.
            </summary>
            <param name="coordinates">Coordinate system specific object.</param>
            <returns>Location.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.IExtendedData">
            <summary>
            Interface for the objects with ExtendedData.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.IExtendedData.ExtendedData">
            <summary>
            Gets or sets extended data.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.ISpatialReference">
            <summary>
            The OGC Spatial Reference requirements. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.AngularUnitOfMeasurement">
            <summary>
            The measurement units used to define the angles of a spheroid or ellipse associated with a specific datum.
            The datum is usually WGS (World Geodetic System) 1984 and the unit of measurement is a degree.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.Authority">
            <summary>
            The authority body that defines the standards for the spatial reference parameters.
            Spatial Reference is usually WGS 1984 and the authority is EPSG:4326.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.CentralMeridian">
            <summary>
            The line of longitude at the center of a map projection generally used as the basis for constructing the projection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.Datum">
            <summary>
            This indicates the horizontal datum,
            which corresponds to the procedure used to measure positions on the surface of the Earth. 
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.DatumAuthority">
            <summary>
            This indicates the horizontal datum,
            which corresponds to the procedure used to measure positions on the surface of the Earth.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.FalseEasting">
            <summary>
            The value added to all "x" values in the rectangular coordinate for a map projection. 
            This value frequently is assigned to eliminate negative numbers.
            Expressed in the unit of measure identified in Planar Coordinate Units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.FalseNorthing">
            <summary>
            The value added to all "y" values in the rectangular coordinates for a map projection. 
            This value frequently is assigned to eliminate negative numbers. 
            Expressed in the unit of measure identified in Planar Coordinate Units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.GeoGcs">
            <summary>
            A coordinate system based on latitude and longitude. Some geographic coordinate systems are Latitude/Longitude, 
            and some are Longitude/Latitude. You can find out which this is by examining the axes. 
            You should also check the angular units, since not all geographic coordinate systems use degrees.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.LatitudeOfOrigin">
            <summary>
            The latitude chosen as the origin of rectangular coordinate for a map projection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.Primem">
            <summary>
            This defines the meridian used to take longitude measurements from. 
            The units of the longitude must be inferred from the context.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.PrimemAuthority">
            <summary>
            This defines the meridian used to take longitude measurements from. 
            The units of the longitude must be inferred from the context.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.ProjectionAuthority">
            <summary>
            This describes a projection from geographic coordinates to projected coordinates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.SpheroidRadius">
            <summary>
            This describes a spheroid, which is an approximation of the Earth's surface as a squashed sphere.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.SpheroidFlattening">
            <summary>
            This describes a spheroid, which is an approximation of the Earth's surface as a squashed sphere.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.SpheroidAuthority">
            <summary>
            This describes a spheroid, which is an approximation of the Earth's surface as a squashed sphere.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.StandardParallel">
            <summary>
            The line of constant latitude at which the surface of the Earth and the plane or developable surface intersect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.UnitAuthority">
            <summary>
            The authority body that defines the unit of measurement i.e. European Petroleum Survey Group (EPSG).
            The unit of measurement is usually degrees and the authority for the datum the map uses, WGS 1984 is EPSG:4326.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.MinLatitude">
            <summary>
            The minimum Latitude this tile source supports.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.MaxLatitude">
            <summary>
            The maximum Latitude this tile source supports.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.MinLongitude">
            <summary>
            The minimum Longitude this tile source supports.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.ISpatialReference.MaxLongitude">
            <summary>
            The maximum Longitude this tile source supports.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ISpatialReference.GeographicToLogical(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts a geographical coordinate (Longitude, Latitude) to a logical Point (0->1).
            </summary>
            <param name="geographicPoint">The geographical coordinate (Longitude, Latitude).</param>
            <returns>The logical Point.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ISpatialReference.LogicalToGeographic(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts a logical Point (0->1) to a geographical coordinate (Longitude, Latitude).
            </summary>
            <param name="logicalPoint">The logical Point.</param>
            <returns>The geographical coordinate (Longitude, Latitude).</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ISpatialReference.GetSizeInReferenceUnits(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.SizeG)">
            <summary>
            Calculate size of rectangle from base point.
            </summary>
            <param name="basePoint">Base point (left-top).</param>
            <param name="size">Size in kilometers.</param>
            <returns>Size of rectangle in units of reference.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ISpatialReference.GetSizeInKilometers(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.SizeG)">
            <summary>
            Calculate size of rectangle from base point.
            </summary>
            <param name="basePoint">Base point (left-top).</param>
            <param name="size">Size in units of reference.</param>
            <returns>Size of rectangle in kilometers.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.OSGB36Converter">
            <summary>
            Convert co-ordinates between WGS-84 and OSGB36.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.ConvertBack(System.Collections.Generic.List{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Convert from the collection of coordinates are given
            in the form specific for the coordinate system other than WGS 1984
            to the collection of the WGS 1984 coordinates.
            </summary>
            <param name="collection">Collection of coordinates are given
            in the form specific for the coordinate system.</param>
            <returns>Converted collection.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.ConvertTo(System.Collections.Generic.List{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Convert from the collection of coordinates are given
            in the WGS 1984 coordinates to the form specific for the coordinate 
            system other than WGS 1984.
            </summary>
            <param name="collection">Collection of coordinates are given
            in the form specific for the coordinate system.</param>
            <returns>Converted collection.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.FromLocation(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts from the latitude/longitude to the representation 
            specific for the coordinate system other than WGS 1984.
            </summary>
            <param name="location">Location to be converter.</param>
            <returns>Coordinate system specific location.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.ToString(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts Location to Coordinate system specific string.
            </summary>
            <param name="location">Location.</param>
            <returns>Coordinate system specific string.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.ToLocation(System.Object)">
            <summary>
            Convert OS grid reference to the WGS 1984 latitude/longitude.
            </summary>
            <param name="coordinates">OS grid reference. Can be string which
            represents standard grid reference, or Point object which represents
            fully numeric reference.</param>
            <returns>Location.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.GridrefLetToNum(System.String)">
            <summary>
            Converts standard grid reference ('SU387148') to fully numeric ref ([438700,114800]).
            Returned co-ordinates are in meters, centered on grid square for conversion to latitude/longitude.
            Note that northern-most grid squares will give 7-digit northings no error-checking 
            is done on the grid reference (bad input will give bad results or NaN).
            </summary>
            <param name="gridref">Standard grid reference.</param>
            <returns>Fully numeric reference.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.GridrefNumToLet(System.Double,System.Double,System.Double)">
            <summary>
            Converts numeric grid reference (in meters) to standard-form grid ref.
            </summary>
            <param name="eastings">Eastings from the origin.</param>
            <param name="northings">Northings from the origin.</param>
            <param name="digits">Number of digits.</param>
            <returns>Standard-form grid reference.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.ToDegrees(System.Double)">
            <summary>
            Convert radians to degrees (signed).
            </summary>
            <param name="radians"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OSGB36Converter.ToRadian(System.Double)">
            <summary>
            Convert degrees to radians.
            </summary>
            <param name="degrees">Degrees.</param>
            <returns>Radians.</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.ProportionalProjection">
            <summary>
            The Proportional Projection.
            It is used for internal purposes for the OSGB1936 and EPSG900913 Projections only.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.ProportionalProjection.GeographicToLogical(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts a geographical coordinate (Longitude, Latitude) to a logical Point (0->1).
            </summary>
            <param name="geographicPoint">The geographical coordinate (Longitude, Latitude).</param>
            <returns>The logical Point.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.ProportionalProjection.LogicalToGeographic(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts a logical Point (0->1) to a geographical coordinate (Longitude, Latitude).
            </summary>
            <param name="logicalPoint">The logical Point.</param>
            <returns>The geographical coordinate (Longitude, Latitude).</returns>
        </member>
        <member name="T:Telerik.WinControls.UI.SpatialReference">
            <summary>
            The OGC Spatial Reference requirements.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SpatialReference.HalfPI">
            <summary>
            Half of PI.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.SpatialReference.RadiansToDegrees">
            <summary>
            Degrees of one radiant.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.AngularUnitOfMeasurement">
            <summary>
            Gets or sets the measurement units used to define the angles of a spheroid or ellipse associated with a specific datum.
            The datum is WGS 1984 and the unit of measurement is a degree.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.Authority">
            <summary>
            Gets or sets the authority body that defines the standards for the spatial reference parameters.
            The Spatial Reference is WGS 1984 and the authority is EPSG:4326.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.CentralMeridian">
            <summary>
            Gets or sets the line of longitude at the center of a map projection generally used as the basis for constructing the projection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.Datum">
            <summary>
            Gets or sets the horizontal datum,
            which corresponds to the procedure used to measure positions on the surface of the Earth.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.DatumAuthority">
            <summary>
            Gets or sets the horizontal datum,
            which corresponds to the procedure used to measure positions on the surface of the Earth.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.FalseEasting">
            <summary>
            Gets or sets value added to all "x" values in the rectangular coordinate for a map projection. 
            This value frequently is assigned to eliminate negative numbers.
            Expressed in the unit of measure identified in Planar Coordinate Units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.FalseNorthing">
            <summary>
            Gets or sets value added to all "y" values in the rectangular coordinates for a map projection. 
            This value frequently is assigned to eliminate negative numbers. 
            Expressed in the unit of measure identified in Planar Coordinate Units.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.GeoGcs">
            <summary>
            Gets or sets coordinate system based on latitude and longitude.
            Some geographic coordinate systems are Latitude/Longitude, and some are Longitude/Latitude.
            You can find out which this is by examining the axes. 
            You should also check the angular units, since not all geographic coordinate systems use degrees.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.LatitudeOfOrigin">
            <summary>
            Gets or sets the latitude chosen as the origin of rectangular coordinate for a map projection.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.OffsetX">
            <summary>
            Gets or sets logical X offset to centre of earth.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.OffsetY">
            <summary>
            Gets or sets logical Y offset to centre of earth.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.Primem">
            <summary>
            Gets or sets the meridian used to take longitude measurements from. 
            The units of the longitude must be inferred from the context.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.PrimemAuthority">
            <summary>
            Gets or sets the meridian used to take longitude measurements from. 
            The units of the longitude must be inferred from the context.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.ProjectionAuthority">
            <summary>
            Gets or sets a projection from geographic coordinates to projected coordinates.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.ScaleX">
            <summary>
            Gets or sets the real world coordinate scale at a given longitude.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.ScaleY">
            <summary>
            Gets or sets the real world coordinate scale at a given latitude.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.SpheroidRadius">
            <summary>
            Gets or sets a spheroid, which is an approximation of the Earth's surface as a squashed sphere.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.SpheroidFlattening">
            <summary>
            Gets or sets a spheroid, which is an approximation of the Earth's surface as a squashed sphere.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.SpheroidAuthority">
            <summary>
            Gets or sets a spheroid, which is an approximation of the Earth's surface as a squashed sphere.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.StandardParallel">
            <summary>
            Gets or sets the line of constant latitude at which the surface of the Earth
            and the plane or developable surface intersect.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.UnitAuthority">
            <summary>
            Gets or sets the authority body that defines the unit of measurement i.e. European Petroleum Survey Group (EPSG).
            The unit of measurement is usually degrees and the authority for the datum the map uses, WGS 1984 is EPSG:4326.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.MinLatitude">
            <summary>
            The minimum Latitude this tile source supports.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.MaxLatitude">
            <summary>
            The maximum Latitude this tile source supports.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.MinLongitude">
            <summary>
            The minimum Longitude this tile source supports.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SpatialReference.MaxLongitude">
            <summary>
            The maximum Longitude this tile source supports.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.SpatialReference.GeographicToLogical(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts a geographical coordinate (Longitude, Latitude) to a logical Point (0->1).
            </summary>
            <param name="geographicPoint">The geographical coordinate (Longitude, Latitude).</param>
            <returns>The logical Point.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.SpatialReference.LogicalToGeographic(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Converts a logical Point (0->1) to a geographical coordinate (Longitude, Latitude).
            </summary>
            <param name="logicalPoint">The logical Point.</param>
            <returns>The geographical coordinate (Longitude, Latitude).</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.SpatialReference.GetSizeInReferenceUnits(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.SizeG)">
            <summary>
            Calculate size of rectangle from base point.
            </summary>
            <param name="basePoint">Base point (left-top).</param>
            <param name="size">Size in kilometers.</param>
            <returns>Size of rectangle in degrees.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.SpatialReference.GetSizeInKilometers(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.SizeG)">
            <summary>
            Calculate size of rectangle from base point.
            </summary>
            <param name="basePoint">Base point (left-top).</param>
            <param name="size">Size in degrees.</param>
            <returns>Size of rectangle in kilometers.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.MapGeometry.ColorizerColor">
            <summary>
            Gets or sets the color specified by a colorization strategy.
            </summary>
            <value>The color specified by a colorization strategy.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapGeometry.ExtendedData">
            <summary>
            Gets or sets extended data.
            </summary>
            <value>The extended data.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapGeometry.OnExtendedDataPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when the ExtendedData property changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapGeometry.ResolveEntityReferences">
            <summary>
            Resolves the entity references in the callout text ([$property]).
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPath.#ctor(System.Collections.ObjectModel.Collection{System.Collections.ObjectModel.Collection{Telerik.WinControls.UI.Map.PointG}})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapPath"/> class.
            </summary>
            <param name="points">The points of the path.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPath.Points">
            <summary>
            Gets the points of the path.
            </summary>
            <value>The points.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPoint.#ctor(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapPoint"/> class.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPoint.#ctor(Telerik.WinControls.UI.Map.PointG,System.Drawing.Size)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapPoint"/> class.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPoint.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPoint.ImageScale">
            <summary>
            Gets or sets the image scale.
            </summary>
            <value>The image scale.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPoint.HotSpot">
            <summary>
            Gets or sets the hot spot.
            </summary>
            <value>The hot spot.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPoint.BalloonStyle">
            <summary>
            Gets or sets the balloon style.
            </summary>
            <value>The balloon style.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPoint.BalloonData">
            <summary>
            Gets or sets the balloon data.
            </summary>
            <value>The balloon data.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPoint.PaintText(Telerik.WinControls.Paint.IGraphics,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Draws the text of this point.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPolygon.#ctor(System.Collections.Generic.IEnumerable{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapPolygon"/> class.
            </summary>
            <param name="outerBoundary">The outer boundary of this polygon.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPolygon.#ctor(System.Collections.Generic.IEnumerable{Telerik.WinControls.UI.Map.PointG},System.Collections.Generic.List{System.Collections.Generic.List{Telerik.WinControls.UI.Map.PointG}})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapPolygon"/> class.
            </summary>
            <param name="outerBoundary">The outer boundary of this polygon.</param>
            <param name="innerBoundaries">The inner boundaries of this polygon.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPolygon.Points">
            <summary>
            Gets the points of the poligon.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPolygon.OuterBoundary">
            <summary>
            Gets the outer boundary.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPolygon.InnerBoundaries">
            <summary>
            Gets the inner boundaries.
            </summary>
            <value>The points.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPolyline.#ctor(System.Collections.Generic.IEnumerable{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapPolyline"/> class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapPolyline.Points">
            <summary>
            Gets the points of the polyline.
            </summary>
            <value>The points.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.CalculateRouteErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.CalculateRouteErrorEventArgs"/> class.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.SearchErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.SearchErrorEventArgs"/> class.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.SearchOptions">
            <summary>
            Search options which can be used to refine the search request. 
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.SearchOptions.#ctor">
            <summary>
            Initializes a new instance of the SearchOptions class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SearchOptions.QueryParse">
            <summary>
            Gets or sets value indicating if the response should include info on how the quesry was parsed. The default value is true.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SearchOptions.Count">
            <summary>
            Gets or sets value specifying the number of search results to return. The default value is 5.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.InitializationErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.InitializationErrorEventArgs"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.InitializationErrorEventArgs.Exception">
            <summary>
            Gets the exception that occurred.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.SearchCompletedEventArgs.#ctor(Telerik.WinControls.UI.Map.Bing.Location[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.SearchCompletedEventArgs"/> class.
            </summary>
            <param name="locations">The locations.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.SearchCompletedEventArgs.#ctor(Telerik.WinControls.UI.Map.Bing.Location[],System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.SearchCompletedEventArgs"/> class.
            </summary>
            <param name="locations">The locations.</param>
            <param name="userData">A user-defined object that is passed to the method invoked  when the asynchronous operation completes</param>
        </member>
        <member name="P:Telerik.WinControls.UI.SearchCompletedEventArgs.Locations">
            <summary>
            Gets the search response.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.SearchCompletedEventArgs.UserData">
            <summary>
            A user-defined object that is passed to the method invoked  when the asynchronous operation completes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.TileInfoEventArgs.#ctor(Telerik.WinControls.UI.TileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.TileInfoEventArgs"/> class.
            </summary>
            <param name="tileInfo">The tile information.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.TileInfoEventArgs.TileInfo">
            <summary>
            Gets the tile information.
            </summary>
            <value>The tile information.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPin.#ctor(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapPin"/> class.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapPin.Paint(Telerik.WinControls.Paint.IGraphics,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Paints the element to the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapRoute.#ctor(System.Collections.Generic.IEnumerable{Telerik.WinControls.UI.Map.PointG})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapRoute"/> class.
            </summary>
            <param name="points">The points.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapRoute.#ctor(System.Collections.Generic.List{Telerik.WinControls.UI.Map.PointG},Telerik.WinControls.UI.Map.RectangleG)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapRoute"/> class.
            </summary>
            <param name="points">The points.</param>
            <param name="geographicBounds">The geographic bounds.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapRoute.Paint(Telerik.WinControls.Paint.IGraphics,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Paints the element to the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTile.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapTile"/> class.
            </summary>
            <param name="image">The image.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapTile.DrawRectangle">
            <summary>
            Gets the draw rectangle.
            </summary>
            <value>The draw rectangle.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapTile.Image">
            <summary>
            Gets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapTile.IsInViewport">
            <summary>
            Gets a value indicating whether this instance is visible in the viewport.
            </summary>
            <value><c>true</c> if this instance is visible in the viewport.; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTile.Paint(Telerik.WinControls.Paint.IGraphics,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Paints the element to the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTile.ViewportChanged(Telerik.WinControls.UI.IMapViewport,Telerik.WinControls.UI.ViewportChangeAction)">
            <summary>
            Called when the viewport changes.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="action">The action.</param>
        </member>
        <member name="E:Telerik.WinControls.UI.IMapRouteProvider.CalculateRouteCompleted">
            <summary>
            Occurs when a route calculation request is completed and the result is ready.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.IMapRouteProvider.CalculateRouteError">
            <summary>
            Occurs when the request results in an error.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.IMapRouteProvider.CalculateRouteAsync(Telerik.WinControls.UI.Map.Bing.RouteRequest)">
            <summary>
            Performs async routing request.
            Calculates a route between specified stops and returns route directions as well as other route data.
            </summary>
            <param name="request">Route request.</param>
        </member>
        <member name="E:Telerik.WinControls.UI.IMapSearchProvider.SearchCompleted">
            <summary>
            Occurs when a search request is completed and the result is ready.
            </summary>
        </member>
        <member name="E:Telerik.WinControls.UI.IMapSearchProvider.SearchError">
            <summary>
            Occurs when the request results in an error.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.IMapSearchProvider.SearchAsync(Telerik.WinControls.UI.Map.Bing.SearchRequest)">
            <summary>
            Performs async search request.
            </summary>
            <param name="request">Search request.</param>
        </member>
        <member name="T:Telerik.WinControls.UI.RoutingCompletedEventArgs">
            <summary>
            Arguments of the RoutingCompleted event.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RoutingCompletedEventArgs.#ctor(Telerik.WinControls.UI.Map.Bing.Route)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RoutingCompletedEventArgs"/> class.
            </summary>
            <param name="route">The route.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RoutingCompletedEventArgs.#ctor(Telerik.WinControls.UI.Map.Bing.Route,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RoutingCompletedEventArgs"/> class.
            </summary>
            <param name="route">The route.</param>
            <param name="userData">A user-defined object that is passed to the method invoked  when the asynchronous operation completes</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RoutingCompletedEventArgs.#ctor(Telerik.WinControls.UI.Map.Bing.Route[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RoutingCompletedEventArgs"/> class.
            </summary>
            <param name="routes">The routes returned by the service.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RoutingCompletedEventArgs.#ctor(Telerik.WinControls.UI.Map.Bing.Route[],System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.RoutingCompletedEventArgs"/> class.
            </summary>
            <param name="routes">The routes returned by the service.</param>
            <param name="userData">A user-defined object that is passed to the method invoked  when the asynchronous operation completes</param>
        </member>
        <member name="P:Telerik.WinControls.UI.RoutingCompletedEventArgs.Route">
            <summary>
            Gets the routing response.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RoutingCompletedEventArgs.Routes">
            <summary>
            Gets the routing response.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.RoutingCompletedEventArgs.UserData">
            <summary>
            A user-defined object that is passed to the method invoked  when the asynchronous operation completes.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayerCollection.#ctor(Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapLayerCollection"/> class.
            </summary>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayerCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Telerik.WinControls.UI.MapLayer"/> at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>Layer.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.MapLayerCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Telerik.WinControls.UI.MapLayer"/> with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>Layer.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayerCollection.HitTest(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Hit tests the overlays in all layers.
            </summary>
            <param name="point">A point in geo coordinates.</param>
            <returns>MapVisualElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayerCollection.HitTest(Telerik.WinControls.UI.Map.PointL)">
            <summary>
            Hit tests the overlays in all layers.
            </summary>
            <param name="point">A point in map coordinates.</param>
            <returns>MapVisualElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayerCollection.HitTest(System.Drawing.Point)">
            <summary>
            Hit tests the overlays in all visible layers.
            </summary>
            <param name="location">A point in control coordinates.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayerCollection.BeginUpdate">
            <summary>
            Suspends updates in all layers.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapLayerCollection.EndUpdate">
            <summary>
            Resumes updates in all layers.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.Clip(System.Double,System.Double,System.Double)">
            <summary>
            Clips a number to the specified minimum and maximum values.
            </summary>
            <param name="n">The number to clip.</param>
            <param name="minValue">Minimum allowable value.</param>
            <param name="maxValue">Maximum allowable value.</param>
            <returns>The clipped value.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.MapSize(System.Int32)">
            <summary>
            Determines the map width and height (in pixels) at a specified level
            of detail.
            </summary>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>The map width and height in pixels.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.GroundResolution(System.Double,System.Int32)">
            <summary>
            Determines the ground resolution (in meters per pixel) at a specified
            latitude and level of detail.
            </summary>
            <param name="latitude">Latitude (in degrees) at which to measure the
            ground resolution.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>The ground resolution, in meters per pixel.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.MapScale(System.Double,System.Int32,System.Int32)">
            <summary>
            Determines the map scale at a specified latitude, level of detail,
            and screen resolution.
            </summary>
            <param name="latitude">Latitude (in degrees) at which to measure the
            map scale.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="screenDpi">Resolution of the screen, in dots per inch.</param>
            <returns>The map scale, expressed as the denominator N of the ratio 1 : N.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.LatLongToPixelXY(Telerik.WinControls.UI.Map.PointG,System.Int32)">
            <summary>
            Converts a point from latitude/longitude WGS-84 coordinates (in degrees)
            into pixel XY coordinates at a specified level of detail.
            </summary>
            <param name="location">Location of the point, in degrees.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.LatLongToPixelXY(System.Double,System.Double,System.Int32)">
            <summary>
            Converts a point from latitude/longitude WGS-84 coordinates (in degrees)
            into pixel XY coordinates at a specified level of detail.
            </summary>
            <param name="latitude">Latitude of the point, in degrees.</param>
            <param name="longitude">Longitude of the point, in degrees.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.LatLongToPixelXY(System.Double,System.Double,System.Int32,System.Boolean)">
            <summary>
            Converts a point from latitude/longitude WGS-84 coordinates (in degrees)
            into pixel XY coordinates at a specified level of detail.
            </summary>
            <param name="latitude">Latitude of the point, in degrees.</param>
            <param name="longitude">Longitude of the point, in degrees.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="allowWraparound">if set to <c>true</c> wraparound is allowed.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.PixelXYToLatLong(Telerik.WinControls.UI.Map.PointL,System.Int32)">
            <summary>
            Converts a pixel from pixel XY coordinates at a specified level of detail
            into latitude/longitude WGS-84 coordinates (in degrees).
            </summary>
            <param name="point">X and Y coordinates of the point, in pixels.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.PixelXYToLatLong(System.Int64,System.Int64,System.Int32)">
            <summary>
            Converts a pixel from pixel XY coordinates at a specified level of detail
            into latitude/longitude WGS-84 coordinates (in degrees).
            </summary>
            <param name="pixelX">X coordinate of the point, in pixels.</param>
            <param name="pixelY">Y coordinates of the point, in pixels.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.PixelXYToLatLong(System.Int64,System.Int64,System.Int32,System.Boolean)">
            <summary>
            Converts a pixel from pixel XY coordinates at a specified level of detail
            into latitude/longitude WGS-84 coordinates (in degrees).
            </summary>
            <param name="pixelX">X coordinate of the point, in pixels.</param>
            <param name="pixelY">Y coordinates of the point, in pixels.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="allowWraparound">if set to <c>true</c> wraparound is allowed.</param>
            <returns>PointG.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.PixelXYToTileXY(System.Int64,System.Int64)">
            <summary>
            Converts pixel XY coordinates into tile XY coordinates of the tile containing
            the specified pixel.
            </summary>
            <param name="pixelX">Pixel X coordinate.</param>
            <param name="pixelY">Pixel Y coordinate.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.TileXYToPixelXY(System.Int32,System.Int32)">
            <summary>
            Converts tile XY coordinates into pixel XY coordinates of the upper-left pixel
            of the specified tile.
            </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.TileXYToQuadKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts tile XY coordinates into a QuadKey at a specified level of detail.
            </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>A string containing the QuadKey.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileSystemHelper.QuadKeyToTileXY(System.String,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Converts a QuadKey into tile XY coordinates.
            </summary>
            <param name="quadKey">QuadKey of the tile.</param>
            <param name="tileX">Output parameter receiving the tile X coordinate.</param>
            <param name="tileY">Output parameter receiving the tile Y coordinate.</param>
            <param name="levelOfDetail">Output parameter receiving the level of detail.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.IMapCacheProvider.Load(System.String)">
            <summary>
            Retrieves a file from the cache.
            </summary>
            <param name="key">The name of the file to retrieve from the cache.</param>
            <returns>Stream or null if the file does not exist.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.IMapCacheProvider.LoadAsync(System.String,System.Action{System.String,System.Byte[]})">
            <summary>
            Retrieves a file from the cache asynchronously.
            </summary>
            <param name="key">The name of the file to retrieve from the cache.</param>
            <param name="callback">Callback which should be called to return the file.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.IMapCacheProvider.Save(System.String,System.DateTime,System.Byte[])">
            <summary>
            Stores a file to the cache.
            </summary>
            <param name="key">The name of the file to store in the cache.</param>
            <param name="expirationDate">The date after which the cache for the file is considered expired.</param>
            <param name="content">The content of the file as byte array.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.LocalFileCacheProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.LocalFileCacheProvider"/> class.
            </summary>
            <param name="cacheDirectoryPath">The cache directory path.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.LocalFileCacheProvider.CacheDirectoryPath">
            <summary>
            Gets or sets the cache directory path.
            </summary>
            <value>The cache directory path.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapVisualElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapVisualElement"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapVisualElement.Paint(Telerik.WinControls.Paint.IGraphics,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Paints the element to the specified graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="viewport">The viewport.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapVisualElement.ViewportChanged(Telerik.WinControls.UI.IMapViewport,Telerik.WinControls.UI.ViewportChangeAction)">
            <summary>
            Called when the viewport changes.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="action">The action.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.GeographicBounds">
            <summary>
            Gets the geographic bounds.
            </summary>
            <value>The geographic bounds.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.Layer">
            <summary>
            Gets the layer this element is added to.
            </summary>
            <value>The layer.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.IsInViewport">
            <summary>
            Gets a value indicating whether this instance is visible in the viewport.
            </summary>
            <value><c>true</c> if this instance is visible in the viewport.; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value><c>true</c> if this instance is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.IsSelected">
            <summary>
            Gets a value indicating whether this instance is selected.
            </summary>
            <value><c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.ForeColor">
            <summary>
            Gets or sets the fore color.
            </summary>
            <value>The fore color.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapVisualElement.ToolTipText">
            <summary>
            Gets or sets the text of the tool tip for this element.
            </summary>
            <value>The tool tip text.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapVisualElement.GetGeographicBounds">
            <summary>
            Gets the geographic bounds of elements that consist of more than one figure.
            </summary>
            <returns>RectangleG[].</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapVisualElement.HitTest(Telerik.WinControls.UI.Map.PointG,Telerik.WinControls.UI.Map.PointL,Telerik.WinControls.UI.IMapViewport)">
            <summary>
            Hit tests the element.
            </summary>
            <param name="pointG">The point g.</param>
            <param name="pointL">The point l.</param>
            <param name="viewport">The viewport.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapProviderCollection.#ctor(Telerik.WinControls.UI.BaseMapElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapProviderCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapProviderCollection.MinZoomLevel">
            <summary>
            Gets the minimum zoom level.
            </summary>
            <value>The minimum zoom level.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapProviderCollection.MaxZoomLevel">
            <summary>
            Gets the maximum zoom level.
            </summary>
            <value>The maximum zoom level.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapProviderCollection.Count">
            <summary>
            Gets the number of providers in the collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Telerik.WinControls.UI.IMapProvider"/> with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>IMapProvider.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.MapProviderCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Telerik.WinControls.UI.IMapProvider"/> at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>IMapProvider.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapProviderCollection.UpdateZoomLevels">
            <summary>
            Updates the zoom levels.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapProviderCollection.Add(Telerik.WinControls.UI.IMapProvider)">
            <summary>
            Adds the specified provider.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapProviderCollection.Remove(Telerik.WinControls.UI.IMapProvider)">
            <summary>
            Removes the specified provider.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapProviderCollection.OnProviderUpdated(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:ProviderUpdated" /> event of all providers.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapProviderCollection.OnProviderInitializationComplete(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:ProviderInitializationComplete" /> event of all providers.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.BingRestMapProvider"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.BingRestMapProvider.BingKey">
            <summary>
            Gets or sets the Bing key.
            </summary>
            <value>The bing key.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BingRestMapProvider.UseSession">
            <summary>
            Gets or sets a value indicating whether to use session key.
            </summary>
            <value><c>true</c> if session should be used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BingRestMapProvider.SessionId">
            <summary>
            Gets the session identifier.
            </summary>
            <value>The session identifier.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BingRestMapProvider.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BingRestMapProvider.ImagerySet">
            <summary>
            Gets or sets the imagery set.
            </summary>
            <value>The imagery set.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BingRestMapProvider.Initializing">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Telerik.WinControls.UI.BingRestMapProvider"/> is currently in the initialization process.
            </summary>
            <value><c>true</c> if initializing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.BingRestMapProvider.Initialized">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Telerik.WinControls.UI.BingRestMapProvider"/> is initialized.
            </summary>
            <value><c>true</c> if initialized; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.Initialize">
            <summary>
            Initializes this provider.
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.InitializeSessionCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            Initialization of the session is completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Net.DownloadStringCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.InitializeImageryService">
            <summary>
            Initializes the imagery service.
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.InitializeImageryMetadataCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            Called when the imagery metadata initialization is complete.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Net.DownloadStringCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.GetTile(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the tile uri.
            </summary>
            <param name="tileMatrixX">The tile matrix x.</param>
            <param name="tileMatrixY">The tile matrix y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns>Uri.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.GetTileInfoImage(Telerik.WinControls.UI.TileInfo)">
            <summary>
            Gets the image of the tile info.
            </summary>
            <param name="tileInfo">The tile information.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.OnFileLoadAsyncComplete(System.String,System.Byte[])">
            <summary>
            Called when an async file load is complete.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.OnTileDownloadComplete(System.Object,Telerik.WinControls.UI.TileInfoEventArgs)">
            <summary>
            Called when a tile download is complete.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.TileInfoEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.BingRestMapProvider.GetCacheKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the key for cache storage.
            </summary>
            <param name="tileX">The tile x.</param>
            <param name="tileY">The tile y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OpenStreetMapProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.OpenStreetMapProvider"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.OpenStreetMapProvider.Initialized">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Telerik.WinControls.UI.OpenStreetMapProvider"/> is initialized.
            </summary>
            <value><c>true</c> if initialized; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.OpenStreetMapProvider.ImageUrl">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.OpenStreetMapProvider.GetTile(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the tile url.
            </summary>
            <param name="tileMatrixX">The tile matrix x.</param>
            <param name="tileMatrixY">The tile matrix y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns>Uri.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OpenStreetMapProvider.GetTileInfoImage(Telerik.WinControls.UI.TileInfo)">
            <summary>
            Gets the image for the provided tile info.
            </summary>
            <param name="tileInfo">The tile information.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.OpenStreetMapProvider.OnFileLoadAsyncComplete(System.String,System.Byte[])">
            <summary>
            Called when an asynchronous file loading is complete.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.OpenStreetMapProvider.GetCacheKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the key for cache storing.
            </summary>
            <param name="tileX">The tile x.</param>
            <param name="tileY">The tile y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.OpenStreetMapProvider.OnTileDownloadComplete(System.Object,Telerik.WinControls.UI.TileInfoEventArgs)">
            <summary>
            Called when a tile download is complete.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.TileInfoEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.LocalMapProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.LocalMapProvider"/> class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.LocalMapProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.LocalMapProvider"/> class.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="fileFormat">The file format.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.LocalMapProvider.NoImageAvailable">
            <summary>
            Gets or sets an image that will be displayed when a tile image cannot be retrieved or does not exist.
            </summary>
            <value>The no image available.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.LocalMapProvider.Initialized">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Telerik.WinControls.UI.LocalMapProvider"/> is initialized.
            </summary>
            <value><c>true</c> if initialized; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.LocalMapProvider.LoadTile(System.Int32,System.Int32,System.Int32)">
            <summary>
            Loads the tile image.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="zoom">The zoom.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileDownloader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapTileDownloader"/> class.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapTileDownloader.WebHeaders">
            <summary>
            Gets a collection of WebHeaders that will be sent to the server with each tile download request.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileDownloader.BeginDownloadTile(System.Uri,Telerik.WinControls.UI.TileInfo)">
            <summary>
            Begins a new tile download.
            </summary>
            <param name="uri">The URI.</param>
            <param name="tileInfo">The tile information.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileDownloader.TileDownloadDataCompleted(System.Object,System.Net.DownloadDataCompletedEventArgs)">
            <summary>
            Called when the data download for the tile is complete.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Net.DownloadDataCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileDownloader.ShouldRetryDownload(System.Exception)">
            <summary>
            Determines whether a failed download should be performed again.
            </summary>
            <param name="error">The error.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileDownloader.CancelTileDownload(Telerik.WinControls.UI.TileInfo)">
            <summary>
            Cancels a ongoing tile download.
            </summary>
            <param name="tileInfo">The tile information.</param>
        </member>
        <member name="E:Telerik.WinControls.UI.MapTileDownloader.TileDownloadComplete">
            <summary>
            Occurs when a tile download is complete.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapTileDownloader.OnTileDownloadComplete(Telerik.WinControls.UI.TileInfoEventArgs)">
            <summary>
            Fires the <see cref="E:TileDownloadComplete" /> event.
            </summary>
            <param name="e">The <see cref="T:Telerik.WinControls.UI.TileInfoEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.TileInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Byte[],System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.TileInfo"/> class.
            </summary>
            <param name="tileX">The tile x number.</param>
            <param name="tileY">The tile y number.</param>
            <param name="zoomLevel">The zoom level.</param>
            <param name="content">The content.</param>
            <param name="drawRect">The draw rect.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.TileInfo.TileX">
            <summary>
            Gets the tile x number.
            </summary>
            <value>The tile x number.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.TileInfo.TileY">
            <summary>
            Gets the tile y number.
            </summary>
            <value>The tile y number.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.TileInfo.ZoomLevel">
            <summary>
            Gets the zoom level.
            </summary>
            <value>The zoom level.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.TileInfo.Quadkey">
            <summary>
            Gets the quadkey of the tile.
            </summary>
            <value>The quadkey.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.TileInfo.Content">
            <summary>
            Gets or sets the content of the tile.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.TileInfo.DrawRect">
            <summary>
            Gets or sets the draw rect.
            </summary>
            <value>The draw rect.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.TileInfo.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.Providers">
            <summary>
            Gets the providers collection of the map element.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.Layers">
            <summary>
            Gets the layers collection of the map element.
            </summary>
            <value>The layers.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.InputBehavior">
            <summary>
            Gets or sets the input behavior that will handle the user input.
            </summary>
            <value>The input behavior.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.SelectedElements">
            <summary>
            Gets a collection of the selected elements.
            </summary>
            <value>The selected elements.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.ShowMiniMap">
            <summary>
            Gets or sets a value indicating whether the mini map is visible.
            </summary>
            <value><c>true</c> if the mini map is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.ShowLegend">
            <summary>
            Gets or sets a value indicating whether the legend is visible.
            </summary>
            <value><c>true</c> if the legend is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.ShowSearchBar">
            <summary>
            Gets or sets a value indicating whether the search bar is visible.
            </summary>
            <value><c>true</c> if the search bar is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.ShowNavigationBar">
            <summary>
            Gets or sets a value indicating whether the navigation bar is visible.
            </summary>
            <value><c>true</c> if the navigation bar is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.ShowScaleIndicator">
            <summary>
            Gets or sets a value indicating whether the scale indicator is visible.
            </summary>
            <value><c>true</c> if the scale indicator is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.Text">
            <summary>
            This property is not relevant for this class.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.Pan(Telerik.WinControls.UI.Map.SizeL)">
            <summary>
            Pans the viewport with the specified delta.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.Pan(System.Int64,System.Int64)">
            <summary>
            Pans the viewport to the specified x and y coordinates.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.Zoom(System.Int32)">
            <summary>
            Zooms the viewport to the specified zoom level.
            </summary>
            <param name="zoomLevel">The zoom level.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.Zoom(System.Int32,System.Boolean)">
            <summary>
            Zooms the viewport to the specified zoom level.
            </summary>
            <param name="zoomLevel">The zoom level.</param>
            <param name="animate">if set to <c>true</c> the zoom will be animated.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.Zoom(System.Int32,System.Boolean,System.Drawing.Point)">
            <summary>
            Zooms the viewport to the specified zoom level.
            </summary>
            <param name="zoomLevel">The zoom level.</param>
            <param name="animate">if set to <c>true</c> the zoom will be animated.</param>
            <param name="center">The point in the viewport around where the zoom should be performed.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMap.IsUpdateSuspended">
            <summary>
            Gets a value indicating whether updates are suspended.
            </summary>
            <value><c>true</c> if updates are suspended; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.BeginUpdate">
            <summary>
            Suspends updates.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.EndUpdate">
            <summary>
            Resumes updates and performs an update.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.EndUpdate(System.Boolean)">
            <summary>
            Resumes updates and performs an update if specified by the update parameter.
            </summary>
            <param name="update">if set to <c>true</c> an update is performed.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.BringIntoView(Telerik.WinControls.UI.Map.PointG)">
            <summary>
            Brings the specified geo point into the center of the viewport.
            </summary>
            <param name="location">The location.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.BringIntoView(Telerik.WinControls.UI.Map.PointG,System.Int32)">
            <summary>
            Brings the specified geo point into the center of the viewport and zooms the viewport to the specified zoom level.
            </summary>
            <param name="location">The location.</param>
            <param name="zoomLevel">The zoom level.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMap.BringIntoView(Telerik.WinControls.UI.Map.RectangleG)">
            <summary>
            Calculates the best zoom level that will fit the specified rectangle and centers it in the viewport.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="E:Telerik.WinControls.UI.RadMap.SelectionChanged">
            <summary>
            Occurs when a user clicks on a visual element in the layers.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.#ctor(Telerik.WinControls.UI.MapNavigationBarElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapNavigationElement"/> class.
            </summary>
            <param name="navigationBarElement">The navigation bar element.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.CreateNavigateNorthButton">
            <summary>
            Creates a navigate north button.
            </summary>
            <returns>MapNavigationButton.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.CreateNavigateWestButton">
            <summary>
            Creates a navigate west button.
            </summary>
            <returns>MapNavigationButton.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.CreateNavigateSouthButton">
            <summary>
            Creates a navigate south button.
            </summary>
            <returns>MapNavigationButton.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.CreateNavigateEastButton">
            <summary>
            Creates a navigate east button.
            </summary>
            <returns>MapNavigationButton.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationElement.NavigateNorthButton">
            <summary>
            Gets the navigate north button.
            </summary>
            <value>The navigate north button.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationElement.NavigateWestButton">
            <summary>
            Gets the navigate west button.
            </summary>
            <value>The navigate west button.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationElement.NavigateSouthButton">
            <summary>
            Gets the navigate south button.
            </summary>
            <value>The navigate south button.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationElement.NavigateEastButton">
            <summary>
            Gets the navigate east button.
            </summary>
            <value>The navigate east button.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationElement.MapElement">
            <summary>
            Gets the map element.
            </summary>
            <value>The map element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationElement.NavigationBarElement">
            <summary>
            Gets the navigation bar element.
            </summary>
            <value>The navigation bar element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapNavigationElement.NavigationDelta">
            <summary>
            Gets or sets the navigation delta. This is the value in pixels by which each navigation button pans the viewport.
            </summary>
            <value>The navigation delta.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.OnNavigateNorthClick(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:NavigateNorthClick" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.OnNavigateWestClick(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:NavigateWestClick" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.OnNavigateSouthClick(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:NavigateSouthClick" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapNavigationElement.OnNavigateEastClick(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:NavigateEastClick" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapViewInfo.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapViewInfo"/> class.
            </summary>
            <param name="name">The name of the view.</param>
            <param name="supportsLabels">if set to <c>true</c> the view supports labels, which can be turned on or off.</param>
            <param name="showLabels">if set to <c>true</c> labels are enabled.</param>
            <param name="isCurrent">if set to <c>true</c> if this is the current view.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapViewInfo.Name">
            <summary>
            Gets or sets the name of the view.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapViewInfo.SupportsLabels">
            <summary>
            Gets or sets a value indicating whether the view supports labels.
            </summary>
            <value><c>true</c> if the vuew supports labels; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapViewInfo.ShowLabels">
            <summary>
            Gets or sets a value indicating whether labels are enabled.
            </summary>
            <value><c>true</c> if labels are enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapViewInfo.IsCurrent">
            <summary>
            Gets or sets a value indicating whether the view is the current view.
            </summary>
            <value><c>true</c> if the view is the current view; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMapElement.CreateMapLegendElement">
            <summary>
            Creates a map legend element.
            </summary>
            <returns><see cref="T:Telerik.WinControls.UI.MapLegendElement"/>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMapElement.CreateSearchBarElement">
            <summary>
            Creates a search bar element.
            </summary>
            <returns><see cref="T:Telerik.WinControls.UI.MapSearchBarElement"/>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMapElement.CreateMapNavigationBarElement">
            <summary>
            Creates a map navigation bar element.
            </summary>
            <returns><see cref="T:Telerik.WinControls.UI.MapNavigationBarElement"/>.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.RadMapElement.CreateMapScaleIndicatorElement">
            <summary>
            Creates a map scale indicator element.
            </summary>
            <returns><see cref="T:Telerik.WinControls.UI.MapScaleIndicatorElement"/>.</returns>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.MiniMapElement">
            <summary>
            Gets the mini map element.
            </summary>
            <value>The mini map element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.LegendElement">
            <summary>
            Gets the legend element.
            </summary>
            <value>The legend element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.SearchBarElement">
            <summary>
            Gets the search bar element.
            </summary>
            <value>The search bar element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.NavigationBarElement">
            <summary>
            Gets the navigation bar element.
            </summary>
            <value>The navigation bar element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.ScaleIndicatorElement">
            <summary>
            Gets the scale indicator element.
            </summary>
            <value>The scale indicator element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.ShowMiniMap">
            <summary>
            Gets or sets a value indicating whether the mini map is visible.
            </summary>
            <value><c>true</c> if the mini map is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.ShowLegend">
            <summary>
            Gets or sets a value indicating whether the legend is visible.
            </summary>
            <value><c>true</c> if the legend is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.ShowSearchBar">
            <summary>
            Gets or sets a value indicating whether the search bar is visible.
            </summary>
            <value><c>true</c> if the search bar is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.ShowNavigationBar">
            <summary>
            Gets or sets a value indicating whether the navigation bar is visible.
            </summary>
            <value><c>true</c> if the navigation bar is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.ShowScaleIndicator">
            <summary>
            Gets or sets a value indicating whether the scale indicator is visible.
            </summary>
            <value><c>true</c> if the scale indicator is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.MiniMapSize">
            <summary>
            Gets or sets the size of the mini map.
            </summary>
            <value>The size of the mini map.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.RadMapElement.NavigationBarLocation">
            <summary>
            Gets or sets the navigation bar location.
            </summary>
            <value>The navigation bar location.</value>
        </member>
        <member name="T:Telerik.WinControls.UI.ViewportChangeAction">
            <summary>
            Defines the ViewportChangeActions that can happen.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ViewportChangeAction.None">
            <summary>
            No changes
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ViewportChangeAction.Pan">
            <summary>
            The viewport was panned
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ViewportChangeAction.Zoom">
            <summary>
            The viewport was zoomed
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.ViewportChangeAction.All">
            <summary>
            Multiple changes of different type
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapScaleIndicatorElement.#ctor(Telerik.WinControls.UI.RadMapElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapScaleIndicatorElement"/> class.
            </summary>
            <param name="mapElement">The map element.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapScaleIndicatorElement.MapElement">
            <summary>
            Gets the map element.
            </summary>
            <value>The map element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapScaleIndicatorElement.BarHeight">
            <summary>
            Gets or sets the height of the bar.
            </summary>
            <value>The height of the bar.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapScaleIndicatorElement.MetricBarColor">
            <summary>
            Gets or sets the color of the metric bar.
            </summary>
            <value>The color of the metric bar.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapScaleIndicatorElement.ImperialBarColor">
            <summary>
            Gets or sets the color of the imperial bar.
            </summary>
            <value>The color of the imperial bar.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapScaleIndicatorElement.MetersText">
            <summary>
            Gets or sets the text displayed for meters.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapScaleIndicatorElement.KilometersText">
            <summary>
            Gets or sets the text displayed for kilometers.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapScaleIndicatorElement.FeetText">
            <summary>
            Gets or sets the text displayed for feet.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapScaleIndicatorElement.MilesText">
            <summary>
            Gets or sets the text displayed for miles.
            </summary>
        </member>
        <member name="M:Telerik.WinControls.UI.MapScaleIndicatorElement.CalculateDistanceAndText">
            <summary>
            Calculates the distance and text to be displayed in the indicator.
            </summary>
            <returns>SizeAndText.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapScaleIndicatorElement.CalculateDistanceAndTextInMetersAndFeet(System.Int32)">
            <summary>
            Calculates the distance and text to be displayed in the indicator in meters and feet.
            </summary>
            <param name="maxPixels">The maximum width in pixels.</param>
            <returns>SizeAndText.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapScaleIndicatorElement.CalculateDistanceAndTextInKilometersAndMiles(System.Int32)">
            <summary>
            Calculates the distance and text to be displayed in the indicator in kilometers and miles.
            </summary>
            <param name="maxPixels">The maximum width in pixels.</param>
            <returns>SizeAndText.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapScaleIndicatorElement.GetDisplayScaleDistance(System.Double)">
            <summary>
            Gets an appropriate display scale distance.
            </summary>
            <param name="distance">The distance.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapSearchBarElement.CreateStackElement">
            <summary>
            Creates a stack element.
            </summary>
            <returns>StackLayoutElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapSearchBarElement.CreateSearchIconElement">
            <summary>
            Creates a search icon element.
            </summary>
            <returns>MapSearchIconElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapSearchBarElement.CreateTextBoxElement">
            <summary>
            Creates a text box element.
            </summary>
            <returns>RadTextBoxElement.</returns>
        </member>
        <member name="M:Telerik.WinControls.UI.MapSearchBarElement.#ctor(Telerik.WinControls.UI.RadMapElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.WinControls.UI.MapSearchBarElement"/> class.
            </summary>
            <param name="mapElement">The map element.</param>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchBarElement.StackLayoutElement">
            <summary>
            Gets the stack layout element.
            </summary>
            <value>The stack layout element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchBarElement.SearchIconElement">
            <summary>
            Gets the search icon element.
            </summary>
            <value>The search icon element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchBarElement.SearchTextBoxElement">
            <summary>
            Gets the search text box element.
            </summary>
            <value>The search text box element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchBarElement.SearchMode">
            <summary>
            Gets or sets the search mode.
            </summary>
            <value>The search mode.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchBarElement.SearchProvider">
            <summary>
            Gets or sets the search provider.
            </summary>
            <value>The search provider.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchBarElement.MapElement">
            <summary>
            Gets the map element.
            </summary>
            <value>The map element.</value>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchBarElement.SearchBarWidth">
            <summary>
            Gets or sets the width of the search bar.
            </summary>
        </member>
        <member name="P:Telerik.WinControls.UI.MapSearchBarElement.ShowMessageBoxOnError">
            <summary>
            Gets or sets whether a message box will be shown upon an error when the <see cref="T:Telerik.WinControls.UI.MapSearchBarElement"/> has no <see cref="T:Telerik.WinControls.UI.IMapSearchProvider"/> set.
            In this case the search element will traverse the providers collection of <seealso cref="T:Telerik.WinControls.UI.RadMapElement"/> and the provider will raise the SearchError event.
            </summary>
            <value>The map element.</value>
        </member>
        <member name="M:Telerik.WinControls.UI.MapSearchBarElement.Search(System.String)">
            <summary>
            Initiates a new search. 
            First if there is an subscriber to the <see cref="E:SearchCriteriaChanged"/> the event is raised. Search handling is left to the user.
            If there is no subscriber to the event the method checks the SearchProvider property. If the property is set a new async search is started. The user should handle the search result.
            If the property is not set the method traverses the providers in the Providers collection of the map element. If a search provider is found a new async search is started. The user should handle the search result.
            </summary>
            <param name="criteria">The criteria.</param>
        </member>
        <member name="M:Telerik.WinControls.UI.MapSearchBarElement.BuildSearchRequest(System.String)">
            <summary>
            Builds the search request based on the provided text.
            </summary>
            <param name="text">The text.</param>
            <returns>SearchRequest.</returns>
        </member>
        <member name="E:Telerik.WinControls.UI.MapSearchBarElement.SearchCriteriaChanged">
            <summary>
            Occurs when the search criteria changes.
            </summary>
        </member>
        <member name="T:Telerik.WinControls.UI.MapSearchMode">
            <summary>
            Defines how search is performed in RadMap.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.MapSearchMode.OnTextChange">
            <summary>
            A new search is initiated on every text change.
            </summary>
        </member>
        <member name="F:Telerik.WinControls.UI.MapSearchMode.OnUserConfirmation">
            <summary>
            A new search is initiated after a user confirmation.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor">
            <summary>
            Represents an ARGB (alpha, red, green, blue) color.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.Empty">
            <summary>
                Represents a color that is null.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.Transparent">
            <summary>
            Gets a system-defined color.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.Black">
            <summary>
                Gets a system-defined color that has an ARGB value of #FF000000.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.White">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFFFFFFF.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.WhiteSmoke">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFF5F5F5.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.LightGray">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFD3D3D3.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.R">
            <summary>
                Gets the red component value of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.G">
            <summary>
                Gets the green component value of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.B">
            <summary>
                Gets the blue component value of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.A">
            <summary>
                Gets the alpha component value of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.IsEmpty">
            <summary>
                Specifies whether this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure is uninitialized.
            </summary>
            <returns>
                This property returns true if this color is uninitialized; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.op_Equality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
                Tests whether two specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structures are equivalent.
            </summary>
            <returns>
                true if the two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structures are equal; otherwise, false.
            </returns>
            <param name="left">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that is to the left of the equality operator.
            </param>
            <param name="right">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that is to the right of the equality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.op_Inequality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
                Tests whether two specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structures are different.
            </summary>
            <returns>
                true if the two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structures are different; otherwise, false.
            </returns>
            <param name="left">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that is to the left of the inequality operator.
            </param>
            <param name="right">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that is to the right of the inequality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure from the four ARGB component (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
            <returns>
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that this method creates.
            </returns>
            <param name="alpha">The alpha component. Valid values are 0 through 255. </param>
            <param name="red">The red component. Valid values are 0 through 255. </param>
            <param name="green">The green component. Valid values are 0 through 255. </param>
            <param name="blue">The blue component. Valid values are 0 through 255. </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="alpha" />, <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.
            </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.FromArgb(System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </summary>
            <returns>
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that this method creates.
            </returns>
            <param name="red">
                The red component value for the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <param name="green">
                The green component value for the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <param name="blue">
                The blue component value for the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.
            </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.Equals(System.Object)">
            <summary>
                Tests whether the specified object is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure and is equivalent to this
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />
                structure.
            </summary>
            <returns>
                true if <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure equivalent to this
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />
                structure; otherwise, false.
            </returns>
            <param name="obj">The object to test. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
            <returns>
                An integer value that specifies the hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.ToString">
            <summary>
                Converts this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure to a human-readable string.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RDashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RPen"/> object.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent">
            <summary>
            Even class for handling keyboard events in <see cref="T:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt"/>.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent._control">
            <summary>
            is control is pressed
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent._aKeyCode">
            <summary>
            is 'A' key is pressed
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent._cKeyCode">
            <summary>
            is 'C' key is pressed
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent.Control">
            <summary>
            is control is pressed
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent.AKeyCode">
            <summary>
            is 'A' key is pressed
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent.CKeyCode">
            <summary>
            is 'C' key is pressed
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent">
            <summary>
            Even class for handling keyboard events in <see cref="T:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt"/>.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent._leftButton">
            <summary>
            Is the left mouse button participated in the event
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent.#ctor(System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent.LeftButton">
            <summary>
            Is the left mouse button participated in the event
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint">
            <summary>
                Represents an ordered pair of floating-point x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Empty">
            <summary>
                Represents a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> class with member data left uninitialized.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> class with the specified coordinates.
            </summary>
            <param name="x">The horizontal position of the point. </param>
            <param name="y">The vertical position of the point. </param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.IsEmpty">
            <summary>
                Gets a value indicating whether this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> is empty.
            </summary>
            <returns>
                true if both <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                are 0; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X">
            <summary>
                Gets or sets the x-coordinate of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </summary>
            <returns>
                The x-coordinate of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y">
            <summary>
                Gets or sets the y-coordinate of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </summary>
            <returns>
                The y-coordinate of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.op_Addition(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> by the specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the x- and y-coordinates of the
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />
                .
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.op_Subtraction(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> by the negative of a specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.op_Equality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Compares two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structures. The result specifies whether the values of the
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X" />
                and <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y" /> properties of the two
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />
                structures are equal.
            </summary>
            <returns>
                true if the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                values of the left and right
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />
                structures are equal; otherwise, false.
            </returns>
            <param name="left">
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <param name="right">
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.op_Inequality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Determines whether the coordinates of the specified points are not equal.
            </summary>
            <returns>
                true to indicate the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                values of <paramref name="left" /> and
                <paramref
                    name="right" />
                are not equal; otherwise, false.
            </returns>
            <param name="left">
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <param name="right">
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Add(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a given <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> by a specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Subtract(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> by the negative of a specified size.
            </summary>
            <returns>
                The translated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Equals(System.Object)">
            <summary>
                Specifies whether this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> contains the same coordinates as the specified
                <see
                    cref="T:System.Object" />
                .
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> and has the same coordinates as this
                <see
                    cref="T:System.Drawing.Point" />
                .
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>
                An integer value that specifies a hash value for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.ToString">
            <summary>
                Converts this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to a human readable string.
            </summary>
            <returns>
                A string that represents this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect">
            <summary>
            Stores a set of four floating-point numbers that represent the location and size of a rectangle. 
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Empty">
            <summary>
                Represents an instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> class with its members uninitialized.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> class with the specified location and size.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle. </param>
            <param name="width">The width of the rectangle. </param>
            <param name="height">The height of the rectangle. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.#ctor(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> class with the specified location and size.
            </summary>
            <param name="location">A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> that represents the upper-left corner of the rectangular region.</param>
            <param name="size">A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> that represents the width and height of the rectangular region.</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> that represents the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.</returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Size">
            <summary>
            Gets or sets the size of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />.
            </summary>
            <returns>A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> that represents the width and height of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.</returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X">
            <summary>
                Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y">
            <summary>
                Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width">
            <summary>
                Gets or sets the width of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The width of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height">
            <summary>
                Gets or sets the height of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The height of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Left">
            <summary>
                Gets the x-coordinate of the left edge of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate of the left edge of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Top">
            <summary>
                Gets the y-coordinate of the top edge of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate of the top edge of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Right">
            <summary>
                Gets the x-coordinate that is the sum of <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" />
                of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate that is the sum of <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" />
                of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Bottom">
            <summary>
                Gets the y-coordinate that is the sum of <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate that is the sum of <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.IsEmpty">
            <summary>
                Tests whether the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" /> or
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                property of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> has a value of zero.
            </summary>
            <returns>
                This property returns true if the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" /> or
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                property of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> has a value of zero; otherwise, false.
            </returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.op_Equality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Tests whether two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structures have equal location and size.
            </summary>
            <returns>
                This operator returns true if the two specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structures have equal
                <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X" />, <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y" />, <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" />, and <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" /> properties.
            </returns>
            <param name="left">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the left of the equality operator.
            </param>
            <param name="right">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the right of the equality operator.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.op_Inequality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Tests whether two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structures differ in location or size.
            </summary>
            <returns>
                This operator returns true if any of the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X" /> ,
                <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y" />, <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" />, or <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                properties of the two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structures are unequal; otherwise false.
            </returns>
            <param name="left">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the left of the inequality operator.
            </param>
            <param name="right">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the right of the inequality operator.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure with upper-left corner and lower-right corner at the specified locations.
            </summary>
            <returns>
                The new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> that this method creates.
            </returns>
            <param name="left">The x-coordinate of the upper-left corner of the rectangular region. </param>
            <param name="top">The y-coordinate of the upper-left corner of the rectangular region. </param>
            <param name="right">The x-coordinate of the lower-right corner of the rectangular region. </param>
            <param name="bottom">The y-coordinate of the lower-right corner of the rectangular region. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Equals(System.Object)">
            <summary>
                Tests whether <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> with the same location and size of this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />.
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> and its X, Y, Width, and Height properties are equal to the corresponding properties of this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />; otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Contains(System.Double,System.Double)">
            <summary>
                Determines if the specified point is contained within this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                This method returns true if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                structure; otherwise false.
            </returns>
            <param name="x">The x-coordinate of the point to test. </param>
            <param name="y">The y-coordinate of the point to test. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Contains(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Determines if the specified point is contained within this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                This method returns true if the point represented by the <paramref name="pt" /> parameter is contained within this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                structure; otherwise false.
            </returns>
            <param name="pt">The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to test.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Contains(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                structure.
            </summary>
            <returns>
                This method returns true if the rectangular region represented by <paramref name="rect" /> is entirely contained within the rectangular region represented by this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                ; otherwise false.
            </returns>
            <param name="rect">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> to test.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Inflate(System.Double,System.Double)">
            <summary>
                Inflates this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure by the specified amount.
            </summary>
            <param name="x">
                The amount to inflate this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure horizontally.
            </param>
            <param name="y">
                The amount to inflate this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure vertically.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Inflate(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Inflates this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> by the specified amount.
            </summary>
            <param name="size">The amount to inflate this rectangle. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Inflate(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Double,System.Double)">
            <summary>
                Creates and returns an inflated copy of the specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure. The copy is inflated by the specified amount. The original rectangle remains unmodified.
            </summary>
            <returns>
                The inflated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />.
            </returns>
            <param name="rect">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> to be copied. This rectangle is not modified.
            </param>
            <param name="x">The amount to inflate the copy of the rectangle horizontally. </param>
            <param name="y">The amount to inflate the copy of the rectangle vertically. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Intersect(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Replaces this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure with the intersection of itself and the specified
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                structure.
            </summary>
            <param name="rect">The rectangle to intersect. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Intersect(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Returns a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that represents the intersection of two rectangles. If there is no intersection, and empty
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                is returned.
            </summary>
            <returns>
                A third <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure the size of which represents the overlapped area of the two specified rectangles.
            </returns>
            <param name="a">A rectangle to intersect. </param>
            <param name="b">A rectangle to intersect. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.IntersectsWith(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
            <returns>
                This method returns true if there is any intersection.
            </returns>
            <param name="rect">The rectangle to test. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Union(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.
            </summary>
            <returns>
                A third <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that contains both of the two rectangles that form the union.
            </returns>
            <param name="a">A rectangle to union. </param>
            <param name="b">A rectangle to union. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Offset(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="pos">The amount to offset the location. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Offset(System.Double,System.Double)">
            <summary>
                Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="x">The amount to offset the location horizontally. </param>
            <param name="y">The amount to offset the location vertically. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.GetHashCode">
            <summary>
                Gets the hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure. For information about the use of hash codes, see Object.GetHashCode.
            </summary>
            <returns>The hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.ToString">
            <summary>
            Converts the Location and Size of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> to a human-readable string.
            </summary>
            <returns>
            A string that contains the position, width, and height of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure for example, "{X=20, Y=20, Width=100, Height=50}".
            </returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize">
            <summary>
            Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Empty">
            <summary>
                Gets a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that has a
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Height" />
                and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Width" />
                value of 0.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that has a
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Height" />
                and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Width" />
                value of 0.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.#ctor(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified existing
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <param name="size">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from which to create the new
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.#ctor(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <param name="pt">The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure from which to initialize this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified dimensions.
            </summary>
            <param name="width">
                The width component of the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </param>
            <param name="height">
                The height component of the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.IsEmpty">
            <summary>
                Gets a value that indicates whether this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure has zero width and height.
            </summary>
            <returns>
                This property returns true when this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure has both a width and height of zero; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Width">
            <summary>
                Gets or sets the horizontal component of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                The horizontal component of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure, typically measured in pixels.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Height">
            <summary>
                Gets or sets the vertical component of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                The vertical component of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure, typically measured in pixels.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Explicit(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)~TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint">
            <summary>
                Converts the specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to a
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure to which this operator converts.</returns>
            <param name="size">The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to be converted
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Addition(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Adds the width and height of one <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to the width and height of another
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that is the result of the addition operation.
            </returns>
            <param name="sz1">
                The first <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <param name="sz2">
                The second <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Subtraction(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Subtracts the width and height of one <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the width and height of another
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> that is the result of the subtraction operation.
            </returns>
            <param name="sz1">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the subtraction operator.
            </param>
            <param name="sz2">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right side of the subtraction operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Equality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Tests whether two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structures are equal.
            </summary>
            <returns>
                This operator returns true if <paramref name="sz1" /> and <paramref name="sz2" /> have equal width and height; otherwise, false.
            </returns>
            <param name="sz1">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the equality operator.
            </param>
            <param name="sz2">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right of the equality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Inequality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Tests whether two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structures are different.
            </summary>
            <returns>
                This operator returns true if <paramref name="sz1" /> and <paramref name="sz2" /> differ either in width or height; false if
                <paramref
                    name="sz1" />
                and <paramref name="sz2" /> are equal.
            </returns>
            <param name="sz1">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left of the inequality operator.
            </param>
            <param name="sz2">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right of the inequality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Add(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Adds the width and height of one <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to the width and height of another
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that is the result of the addition operation.
            </returns>
            <param name="sz1">
                The first <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <param name="sz2">
                The second <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Subtract(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Subtracts the width and height of one <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the width and height of another
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that is a result of the subtraction operation.
            </returns>
            <param name="sz1">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the subtraction operator.
            </param>
            <param name="sz2">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right side of the subtraction operator.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Equals(System.Object)">
            <summary>
                Tests to see whether the specified object is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure with the same dimensions as this
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> and has the same width and height as this
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                ; otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                An integer value that specifies a hash value for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.ToPointF">
            <summary>
                Converts a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>
                Returns a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.ToString">
            <summary>
                Creates a human-readable string that represents this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                A string that represents this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
            <PermissionSet>
                <IPermission
                    class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                    version="1" Flags="UnmanagedCode" />
            </PermissionSet>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RAdapter">
            <summary>
            Platform adapter to bridge platform specific objects to HTML Renderer core library.<br/>
            Core uses abstract renderer objects (RAdapter/RControl/REtc...) to access platform specific functionality, the concrete platforms 
            implements those objects to provide concrete platform implementation. Those allowing the core library to be platform agnostic.
            <para>
            Platforms: WinForms, WPF, Metro, PDF renders, etc.<br/>
            Objects: UI elements(Controls), Graphics(Render context), Colors, Brushes, Pens, Fonts, Images, Clipboard, etc.<br/>
            </para>
            </summary>
            <remarks>
            It is best to have a singleton instance of this class for concrete implementation!<br/>
            This is because it holds caches of default CssData, Images, Fonts and Brushes.
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._brushesCache">
            <summary>
            cache of brush color to brush instance
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._penCache">
            <summary>
            cache of pen color to pen instance
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._fontsHandler">
            <summary>
            cache of all the font used not to create same font again and again
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._defaultCssData">
            <summary>
            default CSS parsed data singleton
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._loadImage">
            <summary>
            image used to draw loading image icon
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._errorImage">
            <summary>
            image used to draw error image icon
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.DefaultCssData">
            <summary>
            Get the default CSS stylesheet data.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetColor(System.String)">
            <summary>
            Resolve color value from given color name.
            </summary>
            <param name="colorName">the color name</param>
            <returns>color value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetPen(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached pen instance for the given color.
            </summary>
            <param name="color">the color to get pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetSolidBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached solid brush instance for the given color.
            </summary>
            <param name="color">the color to get brush for</param>
            <returns>brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetLinearGradientBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.ConvertImage(System.Object)">
            <summary>
            Convert image object returned from <see cref="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> to <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/>.
            </summary>
            <param name="image">the image returned from load event</param>
            <returns>converted image or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.ImageFromStream(System.IO.Stream)">
            <summary>
            Create an <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/> object from the given stream.
            </summary>
            <param name="memoryStream">the stream to create image from</param>
            <returns>new image instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.IsFontExists(System.String)">
            <summary>
            Check if the given font exists in the system by font family name.
            </summary>
            <param name="font">the font name to check</param>
            <returns>true - font exists by given family name, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.AddFontFamily(TheArtOfDev.HtmlRenderer.Adapters.RFontFamily)">
            <summary>
            Adds a font family to be used.
            </summary>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetFont(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetLoadingImage">
            <summary>
            Get image to be used while HTML image is loading.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetLoadingFailedImage">
            <summary>
            Get image to be used if HTML image load failed.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetClipboardDataObject(System.String,System.String)">
            <summary>
            Get data object for the given html and plain text data.<br />
            The data object can be used for clipboard or drag-drop operation.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
            <returns>drag-drop data object</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboard(System.String)">
            <summary>
            Set the given text to the clipboard<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="text">the text to set</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboard(System.String,System.String)">
            <summary>
            Set the given html and plain text data to clipboard.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboard(TheArtOfDev.HtmlRenderer.Adapters.RImage)">
            <summary>
            Set the given image to clipboard.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="image">the image object to set to clipboard</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetContextMenu">
            <summary>
            Create a context menu that can be used on the control<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <returns>new context menu</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SaveToFile(TheArtOfDev.HtmlRenderer.Adapters.RImage,System.String,System.String,TheArtOfDev.HtmlRenderer.Adapters.RControl)">
            <summary>
            Save the given image to file by showing save dialog to the client.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="image">the image to save</param>
            <param name="name">the name of the image for save dialog</param>
            <param name="extension">the extension of the image for save dialog</param>
            <param name="control">optional: the control to show the dialog on</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateFont(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateFont(TheArtOfDev.HtmlRenderer.Adapters.RFontFamily,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family instance, size and style.<br/>
            Used to support custom fonts that require explicit font family instance to be created.
            </summary>
            <param name="family">the font family instance</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetColorInt(System.String)">
            <summary>
            Resolve color value from given color name.
            </summary>
            <param name="colorName">the color name</param>
            <returns>color value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreatePen(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached pen instance for the given color.
            </summary>
            <param name="color">the color to get pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateSolidBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached solid brush instance for the given color.
            </summary>
            <param name="color">the color to get brush for</param>
            <returns>brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateLinearGradientBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.ConvertImageInt(System.Object)">
            <summary>
            Convert image object returned from <see cref="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> to <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/>.
            </summary>
            <param name="image">the image returned from load event</param>
            <returns>converted image or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.ImageFromStreamInt(System.IO.Stream)">
            <summary>
            Create an <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/> object from the given stream.
            </summary>
            <param name="memoryStream">the stream to create image from</param>
            <returns>new image instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateFontInt(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateFontInt(TheArtOfDev.HtmlRenderer.Adapters.RFontFamily,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family instance, size and style.<br/>
            Used to support custom fonts that require explicit font family instance to be created.
            </summary>
            <param name="family">the font family instance</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetClipboardDataObjectInt(System.String,System.String)">
            <summary>
            Get data object for the given html and plain text data.<br />
            The data object can be used for clipboard or drag-drop operation.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
            <returns>drag-drop data object</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(System.String)">
            <summary>
            Set the given text to the clipboard
            </summary>
            <param name="text">the text to set</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(System.String,System.String)">
            <summary>
            Set the given html and plain text data to clipboard.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(TheArtOfDev.HtmlRenderer.Adapters.RImage)">
            <summary>
            Set the given image to clipboard.
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateContextMenuInt">
            <summary>
            Create a context menu that can be used on the control
            </summary>
            <returns>new context menu</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SaveToFileInt(TheArtOfDev.HtmlRenderer.Adapters.RImage,System.String,System.String,TheArtOfDev.HtmlRenderer.Adapters.RControl)">
            <summary>
            Save the given image to file by showing save dialog to the client.
            </summary>
            <param name="image">the image to save</param>
            <param name="name">the name of the image for save dialog</param>
            <param name="extension">the extension of the image for save dialog</param>
            <param name="control">optional: the control to show the dialog on</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RBrush">
            <summary>
            Adapter for platform specific brush objects - used to fill graphics (rectangles, polygons and paths).<br/>
            The brush can be solid color, gradient or image.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu">
            <summary>
            Adapter for platform specific context menu - used to create and show context menu at specific location.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.ItemsCount">
            <summary>
            The total number of items in the context menu
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.AddDivider">
            <summary>
            Add divider item to the context menu.<br />
            The divider is a non clickable place holder used to separate items.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.AddItem(System.String,System.Boolean,System.EventHandler)">
            <summary>
            Add item to the context menu with the given text that will raise the given event when clicked.
            </summary><param name="text">the text to set on the new context menu item</param><param name="enabled">if to set the item as enabled or disabled</param><param name="onClick">the event to raise when the item is clicked</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.RemoveLastDivider">
            <summary>
            Remove the last item from the context menu iff it is a divider
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.Show(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Show the context menu in the given parent control at the given location.
            </summary><param name="parent">the parent control to show in</param><param name="location">the location to show at relative to the parent control</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RControl">
            <summary>
            Adapter for platform specific control object - used to handle updating the control that the html is rendered on.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RControl._adapter">
            <summary>
            The platform adapter.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RControl.#ctor(TheArtOfDev.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init control with platform adapter.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RControl.Adapter">
            <summary>
            The platform adapter.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RControl.LeftMouseButton">
            <summary>
            Is the left mouse button is currently in pressed state
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RControl.RightMouseButton">
            <summary>
            Is the right mouse button is currently in pressed state
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RControl.MouseLocation">
            <summary>
            Get the current location of the mouse relative to the control
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RControl.SetCursorDefault">
            <summary>
            Set the cursor over the control to default cursor
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RControl.SetCursorHand">
            <summary>
            Set the cursor over the control to hand cursor
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RControl.SetCursorIBeam">
            <summary>
            Set the cursor over the control to I beam cursor
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RControl.DoDragDropCopy(System.Object)">
            <summary>
            Do drag-drop copy operation for the given data object.
            </summary>
            <param name="dragDropData">the drag-drop data object</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RControl.MeasureString(System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)">
            <summary>
            Measure the width of string under max width restriction calculating the number of characters that can fit and the width those characters take.<br/>
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <param name="maxWidth">the max width to calculate fit characters</param>
            <param name="charFit">the number of characters that will fit under the maxWidth restriction</param>
            <param name="charFitWidth">the width that only the characters that fit into max width take</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RControl.Invalidate">
            <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RFont">
            <summary>
            Adapter for platform specific font object - used to render text using specific font.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RFont.Size">
            <summary>
            Gets the em-size of this Font measured in the units specified by the Unit property.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RFont.Height">
            <summary>
            The line spacing, in pixels, of this font.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RFont.UnderlineOffset">
            <summary>
            Get the vertical offset of the font underline location from the top of the font.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RFont.LeftPadding">
            <summary>
            Get the left padding, in pixels, of the font.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RFontFamily">
            <summary>
            Adapter for platform specific font family object - define the available font families to use.<br/>
            Required for custom fonts handling: fonts that are not installed on the system.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RFontFamily.Name">
            <summary>
            Gets the name of this Font Family.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RGraphics">
            <summary>
            Adapter for platform specific graphics rendering object - used to render graphics and text in platform specific context.<br/>
            The core HTML Renderer components use this class for rendering logic, extending this
            class in different platform: WinForms, WPF, Metro, PDF, etc.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.adapter">
            <summary>
            the global adapter
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.clipStack">
            <summary>
            The clipping bound stack as clips are pushed/poped to/from the graphics
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RGraphics._suspendedClips">
            <summary>
            The suspended clips
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.#ctor(TheArtOfDev.HtmlRenderer.Adapters.RAdapter,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.GetPen(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get color pen.
            </summary>
            <param name="color">the color to get the pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.GetSolidBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get solid color brush.
            </summary>
            <param name="color">the color to get the brush for</param>
            <returns>solid color brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.GetLinearGradientBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.GetClip">
            <summary>
            Gets a Rectangle structure that bounds the clipping region of this Graphics.
            </summary>
            <returns>A rectangle structure that represents a bounding rectangle for the clipping region of this Graphics.</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.PopClip">
            <summary>
            Pop the latest clip push.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.PushClip(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Push the clipping region of this Graphics to interception of current clipping rectangle and the given rectangle.
            </summary>
            <param name="rect">Rectangle to clip to.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.PushClipExclude(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Push the clipping region of this Graphics to exclude the given rectangle from the current clipping rectangle.
            </summary>
            <param name="rect">Rectangle to exclude clipping in.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.SuspendClipping">
            <summary>
            Restore the clipping region to the initial clip.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.ResumeClipping">
            <summary>
            Resumes the suspended clips.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.SetAntiAliasSmoothingMode">
            <summary>
            Set the graphics smooth mode to use anti-alias.<br/>
            Use <see cref="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.ReturnPreviousSmoothingMode(System.Object)"/> to return back the mode used.
            </summary>
            <returns>the previous smooth mode before the change</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.ReturnPreviousSmoothingMode(System.Object)">
            <summary>
            Return to previous smooth mode before anti-alias was set as returned from <see cref="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.SetAntiAliasSmoothingMode"/>.
            </summary>
            <param name="prevMode">the previous mode to set</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.GetTextureBrush(TheArtOfDev.HtmlRenderer.Adapters.RImage,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get TextureBrush object that uses the specified image and bounding rectangle.
            </summary>
            <param name="image">The Image object with which this TextureBrush object fills interiors.</param>
            <param name="dstRect">A Rectangle structure that represents the bounding rectangle for this TextureBrush object.</param>
            <param name="translateTransformLocation">The dimension by which to translate the transformation</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.GetGraphicsPath">
            <summary>
            Get GraphicsPath object.
            </summary>
            <returns>graphics path instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.MeasureString(System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont)">
            <summary>
            Measure the width and height of string <paramref name="str"/> when drawn on device context HDC
            using the given font <paramref name="font"/>.
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <returns>the size of the string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.MeasureString(System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)">
            <summary>
            Measure the width of string under max width restriction calculating the number of characters that can fit and the width those characters take.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <param name="maxWidth">the max width to calculate fit characters</param>
            <param name="charFit">the number of characters that will fit under maxWidth restriction</param>
            <param name="charFitWidth">the width that only the characters that fit into max width take</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawString(System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,System.Boolean)">
            <summary>
            Draw the given string using the given font and foreground color at given location.
            </summary>
            <param name="str">the string to draw</param>
            <param name="font">the font to use to draw the string</param>
            <param name="color">the text color to set</param>
            <param name="point">the location to start string draw (top-left)</param>
            <param name="size">used to know the size of the rendered text for transparent text support</param>
            <param name="rtl">is to render the string right-to-left (true - RTL, false - LTR)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawLine(TheArtOfDev.HtmlRenderer.Adapters.RPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the line. </param>
            <param name="x1">The x-coordinate of the first point. </param>
            <param name="y1">The y-coordinate of the first point. </param>
            <param name="x2">The x-coordinate of the second point. </param>
            <param name="y2">The y-coordinate of the second point. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawRectangle(TheArtOfDev.HtmlRenderer.Adapters.RPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen that determines the color, width, and style of the rectangle. </param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw. </param>
            <param name="width">The width of the rectangle to draw. </param>
            <param name="height">The height of the rectangle to draw. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawRectangle(TheArtOfDev.HtmlRenderer.Adapters.RBrush,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill. </param>
            <param name="width">Width of the rectangle to fill. </param>
            <param name="height">Height of the rectangle to fill. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawImage(TheArtOfDev.HtmlRenderer.Adapters.RImage,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draws the specified portion of the specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/> at the specified location and with the specified size.
            </summary>
            <param name="image">Image to draw. </param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle. </param>
            <param name="srcRect">Rectangle structure that specifies the portion of the <paramref name="image"/> object to draw. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawImage(TheArtOfDev.HtmlRenderer.Adapters.RImage,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draws the specified Image at the specified location and with the specified size.
            </summary>
            <param name="image">Image to draw. </param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawPath(TheArtOfDev.HtmlRenderer.Adapters.RPen,TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath)">
            <summary>
            Draws a GraphicsPath.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the path. </param>
            <param name="path">GraphicsPath to draw. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawPath(TheArtOfDev.HtmlRenderer.Adapters.RBrush,TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="path">GraphicsPath that represents the path to fill. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.DrawPolygon(TheArtOfDev.HtmlRenderer.Adapters.RBrush,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by Point structures.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="points">Array of Point structures that represent the vertices of the polygon to fill. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphics.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath">
            <summary>
            Adapter for platform specific graphics path object - used to render (draw/fill) path shape.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath.Start(System.Double,System.Double)">
            <summary>
            Start path at the given point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath.LineTo(System.Double,System.Double)">
            <summary>
            Add stright line to the given point from te last point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath.ArcTo(System.Double,System.Double,System.Double,TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath.Corner)">
            <summary>
            Add circular arc of the given size to the given point from the last point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath.Dispose">
            <summary>
            Release path resources.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath.Corner">
            <summary>
            The 4 corners that are handled in arc rendering.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RImage">
            <summary>
            Adapter for platform specific image object - used to render images.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RImage.Width">
            <summary>
            Get the width, in pixels, of the image.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RImage.Height">
            <summary>
            Get the height, in pixels, of the image.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RPen">
            <summary>
            Adapter for platform specific pen objects - used to draw graphics (lines, rectangles and paths) 
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RPen.Width">
            <summary>
            Gets or sets the width of this Pen, in units of the Graphics object used for drawing.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RPen.DashStyle">
            <summary>
            Gets or sets the style used for dashed lines drawn with this Pen.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.CssData">
            <summary>
            Holds parsed stylesheet css blocks arranged by media and classes.<br/>
            <seealso cref="T:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock"/>
            </summary>
            <remarks>
            To learn more about CSS blocks visit CSS spec: http://www.w3.org/TR/CSS21/syndata.html#block
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.CssData._emptyArray">
            <summary>
            used to return empty array
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.CssData._mediaBlocks">
            <summary>
            dictionary of media type to dictionary of css class name to the cssBlocks collection with all the data.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.CssData.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.CssData.Parse(TheArtOfDev.HtmlRenderer.Adapters.RAdapter,System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet to <see cref="T:TheArtOfDev.HtmlRenderer.Core.CssData"/> object.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso href="http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="adapter">Platform adapter</param>
            <param name="stylesheet">the stylesheet source to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the parsed css data</returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.CssData.MediaBlocks">
            <summary>
            dictionary of media type to dictionary of css class name to the cssBlocks collection with all the data
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.CssData.ContainsCssBlock(System.String,System.String)">
            <summary>
            Check if there are css blocks for the given class selector.
            </summary>
            <param name="className">the class selector to check for css blocks by</param>
            <param name="media">optional: the css media type (default - all)</param>
            <returns>true - has css blocks for the class, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.CssData.GetCssBlock(System.String,System.String)">
            <summary>
            Get collection of css blocks for the requested class selector.<br/>
            the <paramref name="className"/> can be: class name, html element name, html element and 
            class name (elm.class), hash tag with element id (#id).<br/>
            returned all the blocks that word on the requested class selector, it can contain simple
            selector or hierarchy selector.
            </summary>
            <param name="className">the class selector to get css blocks by</param>
            <param name="media">optional: the css media type (default - all)</param>
            <returns>collection of css blocks, empty collection if no blocks exists (never null)</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.CssData.AddCssBlock(System.String,TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Add the given css block to the css data, merging to existing block if required.
            </summary>
            <remarks>
            If there is no css blocks for the same class it will be added to data collection.<br/>
            If there is already css blocks for the same class it will check for each existing block
            if the hierarchical selectors match (or not exists). if do the two css blocks will be merged into
            one where the new block properties overwrite existing if needed. if the new block doesn't mach any
            existing it will be added either to the beginning of the list if it has no  hierarchical selectors or at the end.<br/>
            Css block without hierarchical selectors must be added to the beginning of the list so more specific block
            can overwrite it when the style is applied.
            </remarks>
            <param name="media">the media type to add the CSS to</param>
            <param name="cssBlock">the css block to add</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.CssData.Combine(TheArtOfDev.HtmlRenderer.Core.CssData)">
            <summary>
            Combine this CSS data blocks with <paramref name="other"/> CSS blocks for each media.<br/>
            Merge blocks if exists in both.
            </summary>
            <param name="other">the CSS data to combine with</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.CssData.Clone">
            <summary>
            Create deep copy of the css data with cloned css blocks.
            </summary>
            <returns>cloned object</returns>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.CssDefaults.DefaultStyleSheet">
            <summary>
            CSS Specification's Default Style Sheet for HTML 4
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/sample.html
            </remarks>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.Border">
            <summary>
            Border types
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox">
            <summary>
            Represents a CSS Box of text or replaced elements.
            </summary>
            <remarks>
            The Box can contains other boxes, that's the way that the CSS Tree
            is composed.
            
            To know more about boxes visit CSS spec:
            http://www.w3.org/TR/CSS21/box.html
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox._parentBox">
            <summary>
            the parent css box of this css box in the hierarchy
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox._htmlContainer">
            <summary>
            the root container for the hierarchy
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox._htmltag">
            <summary>
            the html tag that is associated with this css box, null if anonymous box
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox._text">
            <summary>
            the inner text of the box
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox._tableFixed">
            <summary>
            Do not use or alter this flag
            </summary>
            <remarks>
            Flag that indicates that CssTable algorithm already made fixes on it.
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox._imageLoadHandler">
            <summary>
            handler for loading background image
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parentBox">optional: the parent of this css box in html</param>
            <param name="tag">optional: the html tag associated with this css box</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.HtmlContainer">
            <summary>
            Gets the HtmlContainer of the Box.
            WARNING: May be null.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.ParentBox">
            <summary>
            Gets or sets the parent box of this box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.Boxes">
            <summary>
            Gets the children boxes of this box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.IsBrElement">
            <summary>
            Is the box is of "br" element.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.IsInline">
            <summary>
            is the box "Display" is "Inline", is this is an inline box and not block.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.IsBlock">
            <summary>
            is the box "Display" is "Block", is this is an block box and not inline.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.IsClickable">
            <summary>
            Is the css box clickable (by default only "a" element is clickable)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.IsFixed">
            <summary>
            Gets a value indicating whether this instance or one of its parents has Position = fixed.
            </summary>
            <value>
              <c>true</c> if this instance is fixed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.HrefLink">
            <summary>
            Get the href link of the box (by default get "href" attribute)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.ContainingBlock">
            <summary>
            Gets the containing block-box of this box. (The nearest parent box with display=block)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.HtmlTag">
            <summary>
            Gets the HTMLTag that hosts this box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.IsImage">
            <summary>
            Gets if this box represents an image
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.IsSpaceOrEmpty">
            <summary>
            Tells if the box is empty or contains just blank spaces
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.Text">
            <summary>
            Gets or sets the inner text of the box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.LineBoxes">
            <summary>
            Gets the line-boxes of this box (if block box)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.ParentLineBoxes">
            <summary>
            Gets the linebox(es) that contains words of this box (if inline)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.Rectangles">
            <summary>
            Gets the rectangles where this box should be painted
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.Words">
            <summary>
            Gets the BoxWords of text in the box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.FirstWord">
            <summary>
            Gets the first word of the box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.FirstHostingLineBox">
            <summary>
            Gets or sets the first linebox where content of this box appear
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.LastHostingLineBox">
            <summary>
            Gets or sets the last linebox where content of this box appear
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.CreateBox(TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Create new css box for the given parent with the given html tag.<br/>
            </summary>
            <param name="tag">the html tag to define the box</param>
            <param name="parent">the box to add the new box to it as child</param>
            <returns>the new box</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.CreateBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Create new css box for the given parent with the given optional html tag and insert it either
            at the end or before the given optional box.<br/>
            If no html tag is given the box will be anonymous.<br/>
            If no before box is given the new box will be added at the end of parent boxes collection.<br/>
            If before box doesn't exists in parent box exception is thrown.<br/>
            </summary>
            <remarks>
            To learn more about anonymous inline boxes visit: http://www.w3.org/TR/CSS21/visuren.html#anonymous
            </remarks>
            <param name="parent">the box to add the new box to it as child</param>
            <param name="tag">optional: the html tag to define the box</param>
            <param name="before">optional: to insert as specific location in parent box</param>
            <returns>the new box</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.CreateBlock">
            <summary>
            Create new css block box.
            </summary>
            <returns>the new block box</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.CreateBlock(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Create new css block box for the given parent with the given optional html tag and insert it either
            at the end or before the given optional box.<br/>
            If no html tag is given the box will be anonymous.<br/>
            If no before box is given the new box will be added at the end of parent boxes collection.<br/>
            If before box doesn't exists in parent box exception is thrown.<br/>
            </summary>
            <remarks>
            To learn more about anonymous block boxes visit CSS spec:
            http://www.w3.org/TR/CSS21/visuren.html#anonymous-block-level
            </remarks>
            <param name="parent">the box to add the new block box to it as child</param>
            <param name="tag">optional: the html tag to define the box</param>
            <param name="before">optional: to insert as specific location in parent box</param>
            <returns>the new block box</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.PerformLayout(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.Paint(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.SetBeforeBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Set this box in 
            </summary>
            <param name="before"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.SetAllBoxes(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Move all child boxes from <paramref name="fromBox"/> to this box.
            </summary>
            <param name="fromBox">the box to move all its child boxes from</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.ParseToWords">
            <summary>
            Splits the text into words and saves the result
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.PerformLayoutImp(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.<br/>
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.MeasureWordsSize(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetParent">
            <summary>
            Get the parent of this css properties instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetIndexForList">
            <summary>
            Gets the index of the box to be used on a (ordered) list
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.CreateListItemBox(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Creates the <see cref="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox._listItemBox"/>
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.FirstWordOccourence(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Searches for the first word occurrence inside the box, on the specified linebox
            </summary>
            <param name="b"></param>
            <param name="line"> </param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetAttribute(System.String)">
            <summary>
            Gets the specified Attribute, returns string.Empty if no attribute specified
            </summary>
            <param name="attribute">Attribute to retrieve</param>
            <returns>Attribute value or string.Empty if no attribute specified</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetAttribute(System.String,System.String)">
            <summary>
            Gets the value of the specified attribute of the source HTML tag.
            </summary>
            <param name="attribute">Attribute to retrieve</param>
            <param name="defaultValue">Value to return if attribute is not specified</param>
            <returns>Attribute value or defaultValue if no attribute specified</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetMinimumWidth">
            <summary>
            Gets the minimum width that the box can be.<br/>
            The box can be as thin as the longest word plus padding.<br/>
            The check is deep thru box tree.<br/>
            </summary>
            <returns>the min width of the box</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetMinimumWidth_LongestWord(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Double@,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect@)">
            <summary>
            Gets the longest word (in width) inside the box, deeply.
            </summary>
            <param name="box"></param>
            <param name="maxWidth"> </param>
            <param name="maxWidthWord"> </param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetWidthMarginDeep(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Get the total margin value (left and right) from the given box to the given end box.<br/>
            </summary>
            <param name="box">the box to start calculation from.</param>
            <returns>the total margin</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetMaximumBottom(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Double)">
            <summary>
            Gets the maximum bottom of the boxes inside the startBox
            </summary>
            <param name="startBox"></param>
            <param name="currentMaxBottom"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetMinMaxWidth(System.Double@,System.Double@)">
            <summary>
            Get the <paramref name="minWidth"/> and <paramref name="maxWidth"/> width of the box content.<br/>
            </summary>
            <param name="minWidth">The minimum width the content must be so it won't overflow (largest word + padding).</param>
            <param name="maxWidth">The total width the content can take without line wrapping (with padding).</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetMinMaxSumWords(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the <paramref name="min"/> and <paramref name="maxSum"/> of the box words content and <paramref name="paddingSum"/>.<br/>
            </summary>
            <param name="box">the box to calculate for</param>
            <param name="min">the width that allows for each word to fit (width of the longest word)</param>
            <param name="maxSum">the max width a single line of words can take without wrapping</param>
            <param name="paddingSum">the total amount of padding the content has </param>
            <param name="marginSum"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.HasJustInlineSiblings">
            <summary>
            Gets if this box has only inline siblings (including itself)
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.InheritStyle(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Boolean)">
            <summary>
            Gets the rectangles where inline box will be drawn. See Remarks for more info.
            </summary>
            <returns>Rectangles where content should be placed</returns>
            <remarks>
            Inline boxes can be split across different LineBoxes, that's why this method
            Delivers a rectangle for each LineBox related to this box, if inline.
            </remarks>
            <summary>
            Inherits inheritable values from parent.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.MarginTopCollapse(TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Gets the result of collapsing the vertical margins of the two boxes
            </summary>
            <param name="prevSibling">the previous box under the same parent</param>
            <returns>Resulting top margin</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.CalculateActualRight">
            <summary>
            Calculate the actual right of the box by the actual right of the child boxes if this box actual right is not set.
            </summary>
            <returns>the calculated actual right value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.MarginBottomCollapse">
            <summary>
            Gets the result of collapsing the vertical margins of the two boxes
            </summary>
            <returns>Resulting bottom margin</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.OffsetTop(System.Double)">
            <summary>
            Deeply offsets the top of the box and its contents
            </summary>
            <param name="amount"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.PaintImp(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.PaintBackground(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Paints the background of the box
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rect">the bounding rectangle to draw in</param>
            <param name="isFirst">is it the first rectangle of the element</param>
            <param name="isLast">is it the last rectangle of the element</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.PaintWords(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Paint all the words in the box.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="offset">the current scroll offset to offset the words</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.PaintDecoration(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Paints the text decoration (underline/strike-through/over-line)
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rectangle"> </param>
            <param name="isFirst"> </param>
            <param name="isLast"> </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.OffsetRectangle(TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox,System.Double)">
            <summary>
            Offsets the rectangle of the specified linebox by the specified gap,
            and goes deep for rectangles of children in that linebox.
            </summary>
            <param name="lineBox"></param>
            <param name="gap"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.RectanglesReset">
            <summary>
            Resets the <see cref="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.Rectangles"/> array
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.OnImageLoadComplete(TheArtOfDev.HtmlRenderer.Adapters.RImage,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process complete with image request refresh for it to be painted.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetSelectionForeBrush">
            <summary>
            Get brush for the text depending if there is selected text color set.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.GetSelectionBackBrush(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,System.Boolean)">
            <summary>
            Get brush for selection background depending if it has external and if alpha is required for images.
            </summary>
            <param name="g"></param>
            <param name="forceAlpha">used for images so they will have alpha effect</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBox.ToString">
            <summary>
            ToString override.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame">
            <summary>
            CSS box for iframe element.<br/>
            If the iframe is of embedded YouTube or Vimeo video it will show image with play.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame._imageWord">
            <summary>
            the image word of this image box
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame._isVideo">
            <summary>
            is the iframe is of embeded video
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame._videoTitle">
            <summary>
            the title of the video
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame._videoImageUrl">
            <summary>
            the url of the video thumbnail image
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame._videoLinkUrl">
            <summary>
            link to the video on the site
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame._imageLoadHandler">
            <summary>
            handler used for image loading by source
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame._imageLoadingComplete">
            <summary>
            is image load is finished, used to know if no image is found
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.IsClickable">
            <summary>
            Is the css box clickable ("a" element is clickable)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.HrefLink">
            <summary>
            Get the href link of the box (by default get "href" attribute)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.IsVideo">
            <summary>
            is the iframe is of embeded video
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.LoadYoutubeDataAsync(System.Uri)">
            <summary>
            Load YouTube video data (title, image, link) by calling YouTube API.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.OnDownloadYoutubeApiCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            Parse YouTube API response to get video data (title, image, link).
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.LoadVimeoDataAsync(System.Uri)">
            <summary>
            Load Vimeo video data (title, image, link) by calling Vimeo API.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.OnDownloadVimeoApiCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            Parse Vimeo API response to get video data (title, image, link).
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.HandleDataLoadFailure(System.Exception,System.String)">
            <summary>
            Handle error occurred during video data load to handle if the video was not found.
            </summary>
            <param name="ex">the exception that occurred during data load web request</param>
            <param name="source">the name of the video source (YouTube/Vimeo/Etc.)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.HandlePostApiCall(System.Object)">
            <summary>
            Create image handler for downloading video image if found and release the WebClient instance used for API call.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.PaintImp(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.DrawImage(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw video image over the iframe if found.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.DrawTitle(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw video title on top of the iframe if found.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.DrawPlay(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw play over the iframe if we found link url.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.MeasureWordsSize(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g">the device to use</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.SetErrorBorder">
            <summary>
            Set error image border on the image box.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxFrame.OnLoadImageComplete(TheArtOfDev.HtmlRenderer.Adapters.RImage,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process is complete with image or without update the image box.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxHr">
            <summary>
            CSS box for hr element.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxHr.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxHr.PerformLayoutImp(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxHr.PaintImp(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage">
            <summary>
            CSS box for image element.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage._imageWord">
            <summary>
            the image word of this image box
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage._imageLoadHandler">
            <summary>
            handler used for image loading by source
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage._imageLoadingComplete">
            <summary>
            is image load is finished, used to know if no image is found
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage.Image">
            <summary>
            Get the image of this image box.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage.PaintImp(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage.MeasureWordsSize(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g">the device to use</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage.SetErrorBorder">
            <summary>
            Set error image border on the image box.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxImage.OnLoadImageComplete(TheArtOfDev.HtmlRenderer.Adapters.RImage,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process is complete with image or without update the image box.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties">
            <summary>
            Base class for css box to handle the css properties.<br/>
            Has field and property for every css property that can be set, the properties add additional parsing like
            setting the correct border depending what border value was set (single, two , all four).<br/>
            Has additional fields to control the location and size of the box and 'actual' css values for some properties
            that require additional calculations and parsing.<br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties._location">
            <summary>
            Gets or sets the location of the box
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties._size">
            <summary>
            Gets or sets the size of the box
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties._actualLineHeight">
            <summary>
            the width of whitespace between words
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.Location">
            <summary>
            Gets or sets the location of the box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.Size">
            <summary>
            Gets or sets the size of the box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.Bounds">
            <summary>
            Gets the bounds of the box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.AvailableWidth">
            <summary>
            Gets the width available on the box, counting padding and margin.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualRight">
            <summary>
            Gets the right of the box. When setting, it will affect only the width of the box.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBottom">
            <summary>
            Gets or sets the bottom of the box. 
            (When setting, alters only the Size.Height of the box)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ClientLeft">
            <summary>
            Gets the left of the client rectangle (Where content starts rendering)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ClientTop">
            <summary>
            Gets the top of the client rectangle (Where content starts rendering)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ClientRight">
            <summary>
            Gets the right of the client rectangle
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ClientBottom">
            <summary>
            Gets the bottom of the client rectangle
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ClientRectangle">
            <summary>
            Gets the client rectangle
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualHeight">
            <summary>
            Gets the actual height
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualWidth">
            <summary>
            Gets the actual height
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualPaddingTop">
            <summary>
            Gets the actual top's padding
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualPaddingLeft">
            <summary>
            Gets the actual padding on the left
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualPaddingBottom">
            <summary>
            Gets the actual Padding of the bottom
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualPaddingRight">
            <summary>
            Gets the actual padding on the right
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualMarginTop">
            <summary>
            Gets the actual top's Margin
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.CollapsedMarginTop">
            <summary>
            The margin top value if was effected by margin collapse.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualMarginLeft">
            <summary>
            Gets the actual Margin on the left
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualMarginBottom">
            <summary>
            Gets the actual Margin of the bottom
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualMarginRight">
            <summary>
            Gets the actual Margin on the right
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderTopWidth">
            <summary>
            Gets the actual top border width
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderLeftWidth">
            <summary>
            Gets the actual Left border width
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderBottomWidth">
            <summary>
            Gets the actual Bottom border width
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderRightWidth">
            <summary>
            Gets the actual Right border width
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderTopColor">
            <summary>
            Gets the actual top border Color
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderLeftColor">
            <summary>
            Gets the actual Left border Color
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderBottomColor">
            <summary>
            Gets the actual Bottom border Color
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderRightColor">
            <summary>
            Gets the actual Right border Color
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualCornerNw">
            <summary>
            Gets the actual length of the north west corner
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualCornerNe">
            <summary>
            Gets the actual length of the north east corner
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualCornerSe">
            <summary>
            Gets the actual length of the south east corner
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualCornerSw">
            <summary>
            Gets the actual length of the south west corner
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.IsRounded">
            <summary>
            Gets a value indicating if at least one of the corners of the box is rounded
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualWordSpacing">
            <summary>
            Gets the actual width of whitespace between words.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualColor">
            <summary>
            
            Gets the actual color for the text.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBackgroundColor">
            <summary>
            Gets the actual background color of the box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBackgroundGradient">
            <summary>
            Gets the second color that creates a gradient for the background
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBackgroundGradientAngle">
            <summary>
            Gets the actual angle specified for the background gradient
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualParentFont">
            <summary>
            Gets the actual font of the parent
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualFont">
            <summary>
            Gets the font that should be actually used to paint the text of the box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualLineHeight">
            <summary>
            Gets the line height
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualTextIndent">
            <summary>
            Gets the text indentation (on first line only)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderSpacingHorizontal">
            <summary>
            Gets the actual horizontal border spacing for tables
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderSpacingVertical">
            <summary>
            Gets the actual vertical border spacing for tables
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.GetParent">
            <summary>
            Get the parent of this css properties instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.GetEmHeight">
            <summary>
            Gets the height of the font in the specified units
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.NoEms(System.String)">
            <summary>
            Ensures that the specified length is converted to pixels if necessary
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.SetAllBorders(System.String,System.String,System.String)">
            <summary>
            Set the style/width/color for all 4 borders on the box.<br/>
            if null is given for a value it will not be set.
            </summary>
            <param name="style">optional: the style to set</param>
            <param name="width">optional: the width to set</param>
            <param name="color">optional: the color to set</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.MeasureWordSpacing(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the width of whitespace between words (set <see cref="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.ActualWordSpacing"/>).
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties.InheritStyle(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Boolean)">
            <summary>
            Inherits inheritable values from specified box.
            </summary>
            <param name="everything">Set to true to inherit all CSS properties instead of only the ineritables</param>
            <param name="p">Box to inherit the properties</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine">
            <summary>
            Helps on CSS Layout.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.MeasureImageSize(TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage)">
            <summary>
            Measure image box size by the width\height set on the box and the actual rendered image size.<br/>
            If no image exists for the box error icon will be set.
            </summary>
            <param name="imageWord">the image word to measure</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.CreateLineBoxes(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Creates line boxes for the specified blockbox
            </summary>
            <param name="g"></param>
            <param name="blockBox"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyCellVerticalAlignment(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Applies special vertical alignment for table-cells
            </summary>
            <param name="g"></param>
            <param name="cell"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.FlowBox(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Double,System.Double,System.Double,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Recursively flows the content of the box using the inline model
            </summary>
            <param name="g">Device Info</param>
            <param name="blockbox">Blockbox that contains the text flow</param>
            <param name="box">Current box to flow its content</param>
            <param name="limitRight">Maximum reached right</param>
            <param name="linespacing">Space to use between rows of text</param>
            <param name="startx">x starting coordinate for when breaking lines of text</param>
            <param name="line">Current linebox being used</param>
            <param name="curx">Current x coordinate that will be the left of the next word</param>
            <param name="cury">Current y coordinate that will be the top of the next word</param>
            <param name="maxRight">Maximum right reached so far</param>
            <param name="maxbottom">Maximum bottom reached so far</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.AdjustAbsolutePosition(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Double,System.Double)">
            <summary>
            Adjust the position of absolute elements by letf and top margins.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.BubbleRectangles(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Recursively creates the rectangles of the blockBox, by bubbling from deep to outside of the boxes 
            in the rectangle structure
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyHorizontalAlignment(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies vertical and horizontal alignment to words in lineboxes
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyRightToLeft(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies right to left direction to words
            </summary>
            <param name="blockBox"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyRightToLeftOnLine(TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies RTL direction to all the words on the line.
            </summary>
            <param name="line">the line to apply RTL to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyRightToLeftOnSingleBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Applies RTL direction to specific box words on the line.
            </summary>
            <param name="lineBox"></param>
            <param name="box"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyVerticalAlignment(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies vertical alignment to the linebox
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyJustifyAlignment(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies centered alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyCenterAlignment(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies centered alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyRightAlignment(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies right alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyLeftAlignment(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Simplest alignment, just arrange words.
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngine.ToList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            todo: optimizate, not creating a list each time
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable">
            <summary>
            Layout engine for tables executing the complex layout of tables with rows/columns/headers/etc.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable._tableBox">
            <summary>
            the main box of the table
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable._caption">
            <summary>
            
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable._bodyrows">
            <summary>
            collection of all rows boxes
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable._columns">
            <summary>
            collection of all columns boxes
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable._allRows">
            <summary>
            
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="tableBox"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetTableSpacing(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Get the table cells spacing for all the cells in the table.<br/>
            Used to calculate the spacing the table has in addition to regular padding and borders.
            </summary>
            <param name="tableBox">the table box to calculate the spacing for</param>
            <returns>the calculated spacing</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.PerformLayout(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="tableBox"> </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.Layout(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Analyzes the Table and assigns values to this CssTable object.
            To be called from the constructor
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.AssignBoxKinds">
            <summary>
            Get the table boxes into the proper fields.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.InsertEmptyBoxes">
            <summary>
            Insert EmptyBoxes for vertical cell spanning.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.CalculateCountAndWidth">
            <summary>
            Determine Row and Column Count, and ColumnWidths
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.DetermineMissingColumnWidths(System.Double)">
            <summary>
            
            </summary>
            <param name="availCellSpace"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.EnforceMaximumSize">
            <summary>
            While table width is larger than it should, and width is reductable.<br/>
            If table max width is limited by we need to lower the columns width even if it will result in clipping<br/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.EnforceMinimumSize">
            <summary>
            Check for minimum sizes (increment widths if necessary)
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.LayoutCells(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Layout the cells by the calculated table layout
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetSpannedMinWidth(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Int32,System.Int32)">
            <summary>
            Gets the spanned width of a cell (With of all columns it spans minus one).
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetCellRealColumnIndex(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the cell column index checking its position and other cells colspans
            </summary>
            <param name="row"></param>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetCellWidth(System.Int32,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the cells width, taking colspan and being in the specified column
            </summary>
            <param name="column"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetColSpan(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the colspan of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetRowSpan(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the rowspan of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.MeasureWords(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Recursively measures words inside the box
            </summary>
            <param name="box">the box to measure</param>
            <param name="g">Device to use</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.CanReduceWidth">
            <summary>
            Tells if the columns widths can be reduced,
            by checking the minimum widths of all cells
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.CanReduceWidth(System.Int32)">
            <summary>
            Tells if the specified column can be reduced,
            by checking its minimum width
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetAvailableTableWidth">
            <summary>
            Gets the available width for the whole table.
            It also sets the value of WidthSpecified
            </summary>
            <returns></returns>
            <remarks>
            The table's width can be larger than the result of this method, because of the minimum 
            size that individual boxes.
            </remarks>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetMaxTableWidth">
            <summary>
            Gets the available width for the whole table.
            It also sets the value of WidthSpecified
            </summary>
            <returns></returns>
            <remarks>
            The table's width can be larger than the result of this method, because of the minimum 
            size that individual boxes.
            </remarks>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetColumnsMinMaxWidthByContent(System.Boolean,System.Double[]@,System.Double[]@)">
            <summary>
            Calculate the min and max width for each column of the table by the content in all rows.<br/>
            the min width possible without clipping content<br/>
            the max width the cell content can take without wrapping<br/>
            </summary>
            <param name="onlyNans">if to measure only columns that have no calculated width</param>
            <param name="minFullWidths">return the min width for each column - the min width possible without clipping content</param>
            <param name="maxFullWidths">return the max width for each column - the max width the cell content can take without wrapping</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetAvailableCellWidth">
            <summary>
            Gets the width available for cells
            </summary>
            <returns></returns>
            <remarks>
            It takes away the cell-spacing from <see cref="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetAvailableTableWidth"/>
            </remarks>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetWidthSum">
            <summary>
            Gets the current sum of column widths
            </summary>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetSpan(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the span attribute of the tag of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetColumnMinWidths">
            <summary>
            Gets the minimum width of each column
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetHorizontalSpacing">
            <summary>
            Gets the actual horizontal spacing of the table
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetHorizontalSpacing(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the actual horizontal spacing of the table
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetVerticalSpacing">
            <summary>
            Gets the actual vertical spacing of the table
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength">
            <summary>
            Represents and gets info about a CSS Length
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/syndata.html#length-units
            </remarks>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.#ctor(System.String)">
            <summary>
            Creates a new CssLength from a length specified on a CSS style sheet or fragment
            </summary>
            <param name="length">Length as specified in the Style Sheet or style fragment</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.Number">
            <summary>
            Gets the number in the length
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.HasError">
            <summary>
            Gets if the length has some parsing error
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.IsPercentage">
            <summary>
            Gets if the length represents a precentage (not actually a length)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.IsRelative">
            <summary>
            Gets if the length is specified in relative units
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.Unit">
            <summary>
            Gets the unit of the length
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.Length">
            <summary>
            Gets the length as specified in the string
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.ConvertEmToPoints(System.Double)">
            <summary>
            If length is in Ems, returns its value in points
            </summary>
            <param name="emSize">Em size factor to multiply</param>
            <returns>Points size of this em</returns>
            <exception cref="T:System.InvalidOperationException">If length has an error or isn't in ems</exception>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.ConvertEmToPixels(System.Double)">
            <summary>
            If length is in Ems, returns its value in pixels
            </summary>
            <param name="pixelFactor">Pixel size factor to multiply</param>
            <returns>Pixels size of this em</returns>
            <exception cref="T:System.InvalidOperationException">If length has an error or isn't in ems</exception>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLength.ToString">
            <summary>
            Returns the length formatted ready for CSS interpreting.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox">
            <summary>
            Represents a line of text.
            </summary>
            <remarks>
            To learn more about line-boxes see CSS spec:
            http://www.w3.org/TR/CSS21/visuren.html
            </remarks>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Creates a new LineBox
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.RelatedBoxes">
            <summary>
            Gets a list of boxes related with the linebox. 
            To know the words of the box inside this linebox, use the <see cref="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.WordsOf(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)"/> method.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.Words">
            <summary>
            Gets the words inside the linebox
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.OwnerBox">
            <summary>
            Gets the owner box
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.Rectangles">
            <summary>
            Gets a List of rectangles that are to be painted on this linebox
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.LineHeight">
            <summary>
            Get the height of this box line (the max height of all the words)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.LineBottom">
            <summary>
            Get the bottom of this box line (the max bottom of all the words)
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.ReportExistanceOf(TheArtOfDev.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            Lets the linebox add the word an its box to their lists if necessary.
            </summary>
            <param name="word"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.WordsOf(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Return the words of the specified box that live in this linebox
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.UpdateRectangle(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Updates the specified rectangle of the specified box.
            </summary>
            <param name="box"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="b"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.AssignRectanglesToBoxes">
            <summary>
            Copies the rectangles to their specified box
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.SetBaseLine(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Double)">
            <summary>
            Sets the baseline of the words of the specified box to certain height
            </summary>
            <param name="g">Device info</param>
            <param name="b">box to check words</param>
            <param name="baseline">baseline</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.IsLastSelectedWord(TheArtOfDev.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            Check if the given word is the last selected word in the line.<br/>
            It can either be the last word in the line or the next word has no selection.
            </summary>
            <param name="word">the word to check</param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox.ToString">
            <summary>
            Returns the words of the linebox
            </summary>
            <returns></returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect">
            <summary>
            Represents a word inside an inline box
            </summary>
            <remarks>
            Because of performance, words of text are the most atomic 
            element in the project. It should be characters, but come on,
            imagine the performance when drawing char by char on the device.<br/>
            It may change for future versions of the library.
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect._ownerBox">
            <summary>
            the CSS box owner of the word
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect._rect">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect._selection">
            <summary>
            If the word is selected this points to the selection handler for more data
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="owner">the CSS box owner of the word</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.OwnerBox">
            <summary>
            Gets the Box where this word belongs.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Rectangle">
            <summary>
            Gets or sets the bounds of the rectangle
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Left">
            <summary>
            Left of the rectangle
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Top">
            <summary>
            Top of the rectangle
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Width">
            <summary>
            Width of the rectangle
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.FullWidth">
            <summary>
            Get the full width of the word including the spacing.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.ActualWordSpacing">
            <summary>
            Gets the actual width of whitespace between words.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Height">
            <summary>
            Height of the rectangle
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Right">
            <summary>
            Gets or sets the right of the rectangle. When setting, it only affects the Width of the rectangle.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Bottom">
            <summary>
            Gets or sets the bottom of the rectangle. When setting, it only affects the Height of the rectangle.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Selection">
            <summary>
            If the word is selected this points to the selection handler for more data
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.HasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.HasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Image">
            <summary>
            Gets the image this words represents (if one exists)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.IsImage">
            <summary>
            Gets if the word represents an image.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.IsSpaces">
            <summary>
            Gets a bool indicating if this word is composed only by spaces.
            Spaces include tabs and line breaks
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.IsLineBreak">
            <summary>
            Gets if the word is composed by only a line break
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Text">
            <summary>
            Gets the text of the word
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.Selected">
            <summary>
            is the word is currently selected
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.SelectedStartIndex">
            <summary>
            the selection start index if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.SelectedEndIndexOffset">
            <summary>
            the selection end index if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.SelectedStartOffset">
            <summary>
            the selection start offset if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.SelectedEndOffset">
            <summary>
            the selection end offset if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.LeftGlyphPadding">
            <summary>
            Gets or sets an offset to be considered in measurements
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssRect.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage">
            <summary>
            Represents a word inside an inline box
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage._image">
            <summary>
            the image object if it is image word (can be null if not loaded)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage._imageRectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Creates a new BoxWord which represents an image
            </summary>
            <param name="owner">the CSS box owner of the word</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage.Image">
            <summary>
            Gets the image this words represents (if one exists)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage.IsImage">
            <summary>
            Gets if the word represents an image.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage.ImageRectangle">
            <summary>
            the image rectange restriction as returned from image load event
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectImage.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord">
            <summary>
            Represents a word inside an inline box
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord._text">
            <summary>
            The word text
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord._hasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord._hasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="owner">the CSS box owner of the word</param>
            <param name="text">the word chars </param>
            <param name="hasSpaceBefore">was there a whitespace before the word chars (before trim)</param>
            <param name="hasSpaceAfter">was there a whitespace after the word chars (before trim)</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord.HasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord.HasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord.IsSpaces">
            <summary>
            Gets a bool indicating if this word is composed only by spaces.
            Spaces include tabs and line breaks
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord.IsLineBreak">
            <summary>
            Gets if the word is composed by only a line break
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord.Text">
            <summary>
            Gets the text of the word
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.CssRectWord.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssSpacingBox">
            <summary>
            Used to make space on vertical cell combination
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssSpacingBox._startRow">
            <summary>
            the index of the row where box starts
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.CssSpacingBox._endRow">
            <summary>
            the index of the row where box ends
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssSpacingBox.StartRow">
            <summary>
            Gets the index of the row where box starts
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.CssSpacingBox.EndRow">
            <summary>
            Gets the index of the row where box ends
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.CssUnit">
            <summary>
            Represents the possible units of the CSS lengths
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/syndata.html#length-units
            </remarks>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Dom.HoverBoxBlock">
            <summary>
            CSS boxes that have ":hover" selector on them.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.HoverBoxBlock._cssBox">
            <summary>
            the box that has :hover css on
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.HoverBoxBlock._cssBlock">
            <summary>
            the :hover style block data
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.HoverBoxBlock.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.HoverBoxBlock.CssBox">
            <summary>
            the box that has :hover css on
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.HoverBoxBlock.CssBlock">
            <summary>
            the :hover style block data
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag._name">
            <summary>
            the name of the html tag
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag._isSingle">
            <summary>
            if the tag is single placed; in other words it doesn't have a separate closing tag;
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag._attributes">
            <summary>
            collection of attributes and their value the html tag has
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag.#ctor(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="name">the name of the html tag</param>
            <param name="isSingle">if the tag is single placed; in other words it doesn't have a separate closing tag;</param>
            <param name="attributes">collection of attributes and their value the html tag has</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag.Name">
            <summary>
            Gets the name of this tag
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag.Attributes">
            <summary>
            Gets collection of attributes and their value the html tag has
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag.IsSingle">
            <summary>
            Gets if the tag is single placed; in other words it doesn't have a separate closing tag; <br/>
            e.g. &lt;br&gt;
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag.HasAttributes">
            <summary>
            is the html tag has attributes.
            </summary>
            <returns>true - has attributes, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag.HasAttribute(System.String)">
            <summary>
            Gets a boolean indicating if the attribute list has the specified attribute
            </summary>
            <param name="attribute">attribute name to check if exists</param>
            <returns>true - attribute exists, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag.TryGetAttribute(System.String,System.String)">
            <summary>
            Get attribute value for given attribute name or null if not exists.
            </summary>
            <param name="attribute">attribute name to get by</param>
            <param name="defaultValue">optional: value to return if attribute is not specified</param>
            <returns>attribute value or null if not found</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock">
            <summary>
            Represents a block of CSS property values.<br/>
            Contains collection of key-value pairs that are CSS properties for specific css class.<br/>
            Css class can be either custom or html tag name.
            </summary>
            <remarks>
            To learn more about CSS blocks visit CSS spec: http://www.w3.org/TR/CSS21/syndata.html#block
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock._class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock._properties">
            <summary>
            the CSS block properties and values
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock._selectors">
            <summary>
            additional selectors to used in hierarchy (p className1 > className2)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock._hover">
            <summary>
            is the css block has :hover pseudo-class
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{TheArtOfDev.HtmlRenderer.Core.Entities.CssBlockSelectorItem},System.Boolean)">
            <summary>
            Creates a new block from the block's source
            </summary>
            <param name="class">the name of the css class of the block</param>
            <param name="properties">the CSS block properties and values</param>
            <param name="selectors">optional: additional selectors to used in hierarchy</param>
            <param name="hover">optional: is the css block has :hover pseudo-class</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.Class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.Selectors">
            <summary>
            additional selectors to used in hierarchy (p className1 > className2)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.Properties">
            <summary>
            Gets the CSS block properties and its values
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.Hover">
            <summary>
            is the css block has :hover pseudo-class
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.Merge(TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Merge the other block properties into this css block.<br/>
            Other block properties can overwrite this block properties.
            </summary>
            <param name="other">the css block to merge with</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.Clone">
            <summary>
            Create deep copy of the CssBlock.
            </summary>
            <returns>new CssBlock with same data</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.Equals(TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Check if the two css blocks are the same (same class, selectors and properties).
            </summary>
            <param name="other">the other block to compare to</param>
            <returns>true - the two blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.EqualsSelector(TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Check if the selectors of the css blocks is the same.
            </summary>
            <param name="other">the other block to compare to</param>
            <returns>true - the selectors on blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.Equals(System.Object)">
            <summary>
            Check if the two css blocks are the same (same class, selectors and properties).
            </summary>
            <param name="obj">the other block to compare to</param>
            <returns>true - the two blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlockSelectorItem">
            <summary>
            Holds single class selector in css block hierarchical selection (p class1 > div.class2)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlockSelectorItem._class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlockSelectorItem._directParent">
            <summary>
            is the selector item has to be direct parent
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlockSelectorItem.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new block from the block's source
            </summary>
            <param name="class">the name of the css class of the block</param>
            <param name="directParent"> </param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlockSelectorItem.Class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlockSelectorItem.DirectParent">
            <summary>
            is the selector item has to be direct parent
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.CssBlockSelectorItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle">
            <summary>
            Controls the way styles are generated when html is generated.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle.None">
            <summary>
            styles are not generated at all
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle.Inline">
            <summary>
            style are inserted in style attribute for each html tag
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle.InHeader">
            <summary>
            style section is generated in the head of the html
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadCallback">
            <summary>
            Callback used in <see cref="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> to allow setting image externally and async.<br/>
            The callback can provide path to image file path, URL or the actual image to use.<br/>
            If <paramref name="imageRectangle"/> is given (not <see cref="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Empty"/>) then only the specified rectangle will
            be used from the loaded image and not all of it, also the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
            <param name="image">the image to use</param>
            <param name="imageRectangle">optional: limit to specific rectangle in the loaded image</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs">
            <summary>
            Invoked when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and 
            provide file path to load the image from. Can also use the asynchronous image overwrite not to block HTML rendering is applicable.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs._handled">
            <summary>
            use to cancel the image loading by html renderer, the provided image will be used.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs._src">
            <summary>
            the source of the image (file path or uri)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the image element
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs._callback">
            <summary>
            Callback used to allow setting image externally and async.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadCallback)">
            <summary>
            Init.
            </summary>
            <param name="src">the source of the image (file path or Uri)</param>
            <param name="attributes">collection of all the attributes that are defined on the image element</param>
            <param name="callback">Callback used to allow setting image externally and async.</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Src">
            <summary>
            the source of the image (file path, URL or inline data)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the image element or CSS style
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled">
            <summary>
            Indicate the image load is handled asynchronously.
            Cancel this image loading and overwrite the image asynchronously using callback method.<br/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback">
            <summary>
            Callback to overwrite the loaded image with error image.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback(System.String)">
            <summary>
            Callback to overwrite the loaded image with image to load from given URI.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Callback to overwrite the loaded image with image to load from given URI.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            Only the specified rectangle (x,y,width,height) will be used from the loaded image and not all of it, also 
            the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
            <param name="x">optional: limit to specific rectangle of the image and not all of it</param>
            <param name="y">optional: limit to specific rectangle of the image and not all of it</param>
            <param name="width">optional: limit to specific rectangle of the image and not all of it</param>
            <param name="height">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback(System.Object)">
            <summary>
            Callback to overwrite the loaded image with given image object.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            If imageRectangle is given (not <see cref="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Empty"/>) then only the specified rectangle will
            be used from the loaded image and not all of it, also the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="image">the image to load</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback(System.Object,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Callback to overwrite the loaded image with given image object.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            Only the specified rectangle (x,y,width,height) will be used from the loaded image and not all of it, also 
            the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="image">the image to load</param>
            <param name="x">optional: limit to specific rectangle of the image and not all of it</param>
            <param name="y">optional: limit to specific rectangle of the image and not all of it</param>
            <param name="width">optional: limit to specific rectangle of the image and not all of it</param>
            <param name="height">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs">
            <summary>
            Raised when the user clicks on a link in the html.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs._link">
            <summary>
            the link href that was clicked
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs._handled">
            <summary>
            use to cancel the execution of the link
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="link">the link href that was clicked</param>
            <param name="attributes"></param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs.Link">
            <summary>
            the link href that was clicked
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs.Handled">
            <summary>
            use to cancel the execution of the link
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedException">
            <summary>
            Exception thrown when client code subscribed to LinkClicked event thrown exception.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception. </param><param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).<br/>
            It can happen if some async event has occurred that requires re-paint and re-layout of the html.<br/>
            Example: async download of image is complete.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs._layout">
            <summary>
            is re-layout is required for the refresh
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs.#ctor(System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="layout">is re-layout is required for the refresh</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs.Layout">
            <summary>
            is re-layout is required for the refresh
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs">
            <summary>
            Raised when an error occurred during html rendering.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs._type">
            <summary>
            error type that is reported
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs._message">
            <summary>
            the error message
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs._exception">
            <summary>
            the exception that occurred (can be null)
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs.#ctor(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorType,System.String,System.Exception)">
            <summary>
            Init.
            </summary>
            <param name="type">the type of error to report</param>
            <param name="message">the error message</param>
            <param name="exception">optional: the exception that occurred</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs.Type">
            <summary>
            error type that is reported
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs.Message">
            <summary>
            the error message
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs.Exception">
            <summary>
            the exception that occurred (can be null)
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorType">
            <summary>
            Enum of possible error types that can be reported.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlScrollEventArgs">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlScrollEventArgs._location">
            <summary>
            the location to scroll to
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlScrollEventArgs.#ctor(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Init.
            </summary>
            <param name="location">the location to scroll to</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlScrollEventArgs.X">
            <summary>
            the x location to scroll to
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlScrollEventArgs.Y">
            <summary>
            the x location to scroll to
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs">
            <summary>
            Invoked when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._src">
            <summary>
            the source of the stylesheet as found in the HTML (file path or URL)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._setSrc">
            <summary>
            provide the new source (file path or URL) to load stylesheet from
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._setStyleSheet">
            <summary>
            provide the stylesheet to load
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._setStyleSheetData">
            <summary>
            provide the stylesheet data to load
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="src">the source of the image (file path or URL)</param>
            <param name="attributes">collection of all the attributes that are defined on the image element</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.Src">
            <summary>
            the source of the stylesheet as found in the HTML (file path or URL)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.SetSrc">
            <summary>
            provide the new source (file path or URL) to load stylesheet from
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.SetStyleSheet">
            <summary>
            provide the stylesheet to load
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.SetStyleSheetData">
            <summary>
            provide the stylesheet data to load
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1">
            <summary>
            Holds data on link element in HTML.<br/>
            Used to expose data outside of HTML Renderer internal structure.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1._id">
            <summary>
            the id of the link element if present
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1._href">
            <summary>
            the href data of the link
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1._rectangle">
            <summary>
            the rectangle of element as calculated by html layout
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1.#ctor(System.String,System.String,`0)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1.Id">
            <summary>
            the id of the link element if present
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1.Href">
            <summary>
            the href data of the link
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1.Rectangle">
            <summary>
            the rectangle of element as calculated by html layout
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1.IsAnchor">
            <summary>
            Is the link is directed to another element in the html
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Entities.LinkElementData`1.AnchorId">
            <summary>
            Return the id of the element this anchor link is referencing.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler">
            <summary>
            Contains all the paint code to paint different background images.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.DrawBackgroundImage(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw the background image of the given box in the given rectangle.<br/>
            Handle background-repeat and background-position values.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="box">the box to draw its background image</param>
            <param name="imageLoadHandler">the handler that loads image to draw</param>
            <param name="rectangle">the rectangle to draw image in</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.GetLocation(System.String,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Get top-left location to start drawing the image at depending on background-position value.
            </summary>
            <param name="backgroundPosition">the background-position value</param>
            <param name="rectangle">the rectangle to position image in</param>
            <param name="imgSize">the size of the image</param>
            <returns>the top-left location</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.DrawRepeatX(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the X axis.<br/>
            Adjust location to left if starting location doesn't include all the range (adjusted to center or right).
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.DrawRepeatY(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the Y axis.<br/>
            Adjust location to top if starting location doesn't include all the range (adjusted to center or bottom).
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.DrawRepeat(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the X and Y axis.<br/>
            Adjust location to left-top if starting location doesn't include all the range (adjusted to center or bottom/right).
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler">
            <summary>
            Contains all the complex paint code to paint different style borders.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler._borderPts">
            <summary>
            used for all border paint to use the same points and not create new array each time.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.DrawBoxBorders(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Draws all the border of the box with respect to style, width, etc.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="box">the box to draw borders for</param>
            <param name="rect">the bounding rectangle to draw in</param>
            <param name="isFirst">is it the first rectangle of the element</param>
            <param name="isLast">is it the last rectangle of the element</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.DrawBorder(TheArtOfDev.HtmlRenderer.Core.Dom.Border,TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.RBrush,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw simple border.
            </summary>
            <param name="border">Desired border</param>
            <param name="g">the device to draw to</param>
            <param name="box">Box which the border corresponds</param>
            <param name="brush">the brush to use</param>
            <param name="rectangle">the bounding rectangle to draw in</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.DrawBorder(TheArtOfDev.HtmlRenderer.Core.Dom.Border,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Draw specific border (top/bottom/left/right) with the box data (style/width/rounded).<br/>
            </summary>
            <param name="border">desired border to draw</param>
            <param name="box">the box to draw its borders, contain the borders data</param>
            <param name="g">the device to draw into</param>
            <param name="rect">the rectangle the border is enclosing</param>
            <param name="isLineStart">Specifies if the border is for a starting line (no bevel on left)</param>
            <param name="isLineEnd">Specifies if the border is for an ending line (no bevel on right)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.SetInOutsetRectanglePoints(TheArtOfDev.HtmlRenderer.Core.Dom.Border,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Set rectangle for inset/outset border as it need diagonal connection to other borders.
            </summary>
            <param name="border">Desired border</param>
            <param name="b">Box which the border corresponds</param>
            <param name="r">the rectangle the border is enclosing</param>
            <param name="isLineStart">Specifies if the border is for a starting line (no bevel on left)</param>
            <param name="isLineEnd">Specifies if the border is for an ending line (no bevel on right)</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetRoundedBorderPath(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.Border,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Makes a border path for rounded borders.<br/>
            To support rounded dotted/dashed borders we need to use arc in the border path.<br/>
            Return null if the border is not rounded.<br/>
            </summary>
            <param name="g">the device to draw into</param>
            <param name="border">Desired border</param>
            <param name="b">Box which the border corresponds</param>
            <param name="r">the rectangle the border is enclosing</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetPen(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,System.String,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get pen to be used for border draw respecting its style.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetColor(TheArtOfDev.HtmlRenderer.Core.Dom.Border,TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties,System.String)">
            <summary>
            Get the border color for the given box border.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetWidth(TheArtOfDev.HtmlRenderer.Core.Dom.Border,TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Get the border width for the given box border.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetStyle(TheArtOfDev.HtmlRenderer.Core.Dom.Border,TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Get the border style for the given box border.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.BordersDrawHandler.Darken(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Makes the specified color darker for inset/outset borders.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler">
            <summary>
            Handle context menu.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._selectAll">
            <summary>
            select all text
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._copy">
            <summary>
            copy selected text
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._copyLink">
            <summary>
            copy the link source
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._openLink">
            <summary>
            open link (as left mouse click)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._copyImageLink">
            <summary>
            copy the source of the image
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._copyImage">
            <summary>
            copy image to clipboard
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._saveImage">
            <summary>
            save image to disk
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._openVideo">
            <summary>
            open video in browser
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._copyVideoUrl">
            <summary>
            copy video url to browser
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._selectionHandler">
            <summary>
            the selection handler linked to the context menu handler
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._htmlContainer">
            <summary>
            the html container the handler is on
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._contextMenu">
            <summary>
            the last context menu shown
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._parentControl">
            <summary>
            the control that the context menu was shown on
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._currentRect">
            <summary>
            the css rectangle that context menu shown on
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler._currentLink">
            <summary>
            the css link box that context menu shown on
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.#cctor">
            <summary>
            Init context menu items strings.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.#ctor(TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler,TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt)">
            <summary>
            Init.
            </summary>
            <param name="selectionHandler">the selection handler linked to the context menu handler</param>
            <param name="htmlContainer">the html container the handler is on</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.ShowContextMenu(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Show context menu clicked on given rectangle.
            </summary>
            <param name="parent">the parent control to show the context menu on</param>
            <param name="rect">the rectangle that was clicked to show context menu</param>
            <param name="link">the link that was clicked to show context menu on</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.DisposeContextMenu">
            <summary>
            Dispose of the last used context menu.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnOpenLinkClick(System.Object,System.EventArgs)">
            <summary>
            Handle link click.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnCopyLinkClick(System.Object,System.EventArgs)">
            <summary>
            Copy the href of a link to clipboard.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnSaveImageClick(System.Object,System.EventArgs)">
            <summary>
            Open save as dialog to save the image
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnCopyImageLinkClick(System.Object,System.EventArgs)">
            <summary>
            Copy the image source to clipboard.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnCopyImageClick(System.Object,System.EventArgs)">
            <summary>
            Copy image object to clipboard.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnCopyClick(System.Object,System.EventArgs)">
            <summary>
            Copy selected text.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnSelectAllClick(System.Object,System.EventArgs)">
            <summary>
            Select all text.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler">
            <summary>
            Utilities for fonts and fonts families handling.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler._fontsMapping">
            <summary>
            Allow to map not installed fonts to different
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler._existingFontFamilies">
            <summary>
            collection of all installed and added font families to check if font exists
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler._fontsCache">
            <summary>
            cache of all the font used not to create same font again and again
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler.#ctor(TheArtOfDev.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler.IsFontExists(System.String)">
            <summary>
            Check if the given font family exists by name
            </summary>
            <param name="family">the font to check</param>
            <returns>true - font exists by given family name, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler.AddFontFamily(TheArtOfDev.HtmlRenderer.Adapters.RFontFamily)">
            <summary>
            Adds a font family to be used.
            </summary>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler.GetCachedFont(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get cached font instance for the given font properties.<br/>
            Improve performance not to create same font multiple times.
            </summary>
            <returns>cached font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler.TryGetFont(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get cached font if it exists in cache or null if it is not.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.FontsHandler.CreateFont(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            create font (try using existing font family to support custom fonts)
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.DownloadFileAsyncCallback">
            <summary>
            On download file async complete, success or fail.
            </summary>
            <param name="imageUri">The online image uri</param>
            <param name="filePath">the path to the downloaded file</param>
            <param name="error">the error if download failed</param>
            <param name="canceled">is the file download request was canceled</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader">
            <summary>
            Handler for downloading images from the web.<br/>
            Single instance of the handler used for all images downloaded in a single html, this way if the html contains more
            than one reference to the same image it will be downloaded only once.<br/>
            Also handles corrupt, partial and canceled downloads by first downloading to temp file and only if successful moving to cached 
            file location.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader._clients">
            <summary>
            the web client used to download image from URL (to cancel on dispose)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader._imageDownloadCallbacks">
            <summary>
            dictionary of image cache path to callbacks of download to handle multiple requests to download the same image 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.DownloadImage(System.Uri,System.String,System.Boolean,TheArtOfDev.HtmlRenderer.Core.Handlers.DownloadFileAsyncCallback)">
            <summary>
            Makes a request to download the image from the server and raises the cachedFileCallback when it's down.<br/>
            </summary>
            <param name="imageUri">The online image uri</param>
            <param name="filePath">the path on disk to download the file to</param>
            <param name="async">is to download the file sync or async (true-async)</param>
            <param name="cachedFileCallback">This callback will be called with local file path. If something went wrong in the download it will return null.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.DownloadImageFromUrl(System.Uri,System.String,System.String)">
            <summary>
            Download the requested file in the URI to the given file path.<br/>
            Use async sockets API to download from web, <see cref="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)"/>.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.DownloadImageFromUrlAsync(System.Object)">
            <summary>
            Download the requested file in the URI to the given file path.<br/>
            Use async sockets API to download from web, <see cref="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)"/>.
            </summary>
            <param name="data">key value pair of URL and file info to download the file to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            On download image complete to local file.<br/>
            If the download canceled do nothing, if failed report error.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.OnDownloadImageCompleted(System.Net.WebClient,System.Uri,System.String,System.String,System.Exception,System.Boolean)">
            <summary>
            Checks if the file was downloaded and raises the cachedFileCallback from <see cref="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader._imageDownloadCallbacks"/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageDownloader.ReleaseObjects">
            <summary>
            Release the image and client objects.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler">
            <summary>
            Handler for all loading image logic.<br/>
            <p>
            Loading by <see cref="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/>.<br/>
            Loading by file path.<br/>
            Loading by URI.<br/>
            </p>
            </summary>
            <remarks>
            <para>
            Supports sync and async image loading.
            </para>
            <para>
            If the image object is created by the handler on calling dispose of the handler the image will be released, this
            makes release of unused images faster as they can be large.<br/>
            Disposing image load handler will also cancel download of image from the web.
            </para>
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler._htmlContainer">
            <summary>
            the container of the html to handle load image for
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler._loadCompleteCallback">
            <summary>
            callback raised when image load process is complete with image or without
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler._imageFileStream">
            <summary>
            Must be open as long as the image is in use
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler._image">
            <summary>
            the image instance of the loaded image
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler._imageRectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler._asyncCallback">
            <summary>
            to know if image load event callback was sync or async raised
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler._releaseImageObject">
            <summary>
            flag to indicate if to release the image object on box dispose (only if image was loaded by the box)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler._disposed">
            <summary>
            is the handler has been disposed
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.#ctor(TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,TheArtOfDev.HtmlRenderer.Core.Utils.ActionInt{TheArtOfDev.HtmlRenderer.Adapters.RImage,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Boolean})">
            <summary>
            Init.
            </summary>
            <param name="htmlContainer">the container of the html to handle load image for</param>
            <param name="loadCompleteCallback">callback raised when image load process is complete with image or without</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.Image">
            <summary>
            the image instance of the loaded image
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.Rectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.LoadImage(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Set image of this image box by analyzing the src attribute.<br/>
            Load the image from inline base64 encoded string.<br/>
            Or from calling property/method on the bridge object that returns image or URL to image.<br/>
            Or from file path<br/>
            Or from URI.
            </summary>
            <remarks>
            File path and URI image loading is executed async and after finishing calling <see cref="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/>
            on the main thread and not thread-pool.
            </remarks>
            <param name="src">the source of the image to load</param>
            <param name="attributes">the collection of attributes on the element to use in event</param>
            <returns>the image object (null if failed)</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.OnHtmlImageLoadEventCallback(System.String,System.Object,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Set the image using callback from load image event, use the given data.
            </summary>
            <param name="path">the path to the image to load (file path or uri)</param>
            <param name="image">the image to load</param>
            <param name="imageRectangle">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.SetFromInlineData(System.String)">
            <summary>
            Load the image from inline base64 encoded string data.
            </summary>
            <param name="src">the source that has the base64 encoded image</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.GetImageFromData(System.String)">
            <summary>
            Extract image object from inline base64 encoded data in the src of the html img element.
            </summary>
            <param name="src">the source that has the base64 encoded image</param>
            <returns>image from base64 data string or null if failed</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.SetImageFromPath(System.String)">
            <summary>
            Load image from path of image file or URL.
            </summary>
            <param name="path">the file path or uri to load image from</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.SetImageFromFile(System.IO.FileInfo)">
            <summary>
            Load the image file on thread-pool thread and calling <see cref="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> after.
            </summary>
            <param name="source">the file path to get the image from</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.LoadImageFromFile(System.String)">
            <summary>
            Load the image file on thread-pool thread and calling <see cref="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> after.<br/>
            Calling <see cref="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> on the main thread and not thread-pool.
            </summary>
            <param name="source">the file path to get the image from</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.SetImageFromUrl(System.Uri)">
            <summary>
            Load image from the given URI by downloading it.<br/>
            Create local file name in temp folder from the URI, if the file already exists use it as it has already been downloaded.
            If not download the file.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.OnDownloadImageCompleted(System.Uri,System.String,System.Exception,System.Boolean)">
            <summary>
            On download image complete to local file use <see cref="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.LoadImageFromFile(System.String)"/> to load the image file.<br/>
            If the download canceled do nothing, if failed report error.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)">
            <summary>
            Flag image load complete and request refresh for re-layout and invalidate.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.ImageLoadHandler.ReleaseObjects">
            <summary>
            Release the image and client objects.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler">
            <summary>
            Handler for text selection in the html.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._root">
            <summary>
            the root of the handled html tree
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._contextMenuHandler">
            <summary>
            handler for showing context menu on right click
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._selectionStartPoint">
            <summary>
            the mouse location when selection started used to ignore small selections
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._selectionStart">
            <summary>
            the starting word of html selection<br/>
            where the user started the selection, if the selection is backwards then it will be the last selected word.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._selectionEnd">
            <summary>
            the ending word of html selection<br/>
            where the user ended the selection, if the selection is backwards then it will be the first selected word.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._selectionStartIndex">
            <summary>
            the selection start index if the first selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._selectionEndIndex">
            <summary>
            the selection end index if the last selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._selectionStartOffset">
            <summary>
            the selection start offset if the first selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._selectionEndOffset">
            <summary>
            the selection end offset if the last selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._backwardSelection">
            <summary>
            is the selection goes backward in the html, the starting word comes after the ending word in DFS traversing.<br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._inSelection">
            <summary>
            used to ignore mouse up after selection
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._isDoubleClickSelect">
            <summary>
            current selection process is after double click (full word selection)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._mouseDownInControl">
            <summary>
            used to know if selection is in the control or started outside so it needs to be ignored
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._mouseDownOnSelectedWord">
            <summary>
            used to handle drag and drop
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._cursorChanged">
            <summary>
            is the cursor on the control has been changed by the selection handler
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._lastMouseDown">
            <summary>
            used to know if double click selection is requested
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler._dragDropData">
            <summary>
            used to know if drag and drop was already started not to execute the same operation over
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.#ctor(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="root">the root of the handled html tree</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.SelectAll(TheArtOfDev.HtmlRenderer.Adapters.RControl)">
            <summary>
            Select all the words in the html.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.SelectWord(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Select the word at the given location if found.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
            <param name="loc">the location to select word at</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.HandleMouseDown(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="loc">the location of the mouse on the html</param>
            <param name="isMouseInContainer"> </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.HandleMouseUp(TheArtOfDev.HtmlRenderer.Adapters.RControl,System.Boolean)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="leftMouseButton">is the left mouse button has been released</param>
            <returns>is the mouse up should be ignored</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.HandleMouseMove(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="loc">the location of the mouse on the html</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.HandleMouseLeave(TheArtOfDev.HtmlRenderer.Adapters.RControl)">
            <summary>
            On mouse leave change the cursor back to default.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.CopySelectedHtml">
            <summary>
            Copy the currently selected html segment to clipboard.<br/>
            Copy rich html text and plain text.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedText">
            <summary>
            Get the currently selected text segment in the html.<br/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedHtml">
            <summary>
            Copy the currently selected html segment with style.<br/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectingStartIndex(TheArtOfDev.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            The selection start index if the first selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection start index for</param>
            <returns>data value or -1 if not applicable</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedEndIndexOffset(TheArtOfDev.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            The selection end index if the last selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection end index for</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedStartOffset(TheArtOfDev.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            The selection start offset if the first selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection start offset for</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedEndOffset(TheArtOfDev.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            The selection end offset if the last selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection end offset for</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.HandleSelection(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Handle html text selection by mouse move over the html with left mouse button pressed.<br/>
            Calculate the words in the selected range and set their selected property.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
            <param name="loc">the mouse location</param>
            <param name="allowPartialSelect">true - partial word selection allowed, false - only full words selection</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.ClearSelection(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Clear the selection from all the words in the css box recursively.
            </summary>
            <param name="box">the css box to selectionStart clear at</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.StartDragDrop(TheArtOfDev.HtmlRenderer.Adapters.RControl)">
            <summary>
            Start drag and drop operation on the currently selected html segment.
            </summary>
            <param name="control">the control to start the drag and drop on</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.SelectAllWords(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Select all the words that are under <paramref name="box"/> DOM hierarchy.<br/>
            </summary>
            <param name="box">the box to start select all at</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.CheckNonEmptySelection(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Check if the current selection is non empty, has some selection data.
            </summary>
            <param name="loc"></param>
            <param name="allowPartialSelect">true - partial word selection allowed, false - only full words selection</param>
            <returns>true - is non empty selection, false - empty selection</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.SelectWordsInRange(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            Select all the words that are between <paramref name="selectionStart"/> word and <paramref name="selectionEnd"/> word in the DOM hierarchy.<br/>
            </summary>
            <param name="root">the root of the DOM sub-tree the selection is in</param>
            <param name="selectionStart">selection start word limit</param>
            <param name="selectionEnd">selection end word limit</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.SelectWordsInRange(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect,System.Boolean@)">
            <summary>
            Select all the words that are between <paramref name="selectionStart"/> word and <paramref name="selectionEnd"/> word in the DOM hierarchy.
            </summary>
            <param name="box">the current traversal node</param>
            <param name="selectionStart">selection start word limit</param>
            <param name="selectionEnd">selection end word limit</param>
            <param name="inSelection">used to know the traversal is currently in selected range</param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Calculate the character index and offset by characters for the given word and given offset.<br/>
            <seealso cref="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)"/>.
            </summary>
            <param name="control">used to create graphics to measure string</param>
            <param name="word">the word to calculate its index and offset</param>
            <param name="loc">the location to calculate for</param>
            <param name="selectionStart">to set the starting or ending char and offset data</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Core.Dom.CssRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean,System.Int32@,System.Double@)">
            <summary>
            Calculate the character index and offset by characters for the given word and given offset.<br/>
            If the location is below the word line then set the selection to the end.<br/>
            If the location is to the right of the word then set the selection to the end.<br/>
            If the offset is to the left of the word set the selection to the beginning.<br/>
            Otherwise calculate the width of each substring to find the char the location is on.
            </summary>
            <param name="control">used to create graphics to measure string</param>
            <param name="word">the word to calculate its index and offset</param>
            <param name="loc">the location to calculate for</param>
            <param name="inclusive">is to include the first character in the calculation</param>
            <param name="selectionIndex">return the index of the char under the location</param>
            <param name="selectionOffset">return the offset of the char under the location</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.SelectionHandler.CheckSelectionDirection">
            <summary>
            Check if the selection direction is forward or backward.<br/>
            Is the selection start word is before the selection end word in DFS traversal.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Handlers.StylesheetLoadHandler">
            <summary>
            Handler for loading a stylesheet data.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.LoadStylesheet(TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String@,TheArtOfDev.HtmlRenderer.Core.CssData@)">
            <summary>
            Load stylesheet data from the given source.<br/>
            The source can be local file or web URI.<br/>
            First raise <see cref="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs"/> event to allow the client to overwrite the stylesheet loading.<br/>
            If the stylesheet is downloaded from URI we will try to correct local URIs to absolute.<br/>
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="src">the source of the element to load the stylesheet by</param>
            <param name="attributes">the attributes of the link element</param>
            <param name="stylesheet">return the stylesheet string that has been loaded (null if failed or <paramref name="stylesheetData"/> is given)</param>
            <param name="stylesheetData">return stylesheet data object that was provided by overwrite (null if failed or <paramref name="stylesheet"/> is given)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.LoadStylesheet(TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,System.String)">
            <summary>
            Load stylesheet string from given source (file path or uri).
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="src">the file path or uri to load the stylesheet from</param>
            <returns>the stylesheet string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.LoadStylesheetFromFile(TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,System.String)">
            <summary>
            Load the stylesheet from local file by given path.
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="path">the stylesheet file to load</param>
            <returns>the loaded stylesheet string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.LoadStylesheetFromUri(TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,System.Uri)">
            <summary>
            Load the stylesheet from uri by downloading the string.
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="uri">the uri to download from</param>
            <returns>the loaded stylesheet string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.CorrectRelativeUrls(System.String,System.Uri)">
            <summary>
            Make relative URLs absolute in the stylesheet using the URI of the stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet to correct</param>
            <param name="baseUri">the stylesheet uri to use to create absolute URLs</param>
            <returns>Corrected stylesheet</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt">
            <summary>
            Low level handling of Html Renderer logic.<br/>
            Allows html layout and rendering without association to actual control, those allowing to handle html rendering on any graphics object.<br/>
            Using this class will require the client to handle all propagation's of mouse/keyboard events, layout/paint calls, scrolling offset, 
            location/size/rectangle handling and UI refresh requests.<br/>
            </summary>
            <remarks>
            <para>
            <b>MaxSize and ActualSize:</b><br/>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.ActualSize"/> can exceed the max size by layout restrictions (unwrap-able line, set image size, etc.).<br/>
            Set zero for unlimited (width/height separately).<br/>
            </para>
            <para>
            <b>ScrollOffset:</b><br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered 
            at -100, therefore outside the client rectangle.
            </para>
            <para>
            <b>LinkClicked event</b><br/>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link to overwrite by custom logic.<br/>
            If error occurred in event handler it will propagate up the stack.
            </para>
            <para>
            <b>StylesheetLoad event:</b><br/>
            Raised when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>ImageLoad event:</b><br/>
            Raised when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and provide 
            file path to load the image from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>Refresh event:</b><br/>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).<br/>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </para>
            <para>
            <b>RenderError event:</b><br/>
            Raised when an error occurred during html rendering.<br/>
            </para>
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._adapter">
            <summary>
            Main adapter to framework specific logic.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._cssParser">
            <summary>
            parser for CSS data
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._root">
            <summary>
            the root css box of the parsed html
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._hoverBoxes">
            <summary>
            list of all css boxes that have ":hover" selector on them
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._selectionHandler">
            <summary>
            Handler for text selection in the html. 
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._imageDownloader">
            <summary>
            Handler for downloading of images in the html
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._selectionForeColor">
            <summary>
            the text fore color use for selected text
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._selectionBackColor">
            <summary>
            the back-color to use for selected text
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._cssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._isSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._isContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled (default - true)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._avoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided 
            for geometry like backgrounds and borders
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._avoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._avoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._loadComplete">
            <summary>
            is the load of the html document is complete
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._location">
            <summary>
            the top-left most location of the rendered html
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._maxSize">
            <summary>
            the max width and height of the rendered html, effects layout, actual size cannot exceed this values.<br/>
            Set zero for unlimited.<br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._scrollOffset">
            <summary>
            Gets or sets the scroll offset of the document for scroll controls
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._actualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._marginTop">
            <summary>
            the top margin between the page start and the text
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._marginBottom">
            <summary>
            the bottom margin between the page end and the text
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._marginLeft">
            <summary>
            the left margin between the page start and the text
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt._marginRight">
            <summary>
            the right margin between the page end and the text
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.#ctor(TheArtOfDev.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.Adapter">
            <summary>
            
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.CssParser">
            <summary>
            parser for CSS data
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.Refresh">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.ScrollChange">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.StylesheetLoad">
            <summary>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or Uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.CssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.AvoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            True - images are loaded synchronously during html parsing.<br/>
            False - images are loaded asynchronously to html parsing when downloaded from URL or loaded from disk.<br/>
            </summary>
            <remarks>
            Asynchronously image loading allows to unblock html rendering while image is downloaded or loaded from disk using IO 
            ports to achieve better performance.<br/>
            Asynchronously image loading should be avoided when the full html content must be available during render, like render to image.
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.AvoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            True - images are loaded as soon as the html is parsed.<br/>
            False - images that are not visible because of scroll location are not loaded until they are scrolled to.
            </summary>
            <remarks>
            Images late loading improve performance if the page contains image outside the visible scroll area, especially if there is large 
            amount of images, as all image loading is delayed (downloading and loading into memory).<br/>
            Late image loading may effect the layout and actual size as image without set size will not have actual size until they are loaded
            resulting in layout change during user scroll.<br/>
            Early image loading may also effect the layout if image without known size above the current scroll location are loaded as they
            will push the html elements down.
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.ScrollOffset">
            <summary>
            The scroll offset of the html.<br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            </summary>
            <example>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered as it
            will be at -100 therefore outside the client rectangle.
            </example>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.Location">
            <summary>
            The top-left most location of the rendered html.<br/>
            This will offset the top-left corner of the rendered html.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.MaxSize">
            <summary>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.ActualSize"/> can be exceed the max size by layout restrictions (unwrapable line, set image size, etc.).<br/>
            Set zero for unlimited (width\height separately).<br/>
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.ActualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.MarginTop">
            <summary>
            the top margin between the page start and the text
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.MarginBottom">
            <summary>
            the bottom margin between the page end and the text
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.MarginLeft">
            <summary>
            the left margin between the page start and the text
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.MarginRight">
            <summary>
            the right margin between the page end and the text
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.SetMargins(System.Int32)">
            <summary>
            Set all 4 margins to the given value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.Root">
            <summary>
            the root css box of the parsed html
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.SelectionForeColor">
            <summary>
            the text fore color use for selected text
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.SelectionBackColor">
            <summary>
            the back-color to use for selected text
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.SetHtml(System.String,TheArtOfDev.HtmlRenderer.Core.CssData)">
            <summary>
            Init with optional document and stylesheet.
            </summary>
            <param name="htmlSource">the html to init with, init empty if not given</param>
            <param name="baseCssData">optional: the stylesheet to init with, init default if not given</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.Clear">
            <summary>
            Clear the content of the HTML container releasing any resources used to render previously existing content.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.GetHtml(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Get html from the current DOM tree with style if requested.
            </summary>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated (default: <see cref="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle.Inline"/>)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.GetAttributeAt(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,System.String)">
            <summary>
            Get attribute value of element at the given x,y location by given key.<br/>
            If more than one element exist with the attribute at the location the inner most is returned.
            </summary>
            <param name="location">the location to find the attribute at</param>
            <param name="attribute">the attribute key to get value by</param>
            <returns>found attribute value or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.GetLinks">
            <summary>
            Get all the links in the HTML with the element rectangle and href data.
            </summary>
            <returns>collection of all the links in the HTML</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.GetLinkAt(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css link href at the given x,y location.
            </summary>
            <param name="location">the location to find the link at</param>
            <returns>css link href if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.PerformLayout(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.
            </summary>
            <param name="g">Device context to draw</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.PerformPaint(TheArtOfDev.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Render the html using the given device.
            </summary>
            <param name="g">the device to use to render</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.HandleMouseDown(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.HandleMouseUp(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
            <param name="e">the mouse event data</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.HandleMouseDoubleClick(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.HandleMouseMove(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.HandleMouseLeave(TheArtOfDev.HtmlRenderer.Adapters.RControl)">
            <summary>
            Handle mouse leave to handle hover cursor.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.HandleKeyDown(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent)">
            <summary>
            Handle key down event for selection and copy.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the pressed key</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.RaiseHtmlStylesheetLoadEvent(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs)">
            <summary>
            Raise the stylesheet load event with the given event args.
            </summary>
            <param name="args">the event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.RaiseHtmlImageLoadEvent(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Raise the image load event with the given event args.
            </summary>
            <param name="args">the event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.RequestRefresh(System.Boolean)">
            <summary>
            Request invalidation and re-layout of the control hosting the renderer.
            </summary>
            <param name="layout">is re-layout is required for the refresh</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.ReportError(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorType,System.String,System.Exception)">
            <summary>
            Report error in html render process.
            </summary>
            <param name="type">the type of error to report</param>
            <param name="message">the error message</param>
            <param name="exception">optional: the exception that occured</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.HandleLinkClicked(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Handle link clicked going over <see cref="E:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.LinkClicked"/> event and using <see cref="M:System.Diagnostics.Process.Start"/> if not canceled.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
            <param name="link">the link that was clicked</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.AddHoverBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Add css box that has ":hover" selector to be handled on mouse hover.
            </summary>
            <param name="box">the box that has the hover selector</param>
            <param name="block">the css block with the css data with the selector</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.GetImageDownloader">
            <summary>
            Get image downloader to be used to download images for the current html rendering.<br/>
            Lazy create single downloader to be used for all images in the current html.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.OffsetByScroll(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Adjust the offset of the given location by the current scroll offset.
            </summary>
            <param name="location">the location to adjust</param>
            <returns>the adjusted location</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.IsMouseInContainer(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Check if the mouse is currently on the html container.<br/>
            Relevant if the html container is not filled in the hosted control (location is not zero and the size is not the full size of the control).
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.HtmlRendererUtils">
            <summary>
            General utilities.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlRendererUtils.MeasureHtmlByRestrictions(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Measure the size of the html by performing layout under the given restrictions.
            </summary>
            <param name="g">the graphics to use</param>
            <param name="htmlContainer">the html to calculate the layout for</param>
            <param name="minSize">the minimal size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">the maximum size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <returns>return: the size of the html to be rendered within the min/max limits</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.HtmlRendererUtils.Layout(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,System.Boolean,System.Boolean)">
            <summary>
            Perform the layout of the html container by given size restrictions returning the final size.<br/>
            The layout can be effected by the HTML content in the <paramref name="htmlContainer"/> if <paramref name="autoSize"/> or
            <paramref name="autoSizeHeightOnly"/> is set to true.<br/>
            Handle minimum and maximum size restrictions.<br/>
            Handle auto size and auto size for height only. if <paramref name="autoSize"/> is true <paramref name="autoSizeHeightOnly"/>
            is ignored.<br/>
            </summary>
            <param name="g">the graphics used for layout</param>
            <param name="htmlContainer">the html container to layout</param>
            <param name="size">the current size</param>
            <param name="minSize">the min size restriction - can be empty for no restriction</param>
            <param name="maxSize">the max size restriction - can be empty for no restriction</param>
            <param name="autoSize">if to modify the size (width and height) by html content layout</param>
            <param name="autoSizeHeightOnly">if to modify the height by html content layout</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser">
            <summary>
            Parser to parse CSS stylesheet source string into CSS objects.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser._cssBlockSplitters">
            <summary>
            split CSS rule
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser._valueParser">
            <summary>
            Utility for value parsing.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser._cssClassTrimChars">
            <summary>
            The chars to trim the css class name by
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.#ctor(TheArtOfDev.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseStyleSheet(System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet source to CSS blocks dictionary.<br/>
            The CSS blocks are organized into two level buckets of media type and class name.<br/>
            Root media type are found under 'all' bucket.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso href="http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="stylesheet">raw css stylesheet to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the CSS data with parsed CSS objects (never null)</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseStyleSheet(TheArtOfDev.HtmlRenderer.Core.CssData,System.String)">
            <summary>
            Parse the given stylesheet source to CSS blocks dictionary.<br/>
            The CSS blocks are organized into two level buckets of media type and class name.<br/>
            Root media type are found under 'all' bucket.<br/>
            The parsed css blocks are added to the given css data, merged if class name already exists.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">raw css stylesheet to parse</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseCssBlock(System.String,System.String)">
            <summary>
            Parse single CSS block source into CSS block instance.
            </summary>
            <param name="className">the name of the css class of the block</param>
            <param name="blockSource">the CSS block to parse</param>
            <returns>the created CSS block instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseFontFamily(System.String)">
            <summary>
            Parse a complex font family css property to check if it contains multiple fonts and if the font exists.<br/>
            returns the font family name to use or 'inherit' if failed.
            </summary>
            <param name="value">the font-family value to parse</param>
            <returns>parsed font-family value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseColor(System.String)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, red, rgb(255,0,0), rgb(100%, 0, 0) 
            </summary>
            <param name="colorStr">color string value to parse</param>
            <returns>color value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.RemoveStylesheetComments(System.String)">
            <summary>
            Remove comments from the given stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet to remove comments from</param>
            <returns>stylesheet without comments</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseStyleBlocks(TheArtOfDev.HtmlRenderer.Core.CssData,System.String)">
            <summary>
            Parse given stylesheet for CSS blocks<br/>
            This blocks are added under the "all" keyword.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">the stylesheet to parse</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseMediaStyleBlocks(TheArtOfDev.HtmlRenderer.Core.CssData,System.String)">
            <summary>
            Parse given stylesheet for media CSS blocks<br/>
            This blocks are added under the specific media block they are found.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">the stylesheet to parse</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.FeedStyleBlock(TheArtOfDev.HtmlRenderer.Core.CssData,System.String,System.String)">
            <summary>
            Feeds the style with a block about the specific media.<br/>
            When no media is specified, "all" will be used.
            </summary>
            <param name="cssData"> </param>
            <param name="block">the CSS block to handle</param>
            <param name="media">optional: the media (default - all)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseCssBlockImp(System.String,System.String)">
            <summary>
            Parse single CSS block source into CSS block instance.
            </summary>
            <param name="className">the name of the css class of the block</param>
            <param name="blockSource">the CSS block to parse</param>
            <returns>the created CSS block instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseCssBlockSelector(System.String,System.String@)">
            <summary>
            Parse css block selector to support hierarchical selector (p class1 > class2).
            </summary>
            <param name="className">the class selector to parse</param>
            <param name="firstClass">return the main class the css block is on</param>
            <returns>returns the hierarchy of classes or null if single class selector</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseCssBlockProperties(System.String)">
            <summary>
            Parse the properties of the given css block into a key-value dictionary.
            </summary>
            <param name="blockSource">the raw css block to parse</param>
            <returns>dictionary with parsed css block properties</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.AddProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Add the given property to the given properties collection, if the property is complex containing
            multiple css properties then parse them and add the inner properties.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseLengthProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse length property to add only valid lengths.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseColorProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse color property to add only valid color.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseFontProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex font property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseImageProperty(System.String)">
            <summary>
            
            </summary>
            <param name="propValue">the value of the property to parse</param>
            <returns>parsed value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseFontFamilyProperty(System.String)">
            <summary>
            Parse a complex font family css property to check if it contains multiple fonts and if the font exists.<br/>
            returns the font family name to use or 'inherit' if failed.
            </summary>
            <param name="propValue">the value of the property to parse</param>
            <returns>parsed font-family value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseBorderProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="direction">the left, top, right or bottom direction of the border to parse</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseMarginProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex margin property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseBorderStyleProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border style property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseBorderWidthProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border width property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseBorderColorProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border color property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParsePaddingProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex padding property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.SplitMultiDirectionValues(System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Split multi direction value into the proper direction values (left, top, right, bottom).
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.SplitValues(System.String,System.Char)">
            <summary>
            Split the value by the specified separator; e.g. Useful in values like 'padding:5 4 3 inherit'
            </summary>
            <param name="value">Value to be splitted</param>
            <param name="separator"> </param>
            <returns>Splitted and trimmed values</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseBorder(System.String,System.String@,System.String@,System.String@)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="width"> </param>
            <param name="style"></param>
            <param name="color"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseBorderWidth(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border width substring.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseBorderStyle(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border style substring.<br/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssParser.ParseBorderColor(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border style substring.<br/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser">
            <summary>
            Parse CSS properties values like numbers, Urls, etc.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.#ctor(TheArtOfDev.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.IsFloat(System.String,System.Int32,System.Int32)">
            <summary>
            Check if the given substring is a valid double number.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - valid double number, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.IsInt(System.String,System.Int32,System.Int32)">
            <summary>
            Check if the given substring is a valid double number.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - valid int number, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.IsValidLength(System.String)">
            <summary>
            Check if the given string is a valid length value.
            </summary>
            <param name="value">the string value to check</param>
            <returns>true - valid, false - invalid</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.ParseNumber(System.String,System.Double)">
            <summary>
            Evals a number and returns it. If number is a percentage, it will be multiplied by hundredPercent
            </summary>
            <param name="number">Number to be parsed</param>
            <param name="hundredPercent">Number that represents the 100% if parsed number is a percentage</param>
            <returns>Parsed number. Zero if error while parsing.</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties,System.Boolean)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="fontAdjust">if the length is in pixels and the length is font related it needs to use 72/96 factor</param>
            <param name="box"></param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties,System.String)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="box"></param>
            <param name="defaultUnit"></param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,System.Double,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="emFactor"></param>
            <param name="defaultUnit"></param>
            <param name="fontAdjust">if the length is in pixels and the length is font related it needs to use 72/96 factor</param>
            <param name="returnPoints">Allows the return double to be in points. If false, result will be pixels</param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.GetUnit(System.String,System.String,System.Boolean@)">
            <summary>
            Get the unit to use for the length, use default if no unit found in length string.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.IsColorValid(System.String)">
            <summary>
            Check if the given color string value is valid.
            </summary>
            <param name="colorValue">color string value to parse</param>
            <returns>true - valid, false - invalid</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.GetActualColor(System.String)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, red, rgb(255,0,0), rgb(100%, 0, 0)
            </summary>
            <param name="colorValue">color string value to parse</param>
            <returns>Color value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.TryGetColor(System.String,System.Int32,System.Int32,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, RED, RGB(255,0,0), RGB(100%, 0, 0)
            </summary>
            <param name="str">color substring value to parse</param>
            <param name="idx">substring start idx </param>
            <param name="length">substring length</param>
            <param name="color">return the parsed color</param>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.GetActualBorderWidth(System.String,TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Parses a border value in CSS style; e.g. 1px, 1, thin, thick, medium
            </summary>
            <param name="borderValue"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.GetColorByHex(System.String,System.Int32,System.Int32,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given hex value color string (#A28B34).
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.GetColorByRgb(System.String,System.Int32,System.Int32,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given RGB value color string (RGB(255,180,90))
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.GetColorByRgba(System.String,System.Int32,System.Int32,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given RGBA value color string (RGBA(255,180,90,180))
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.GetColorByName(System.String,System.Int32,System.Int32,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Get color by given name, including .NET name.
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.ParseIntAtIndex(System.String,System.Int32@)">
            <summary>
            Parse the given decimal number string to positive int value.<br/>
            Start at given <paramref name="startIdx"/>, ignore whitespaces and take
            as many digits as possible to parse to int.
            </summary>
            <param name="str">the string to parse</param>
            <param name="startIdx">the index to start parsing at</param>
            <returns>parsed int or 0</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.ParseInt(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given decimal number string to positive int value.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>int value, -1 if not valid</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.CssValueParser.ParseHexInt(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given hex number string to positive int value.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>int value, -1 if not valid</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser">
            <summary>
            Handle css DOM tree generation from raw html and stylesheet.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser._cssParser">
            <summary>
            Parser for CSS
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.#ctor(TheArtOfDev.HtmlRenderer.Core.Parse.CssParser)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.GenerateCssTree(System.String,TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,TheArtOfDev.HtmlRenderer.Core.CssData@)">
            <summary>
            Generate css tree by parsing the given html and applying the given css style data on it.
            </summary>
            <param name="html">the html to parse</param>
            <param name="htmlContainer">the html container to use for reference resolve</param>
            <param name="cssData">the css data to use</param>
            <returns>the root of the generated tree</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CascadeParseStyles(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,TheArtOfDev.HtmlRenderer.Core.CssData@,System.Boolean@)">
            <summary>
            Read styles defined inside the dom structure in links and style elements.<br/>
            If the html tag is "style" tag parse it content and add to the css data for all future tags parsing.<br/>
            If the html tag is "link" that point to style data parse it content and add to the css data for all future tags parsing.<br/>
            </summary>
            <param name="box">the box to parse style data in</param>
            <param name="htmlContainer">the html container to use for reference resolve</param>
            <param name="cssData">the style data to fill with found styles</param>
            <param name="cssDataChanged">check if the css data has been modified by the handled html not to change the base css data</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CascadeApplyStyles(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.CssData)">
            <summary>
            Applies style to all boxes in the tree.<br/>
            If the html tag has style defined for each apply that style to the css box of the tag.<br/>
            If the html tag has "class" attribute and the class name has style defined apply that style on the tag css box.<br/>
            If the html tag has "style" attribute parse it and apply the parsed style on the tag css box.<br/>
            </summary>
            <param name="box">the box to apply the style to</param>
            <param name="cssData">the style data for the html</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.SetTextSelectionStyle(TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,TheArtOfDev.HtmlRenderer.Core.CssData)">
            <summary>
            Set the selected text style (selection text color and background color).
            </summary>
            <param name="htmlContainer"> </param>
            <param name="cssData">the style data</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.AssignClassCssBlocks(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.CssData)">
            <summary>
            Assigns the given css classes to the given css box checking if matching.<br/>
            Support multiple classes in single attribute separated by whitespace.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="cssData">the css data to use to get the matching css blocks</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.AssignCssBlocks(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.CssData,System.String)">
            <summary>
            Assigns the given css style blocks to the given css box checking if matching.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="cssData">the css data to use to get the matching css blocks</param>
            <param name="className">the class selector to search for css blocks</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.IsBlockAssignableToBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Check if the given css block is assignable to the given css box.<br/>
            the block is assignable if it has no hierarchical selectors or if the hierarchy matches.<br/>
            Special handling for ":hover" pseudo-class.<br/>
            </summary>
            <param name="box">the box to check assign to</param>
            <param name="block">the block to check assign of</param>
            <returns>true - the block is assignable to the box, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.IsBlockAssignableToBoxWithSelector(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Check if the given css block is assignable to the given css box by validating the selector.<br/>
            </summary>
            <param name="box">the box to check assign to</param>
            <param name="block">the block to check assign of</param>
            <returns>true - the block is assignable to the box, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.AssignCssBlock(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Assigns the given css style block properties to the given css box.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="block">the css block to assign</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.IsStyleOnElementAllowed(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String,System.String)">
            <summary>
            Check if the given style is allowed to be set on the given css box.<br/>
            Used to prevent invalid CssBoxes creation like table with inline display style.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="key">the style key to cehck</param>
            <param name="value">the style value to check</param>
            <returns>true - style allowed, false - not allowed</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CloneCssData(TheArtOfDev.HtmlRenderer.Core.CssData@,System.Boolean@)">
            <summary>
            Clone css data if it has not already been cloned.<br/>
            Used to preserve the base css data used when changed by style inside html.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.TranslateAttributes(TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            
            </summary>
            <param name="tag"></param>
            <param name="box"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.TranslateLength(System.String)">
            <summary>
            Converts an HTML length into a Css length
            </summary>
            <param name="htmlLength"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.ApplyTableBorder(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Cascades to the TD's the border spacified in the TABLE tag.
            </summary>
            <param name="table"></param>
            <param name="border"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.ApplyTablePadding(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Cascades to the TD's the border spacified in the TABLE tag.
            </summary>
            <param name="table"></param>
            <param name="padding"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.SetForAllCells(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Utils.ActionInt{TheArtOfDev.HtmlRenderer.Core.Dom.CssBox})">
            <summary>
            Execute action on all the "td" cells of the table.<br/>
            Handle if there is "theader" or "tbody" exists.
            </summary>
            <param name="table">the table element</param>
            <param name="action">the action to execute</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CorrectTextBoxes(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Go over all the text boxes (boxes that have some text that will be rendered) and
            remove all boxes that have only white-spaces but are not 'preformatted' so they do not effect
            the rendered html.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CorrectImgBoxes(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Go over all image boxes and if its display style is set to block, put it inside another block but set the image to inline.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CorrectLineBreaksBlocks(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Boolean@)">
            <summary>
            Correct the DOM tree recursively by replacing  "br" html boxes with anonymous blocks that respect br spec.<br/>
            If the "br" tag is after inline box then the anon block will have zero height only acting as newline,
            but if it is after block box then it will have min-height of the font size so it will create empty line.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
            <param name="followingBlock">used to know if the br is following a box so it should create an empty line or not so it only
            move to a new line</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CorrectBlockInsideInline(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Correct DOM tree if there is block boxes that are inside inline blocks.<br/>
            Need to rearrange the tree so block box will be only the child of other block box.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CorrectBlockInsideInlineImp(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Rearrange the DOM of the box to have block box with boxes before the inner block box and after.
            </summary>
            <param name="box">the box that has the problem</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CorrectBlockSplitBadBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Split bad box that has inline and block boxes into two parts, the left - before the block box
            and right - after the block box.
            </summary>
            <param name="parentBox">the parent box that has the problem</param>
            <param name="badBox">the box to split into different boxes</param>
            <param name="leftBlock">the left block box that is created for the split</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.CorrectInlineBoxesParent(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Makes block boxes be among only block boxes and all inline boxes have block parent box.<br/>
            Inline boxes should live in a pool of Inline boxes only so they will define a single block.<br/>
            At the end of this process a block box will have only block siblings and inline box will have
            only inline siblings.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.ContainsInlinesOnlyDeep(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains only inline child boxes in all subtree.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - only inline child boxes, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.DomParser.ContainsVariantBoxes(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains inline and block child boxes.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - has variant child boxes, false - otherwise</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Parse.HtmlParser">
            <summary>
            
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.HtmlParser.ParseDocument(System.String)">
            <summary>
            Parses the source html to css boxes tree structure.
            </summary>
            <param name="source">the html source to parse</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.HtmlParser.AddTextBox(System.String,System.Int32,System.Int32,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox@)">
            <summary>
            Add html text anon box to the current box, this box will have the rendered text<br/>
            Adding box also for text that contains only whitespaces because we don't know yet if
            the box is preformatted. At later stage they will be removed if not relevant.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="startIdx">the start of the html part</param>
            <param name="tagIdx">the index of the next html tag</param>
            <param name="curBox">the current box in html tree parsing</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.HtmlParser.ParseHtmlTag(System.String,System.Int32,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox@)">
            <summary>
            Parse the html part, the part from prev parsing index to the beginning of the next html tag.<br/>
            </summary>
            <param name="source">the html source to parse</param>
            <param name="tagIdx">the index of the next html tag</param>
            <param name="curBox">the current box in html tree parsing</param>
            <returns>the end of the parsed part, the new start index</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.HtmlParser.ParseHtmlTag(System.String,System.Int32,System.Int32,System.String@,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Parse raw html tag source to <seealso cref="T:TheArtOfDev.HtmlRenderer.Core.Dom.HtmlTag"/> object.<br/>
            Extract attributes found on the tag.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="idx">the start index of the tag in the source</param>
            <param name="length">the length of the tag from the start index in the source</param>
            <param name="name">return the name of the html tag</param>
            <param name="attributes">return the dictionary of tag attributes</param>
            <returns>true - the tag is closing tag, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.HtmlParser.ExtractAttributes(System.String,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Extract html tag attributes from the given sub-string.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="idx">the start index of the tag attributes in the source</param>
            <param name="length">the length of the tag attributes from the start index in the source</param>
            <param name="attributes">return the dictionary of tag attributes</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils">
            <summary>
            Collection of regular expressions used when parsing
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssMediaTypes">
            <summary>
            Extracts the media types from a media at-rule; e.g. @media print, 3d, screen {
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssBlocks">
            <summary>
            Extracts defined blocks in CSS. 
            WARNING: Blocks will include blocks inside at-rules.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssNumber">
            <summary>
            Extracts a number; e.g.  5, 6, 7.5, 0.9
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssPercentage">
            <summary>
            Extracts css percentages from the string; e.g. 100% .5% 5.4%
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssLength">
            <summary>
            Extracts CSS lengths; e.g. 9px 3pt .89em
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssLineHeight">
            <summary>
            Extracts line-height values (normal, numbers, lengths, percentages)
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontFamily">
            <summary>
            Extracts font-family values
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontStyle">
            <summary>
            Extracts CSS font-styles; e.g. normal italic oblique
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontVariant">
            <summary>
            Extracts CSS font-variant values; e.g. normal, small-caps
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontWeight">
            <summary>
            Extracts font-weight values; e.g. normal, bold, bolder...
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontSize">
            <summary>
            Exracts font sizes: xx-small, larger, small, 34pt, 30%, 2em
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontSizeAndLineHeight">
            <summary>
            Gets the font-size[/line-height]? on the font shorthand property.
            Check http://www.w3.org/TR/CSS21/fonts.html#font-shorthand
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils._regexes">
            <summary>
            the regexes cache that is used by the parser so not to create regex each time
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.GetCssAtRules(System.String,System.Int32@)">
            <summary>
            Get CSS at rule from the given stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet data to retrieve the rule from</param>
            <param name="startIdx">the index to start the search for the rule, on return will be the value of the end of the found rule</param>
            <returns>the found at rule or null if not exists</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.Match(System.String,System.String)">
            <summary>
            Extracts matches from the specified source
            </summary>
            <param name="regex">Regular expression to extract matches</param>
            <param name="source">Source to extract matches</param>
            <returns>Collection of matches</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.Search(System.String,System.String)">
            <summary>
            Searches the specified regex on the source
            </summary>
            <param name="regex"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.Search(System.String,System.String,System.Int32@)">
            <summary>
            Searches the specified regex on the source
            </summary>
            <param name="regex"></param>
            <param name="source"></param>
            <param name="position"> </param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Parse.RegexParserUtils.GetRegex(System.String)">
            <summary>
            Get regex instance for the given regex string.
            </summary>
            <param name="regex">the regex string to use</param>
            <returns>the regex instance</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Utils.ArgChecker">
            <summary>
            Static class that contains argument-checking methods
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.ArgChecker.AssertIsTrue``1(System.Boolean,System.String)">
            <summary>
            Validate given condition is true, otherwise throw exception.
            </summary>
            <typeparam name="TException">Exception type to throw.</typeparam>
            <param name="condition">Condition to assert.</param>
            <param name="message">Exception message in-case of assert failure.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.ArgChecker.AssertArgNotNull(System.Object,System.String)">
            <summary>
            Validate given argument isn't Null.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null</exception>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.ArgChecker.AssertArgNotNull(System.IntPtr,System.String)">
            <summary>
            Validate given argument isn't <see cref="F:System.IntPtr.Zero"/>.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is <see cref="F:System.IntPtr.Zero"/></exception>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.ArgChecker.AssertArgNotNullOrEmpty(System.String,System.String)">
            <summary>
            Validate given argument isn't Null or empty.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null or empty</exception>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.ArgChecker.AssertArgOfType``1(System.Object,System.String)">
            <summary>
            Validate given argument isn't Null.
            </summary>
            <typeparam name="T">Type expected of arg/></typeparam>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null</exception>
            <returns>arg cast as T/></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.ArgChecker.AssertFileExist(System.String,System.String)">
            <summary>
            Validate given argument isn't Null or empty AND argument value is the path of existing file.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null or empty</exception>
            <exception cref="T:System.IO.FileNotFoundException">if arg file-path not exist</exception>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils">
            <summary>
            Utility methods for general stuff.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils._romanDigitsTable">
            <summary>
            Table to convert numbers into roman digits
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils._tempPath">
            <summary>
            the temp path to use for local files
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.IsAsianCharecter(System.Char)">
            <summary>
            Check if the given char is of Asian range.
            </summary>
            <param name="ch">the character to check</param>
            <returns>true - Asian char, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.IsDigit(System.Char,System.Boolean)">
            <summary>
            Check if the given char is a digit character (0-9) and (0-9, a-f for HEX)
            </summary>
            <param name="ch">the character to check</param>
            <param name="hex">optional: is hex digit check</param>
            <returns>true - is digit, false - not a digit</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.ToDigit(System.Char,System.Boolean)">
            <summary>
            Convert the given char to digit.
            </summary>
            <param name="ch">the character to check</param>
            <param name="hex">optional: is hex digit check</param>
            <returns>true - is digit, false - not a digit</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.Max(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Get size that is max of <paramref name="size"/> and <paramref name="other"/> for width and height separately.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.TryGetUri(System.String)">
            <summary>
            Get Uri object for the given path if it is valid uri path.
            </summary>
            <param name="path">the path to get uri for</param>
            <returns>uri or null if not valid</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.GetFirstValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``1)">
            <summary>
            Get the first value in the given dictionary.
            </summary>
            <typeparam name="TKey">the type of dictionary key</typeparam>
            <typeparam name="TValue">the type of dictionary value</typeparam>
            <param name="dic">the dictionary</param>
            <param name="defaultValue">optional: the default value to return of no elements found in dictionary </param>
            <returns>first element or default value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.TryGetFileInfo(System.String)">
            <summary>
            Get file info object for the given path if it is valid file path.
            </summary>
            <param name="path">the path to get file info for</param>
            <returns>file info or null if not valid</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.GetResponseContentType(System.Net.WebClient)">
            <summary>
            Get web client response content type.
            </summary>
            <param name="client">the web client to get the response content type from</param>
            <returns>response content type or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.GetLocalfileName(System.Uri)">
            <summary>
            Gets the representation of the online uri on the local disk.
            </summary>
            <param name="imageUri">The online image uri.</param>
            <returns>The path of the file on the disk.</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.GetNextSubString(System.String,System.Int32,System.Int32@)">
            <summary>
            Get substring separated by whitespace starting from the given idex.
            </summary>
            <param name="str">the string to get substring in</param>
            <param name="idx">the index to start substring search from</param>
            <param name="length">return the length of the found string</param>
            <returns>the index of the substring, -1 if no valid sub-string found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.SubStringEquals(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Compare that the substring of <paramref name="str"/> is equal to <paramref name="str2"/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - equals, false - not equals</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.GetValidFileName(System.String)">
            <summary>
            Replaces invalid filename chars to '_'
            </summary>
            <param name="source">The possibly-not-valid filename</param>
            <returns>A valid filename.</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.ConvertToAlphaNumber(System.Int32,System.String)">
            <summary>
            Convert number to alpha numeric system by the requested style (UpperAlpha, LowerRoman, Hebrew, etc.).
            </summary>
            <param name="number">the number to convert</param>
            <param name="style">the css style to convert by</param>
            <returns>converted string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.ConvertToEnglishNumber(System.Int32,System.Boolean)">
            <summary>
            Convert the given integer into alphabetic numeric format (D, AU, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <param name="lowercase">is to use lowercase</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.ConvertToGreekNumber(System.Int32)">
            <summary>
            Convert the given integer into alphabetic numeric format (alpha, AU, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.ConvertToRomanNumbers(System.Int32,System.Boolean)">
            <summary>
            Convert the given integer into roman numeric format (II, VI, IX, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <param name="lowercase">if to use lowercase letters for roman digits</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.ConvertToSpecificNumbers(System.Int32,System.String[0:,0:])">
            <summary>
            Convert the given integer into given alphabet numeric system.
            </summary>
            <param name="number">the number to convert</param>
            <param name="alphabet">the alphabet system to use</param>
            <returns>the number string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CommonUtils.ConvertToSpecificNumbers2(System.Int32,System.String[])">
            <summary>
            Convert the given integer into given alphabet numeric system.
            </summary>
            <param name="number">the number to convert</param>
            <param name="alphabet">the alphabet system to use</param>
            <returns>the number string</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants">
            <summary>
            String constants to avoid typing errors.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.Cm">
            <summary>
            Centimeters
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.Mm">
            <summary>
            Millimeters
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.Px">
            <summary>
            Pixels
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.In">
            <summary>
            Inches
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.Em">
            <summary>
            Em - The font size of the relevant font
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.Ex">
            <summary>
            The 'x-height' of the relevan font
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.Pt">
            <summary>
            Points
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.Pc">
            <summary>
            Picas
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.FontSize">
            <summary>
            Default font size in points. Change this value to modify the default font size.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssConstants.DefaultFont">
            <summary>
            Default font used for the generic 'serif' family
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Utils.CssUtils">
            <summary>
            Utility method for handling CSS stuff.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.CssUtils._defaultSelectionBackcolor">
            <summary>
            Brush for selection background
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Utils.CssUtils.DefaultSelectionBackcolor">
            <summary>
            Brush for selection background
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CssUtils.WhiteSpace(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Gets the white space width of the specified box
            </summary>
            <param name="g"></param>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CssUtils.GetPropertyValue(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Get CSS box property value by the CSS name.<br/>
            Used as a mapping between CSS property and the class property.
            </summary>
            <param name="cssBox">the CSS box to get it's property value</param>
            <param name="propName">the name of the CSS property</param>
            <returns>the value of the property, null if no such property exists</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.CssUtils.SetPropertyValue(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String,System.String)">
            <summary>
            Set CSS box property value by the CSS name.<br/>
            Used as a mapping between CSS property and the class property.
            </summary>
            <param name="cssBox">the CSS box to set it's property value</param>
            <param name="propName">the name of the CSS property</param>
            <param name="value">the value to set</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils">
            <summary>
            Utility class for traversing DOM structure and execution stuff on it.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.IsInBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Check if the given location is inside the given box deep.<br/>
            Check inner boxes and all lines that the given box spans to.
            </summary>
            <param name="box">the box to check</param>
            <param name="location">the location to check</param>
            <returns>true - location inside the box, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.ContainsInlinesOnly(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains only inline child boxes.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - only inline child boxes, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.FindParent(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Recursively searches for the parent with the specified HTML Tag name
            </summary>
            <param name="root"></param>
            <param name="tagName"></param>
            <param name="box"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetPreviousSibling(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the previous sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetPreviousContainingBlockSibling(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the previous sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.IsBoxHasWhitespace(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            fix word space for first word in inline tag.
            </summary>
            <param name="box">the box to check</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetNextSibling(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the next sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetAttribute(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Get attribute value by given key starting search from given box, search up the tree until
            attribute found or root.
            </summary>
            <param name="box">the box to start lookup at</param>
            <param name="attribute">the attribute to get</param>
            <returns>the value of the attribute or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetCssBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Get css box under the given sub-tree at the given x,y location, get the inner most.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box by</param>
            <param name="visible">Optional: if to get only visible boxes (default - true)</param>
            <returns>css link box if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetAllLinkBoxes(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Collections.Generic.List{TheArtOfDev.HtmlRenderer.Core.Dom.CssBox})">
            <summary>
            Collect all link boxes found in the HTML tree.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="linkBoxes">collection to add all link boxes to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetLinkBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css link box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box by</param>
            <returns>css link box if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetBoxById(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Get css box under the given sub-tree with the given id.<br/>
            </summary>
            <param name="box">the box to start search from</param>
            <param name="id">the id to find the box by</param>
            <returns>css box if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetCssLineBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css line box under the given sub-tree at the given y location or the nearest line from the top.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetCssBoxWord(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css word box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetCssBoxWord(TheArtOfDev.HtmlRenderer.Core.Dom.CssLineBox,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css word box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="lineBox">the line box to search in</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetCssLineBoxByWord(TheArtOfDev.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            Find the css line box that the given word is in.
            </summary>
            <param name="word">the word to search for it's line box</param>
            <returns>line box that the word is in</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetSelectedPlainText(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Get selected plain text of the given html sub-tree.
            </summary>
            <param name="root">the DOM box to get selected text from its sub-tree</param>
            <returns>the selected plain text string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GenerateHtml(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle,System.Boolean)">
            <summary>
            Generate html from the given DOM tree.<br/>
            Generate all the style inside the html, in header or for every tag depending on <paramref name="styleGen"/> value.
            </summary>
            <param name="root">the box of the html generate html from</param>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated</param>
            <param name="onlySelected">Optional: true - generate only selected html subset, false - generate all (default - false)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GenerateBoxTree(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Generate textual tree representation of the css boxes tree starting from the given root.<br/>
            Used for debugging html parsing.
            </summary>
            <param name="root">the root to generate tree from</param>
            <returns>generated tree</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetSelectedPlainText(System.Text.StringBuilder,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Get selected plain text of the given html sub-tree.<br/>
            Append all the selected words.
            </summary>
            <param name="sb">the builder to append the selected text to</param>
            <param name="box">the DOM box to get selected text from its sub-tree</param>
            <returns>the index of the last word appended</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.CollectSelectedBoxes(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Collect the boxes that have at least one word down the hierarchy that is selected recursively.<br/>
            </summary>
            <param name="root">the box to check its sub-tree</param>
            <returns>the collection to add the selected tags to</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.CollectSelectedBoxes(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Collections.Generic.Dictionary{TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Boolean},System.Collections.Generic.Dictionary{TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Boolean})">
            <summary>
            Collect the boxes that have at least one word down the hierarchy that is selected recursively.<br/>
            Use <paramref name="maybeBoxes"/> to handle boxes that are between selected words but don't have selected word inside.<br/>
            </summary>
            <param name="box">the box to check its sub-tree</param>
            <param name="selectedBoxes">the hash to add the selected boxes to</param>
            <param name="maybeBoxes">used to handle boxes that are between selected words but don't have selected word inside</param>
            <returns>is the current box is in selected sub-tree</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetSelectionRoot(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Collections.Generic.Dictionary{TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Boolean})">
            <summary>
            find the box the is the root of selected boxes (the first box to contain multiple selected boxes)
            </summary>
            <param name="root">the root of the boxes tree</param>
            <param name="selectedBoxes">the selected boxes to find selection root in</param>
            <returns>the box that is the root of selected boxes</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.ContainsNamedBox(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Check if the given box has a names child box (has html tag) recursively.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - in sub-tree there is a named box, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.WriteHtml(TheArtOfDev.HtmlRenderer.Core.Parse.CssParser,System.Text.StringBuilder,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle,System.Collections.Generic.Dictionary{TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Boolean},TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Write the given html DOM sub-tree into the given string builder.<br/>
            If <paramref name="selectedBoxes"/> are given write html only from those tags.
            </summary>
            <param name="cssParser">used to parse CSS data</param>
            <param name="sb">the string builder to write html into</param>
            <param name="box">the html sub-tree to write</param>
            <param name="styleGen">Controls the way styles are generated when html is generated</param>
            <param name="selectedBoxes">Control if to generate only selected boxes, if given only boxes found in hash will be generated</param>
            <param name="selectionRoot">the box the is the root of selected boxes (the first box to contain multiple selected boxes)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.WriteHtmlTag(TheArtOfDev.HtmlRenderer.Core.Parse.CssParser,System.Text.StringBuilder,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Write the given html tag with all its attributes and styles.
            </summary>
            <param name="cssParser">used to parse CSS data</param>
            <param name="sb">the string builder to write html into</param>
            <param name="box">the css box with the html tag to write</param>
            <param name="styleGen">Controls the way styles are generated when html is generated</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.StripDefaultStyles(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Clean the given style collection by removing default styles so only custom styles remain.<br/>
            Return new collection where the old remains unchanged.
            </summary>
            <param name="box">the box the styles apply to, used to know the default style</param>
            <param name="tagStyles">the collection of styles to clean</param>
            <returns>new cleaned styles collection</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.WriteStylesheet(System.Text.StringBuilder,TheArtOfDev.HtmlRenderer.Core.CssData)">
            <summary>
            Write stylesheet data inline into the html.
            </summary>
            <param name="sb">the string builder to write stylesheet into</param>
            <param name="cssData">the css data to write to the head</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GetSelectedWord(TheArtOfDev.HtmlRenderer.Core.Dom.CssRect,System.Boolean)">
            <summary>
            Get the selected word with respect to partial selected words.
            </summary>
            <param name="rect">the word to append</param>
            <param name="selectedText">is to get selected text or all the text in the word</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.DomUtils.GenerateBoxTree(TheArtOfDev.HtmlRenderer.Core.Dom.CssBox,System.Text.StringBuilder,System.Int32)">
            <summary>
            Generate textual tree representation of the css boxes tree starting from the given root.<br/>
            Used for debugging html parsing.
            </summary>
            <param name="box">the box to generate for</param>
            <param name="builder">the string builder to generate to</param>
            <param name="indent">the current indent level to set indent of generated text</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlConstants">
            <summary>
            Defines HTML strings
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils._list">
            <summary>
            List of html tags that don't have content
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils._encodeDecode">
            <summary>
            the html encode\decode pairs
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils._decodeOnly">
            <summary>
            the html decode only pairs
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils.#cctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils.IsSingleTag(System.String)">
            <summary>
            Is the given html tag is single tag or can have content.
            </summary>
            <param name="tagName">the tag to check (must be lower case)</param>
            <returns>true - is single tag, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils.DecodeHtml(System.String)">
            <summary>
            Decode html encoded string to regular string.<br/>
            Handles &lt;, &gt;, "&amp;.
            </summary>
            <param name="str">the string to decode</param>
            <returns>decoded string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils.EncodeHtml(System.String)">
            <summary>
            Encode regular string into html encoded string.<br/>
            Handles &lt;, &gt;, "&amp;.
            </summary>
            <param name="str">the string to encode</param>
            <returns>encoded string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils.DecodeHtmlCharByCode(System.String)">
            <summary>
            Decode html special charecters encoded using char entity code (&#8364;)
            </summary>
            <param name="str">the string to decode</param>
            <returns>decoded string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.HtmlUtils.DecodeHtmlCharByName(System.String)">
            <summary>
            Decode html special charecters encoded using char entity name
            </summary>
            <param name="str">the string to decode</param>
            <returns>decoded string</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Utils.RenderUtils">
            <summary>
            Provides some drawing functionality
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.RenderUtils.IsColorVisible(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Check if the given color is visible if painted (has alpha and color values)
            </summary>
            <param name="color">the color to check</param>
            <returns>true - visible, false - not visible</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.RenderUtils.ClipGraphicsByOverflow(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Clip the region the graphics will draw on by the overflow style of the containing block.<br/>
            Recursively travel up the tree to find containing block that has overflow style set to hidden. if not
            block found there will be no clipping and null will be returned.
            </summary>
            <param name="g">the graphics to clip</param>
            <param name="box">the box that is rendered to get containing blocks</param>
            <returns>true - was clipped, false - not clipped</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.RenderUtils.DrawImageLoadingIcon(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw image loading icon.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="htmlContainer"></param>
            <param name="r">the rectangle to draw icon in</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.RenderUtils.DrawImageErrorIcon(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw image failed to load icon.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="htmlContainer"></param>
            <param name="r">the rectangle to draw icon in</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.RenderUtils.GetRoundRect(TheArtOfDev.HtmlRenderer.Adapters.RGraphics,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a rounded rectangle using the specified corner radius<br/>
            NW-----NE
             |       |
             |       |
            SW-----SE
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rect">Rectangle to round</param>
            <param name="nwRadius">Radius of the north east corner</param>
            <param name="neRadius">Radius of the north west corner</param>
            <param name="seRadius">Radius of the south east corner</param>
            <param name="swRadius">Radius of the south west corner</param>
            <returns>GraphicsPath with the lines of the rounded rectangle ready to be painted</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Core.Utils.SubString">
            <summary>
            Represents sub-string of a full string starting at specific location with a specific length.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.SubString._fullString">
            <summary>
            the full string that this sub-string is part of
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.SubString._startIdx">
            <summary>
            the start index of the sub-string
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Core.Utils.SubString._length">
            <summary>
            the length of the sub-string starting at <see cref="F:TheArtOfDev.HtmlRenderer.Core.Utils.SubString._startIdx"/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.#ctor(System.String)">
            <summary>
            Init sub-string that is the full string.
            </summary>
            <param name="fullString">the full string that this sub-string is part of</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Init.
            </summary>
            <param name="fullString">the full string that this sub-string is part of</param>
            <param name="startIdx">the start index of the sub-string</param>
            <param name="length">the length of the sub-string starting at <paramref name="startIdx"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fullString"/> is null</exception>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.FullString">
            <summary>
            the full string that this sub-string is part of
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.StartIdx">
            <summary>
            the start index of the sub-string
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.Length">
            <summary>
            the length of the sub-string starting at <see cref="F:TheArtOfDev.HtmlRenderer.Core.Utils.SubString._startIdx"/>
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.Item(System.Int32)">
            <summary>
            Get string char at specific index.
            </summary>
            <param name="idx">the idx to get the char at</param>
            <returns>char at index</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.IsEmpty">
            <summary>
            Is the sub-string is empty string.
            </summary>
            <returns>true - empty string, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.IsEmptyOrWhitespace">
            <summary>
            Is the sub-string is empty string or contains only whitespaces.
            </summary>
            <returns>true - empty or whitespace string, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.IsWhitespace">
            <summary>
            Is the sub-string contains only whitespaces (at least one).
            </summary>
            <returns>true - empty or whitespace string, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.CutSubstring">
            <summary>
            Get a string of the sub-string.<br/>
            This will create a new string object!
            </summary>
            <returns>new string that is the sub-string represented by this instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Core.Utils.SubString.Substring(System.Int32,System.Int32)">
            <summary>
            Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length. 
            </summary>
            <param name="startIdx">The zero-based starting character position of a substring in this instance.</param>
            <param name="length">The number of characters in the substring. </param>
            <returns>A String equivalent to the substring of length length that begins at startIndex in this instance, or 
            Empty if startIndex is equal to the length of this instance and length is zero. </returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter">
            <summary>
            Adapter for WinForms brushes objects for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter._brush">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter._dispose">
            <summary>
            If to dispose the brush when <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter.Dispose"/> is called.<br/>
            Ignore dispose for cached brushes.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter.#ctor(System.Drawing.Brush,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter.Brush">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter">
            <summary>
            Adapter for WinForms context menu for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter._contextMenu">
            <summary>
            the underline win forms context menu
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter">
            <summary>
            Adapter for WinForms Control for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter._control">
            <summary>
            the underline win forms control.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter.#ctor(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter.Control">
            <summary>
            Get the underline win forms control
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter">
            <summary>
            Adapter for WinForms Font object for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._font">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._hFont">
            <summary>
            a handle to this Font.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._underlineOffset">
            <summary>
            the vertical offset of the font underline location from the top of the font.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._height">
            <summary>
            Cached font height.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._whitespaceWidth">
            <summary>
            Cached font whitespace width.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter.#ctor(System.Drawing.Font)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter.Font">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter.HFont">
            <summary>
            Get the handle to this Font.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter.SetMetrics(System.Int32,System.Int32)">
            <summary>
            Set font metrics to be cached for the font for future use.
            </summary>
            <param name="height">the full height of the font</param>
            <param name="underlineOffset">the vertical offset of the font underline location from the top of the font.</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter">
            <summary>
            Adapter for WinForms Font family object for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter._fontFamily">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter.#ctor(System.Drawing.FontFamily)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter.FontFamily">
            <summary>
            the underline win-forms font family.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter">
            <summary>
            Adapter for WinForms Graphics for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._charFit">
            <summary>
            used for <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.MeasureString(System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)"/> calculation.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._charFitWidth">
            <summary>
            used for <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.MeasureString(System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)"/> calculation.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._characterRanges">
            <summary>
            Used for GDI+ measure string.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._stringFormat">
            <summary>
            The string format to use for measuring strings for GDI+ text rendering
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._stringFormat2">
            <summary>
            The string format to use for rendering strings for GDI+ text rendering
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._g">
            <summary>
            The wrapped WinForms graphics object
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._hdc">
            <summary>
            the initialized HDC used
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._releaseGraphics">
            <summary>
            if to release the graphics object on dispose
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._setRtl">
            <summary>
            If text alignment was set to RTL
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.#cctor">
            <summary>
            Init static resources.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.#ctor(System.Drawing.Graphics,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="g">the win forms graphics object to use</param>
            <param name="useGdiPlusTextRendering">Use GDI+ text rendering to measure/draw text</param>
            <param name="releaseGraphics">optional: if to release the graphics object on dispose (default - false)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.ReleaseHdc">
            <summary>
            Release current HDC to be able to use <see cref="T:System.Drawing.Graphics"/> methods.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.InitHdc">
            <summary>
            Init HDC for the current graphics object to be used to call GDI directly.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetFont(TheArtOfDev.HtmlRenderer.Adapters.RFont)">
            <summary>
            Set a resource (e.g. a font) for the specified device context.
            WARNING: Calling Font.ToHfont() many times without releasing the font handle crashes the app.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetTextColor(System.Drawing.Color)">
            <summary>
            Set the text color of the device context.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetRtlAlignGdi(System.Boolean)">
            <summary>
            Change text align to Left-to-Right or Right-to-Left if required.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.DrawTransparentText(System.IntPtr,System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,System.Drawing.Point,System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Special draw logic to draw transparent text using GDI.<br/>
            1. Create in-memory DC<br/>
            2. Copy background to in-memory DC<br/>
            3. Draw the text to in-memory DC<br/>
            4. Copy the in-memory DC to the proper location with alpha blend<br/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetRtlAlignGdiPlus(System.Boolean)">
            <summary>
            Change text align to Left-to-Right or Right-to-Left if required.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter">
            <summary>
            Adapter for WinForms graphics path object for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter._graphicsPath">
            <summary>
            The actual WinForms graphics path instance.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter._lastPoint">
            <summary>
            the last point added to the path to begin next segment from
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter.GraphicsPath">
            <summary>
            The actual WinForms graphics path instance.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter.GetStartAngle(TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath.Corner)">
            <summary>
            Get arc start angle for the given corner.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ImageAdapter">
            <summary>
            Adapter for WinForms Image object for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ImageAdapter._image">
            <summary>
            the underline win-forms image.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ImageAdapter.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ImageAdapter.Image">
            <summary>
            the underline win-forms image.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.PenAdapter">
            <summary>
            Adapter for WinForms pens objects for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.PenAdapter._pen">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.PenAdapter.#ctor(System.Drawing.Pen)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.PenAdapter.Pen">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.WinFormsAdapter">
            <summary>
            Adapter for WinForms platforms.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.WinFormsAdapter._instance">
            <summary>
            Singleton instance of global adapter.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.WinFormsAdapter.#ctor">
            <summary>
            Init installed font families and set default font families mapping.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.WinFormsAdapter.Instance">
            <summary>
            Singleton instance of global adapter.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer">
            <summary>
            Low level handling of Html Renderer logic, this class is used by <see cref="T:TheArtOfDev.HtmlRenderer.Core.Parse.HtmlParser"/> and <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.
            </summary>
            <seealso cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HtmlContainerInt"/>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer._htmlContainerInt">
            <summary>
            The internal core html container
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.Refresh">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ScrollChange">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.StylesheetLoad">
            <summary>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or Uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HtmlContainerInt">
            <summary>
            The internal core html container
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br/>
            </summary>
            <remarks>
            <para>
            GDI+ text rendering is less smooth than GDI text rendering but it natively supports alpha channel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint"/>, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/> doesn't work well with transparent background.
            </para>
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.CssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.AvoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            True - images are loaded synchronously during html parsing.<br/>
            False - images are loaded asynchronously to html parsing when downloaded from URL or loaded from disk.<br/>
            </summary>
            <remarks>
            Asynchronously image loading allows to unblock html rendering while image is downloaded or loaded from disk using IO 
            ports to achieve better performance.<br/>
            Asynchronously image loading should be avoided when the full html content must be available during render, like render to image.
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.AvoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            True - images are loaded as soon as the html is parsed.<br/>
            False - images that are not visible because of scroll location are not loaded until they are scrolled to.
            </summary>
            <remarks>
            Images late loading improve performance if the page contains image outside the visible scroll area, especially if there is large 
            amount of images, as all image loading is delayed (downloading and loading into memory).<br/>
            Late image loading may effect the layout and actual size as image without set size will not have actual size until they are loaded
            resulting in layout change during user scroll.<br/>
            Early image loading may also effect the layout if image without known size above the current scroll location are loaded as they
            will push the html elements down.
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ScrollOffset">
            <summary>
            The scroll offset of the html.<br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            </summary>
            <example>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered as it
            will be at -100 therefore outside the client rectangle.
            </example>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.Location">
            <summary>
            The top-left most location of the rendered html.<br/>
            This will offset the top-left corner of the rendered html.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.MaxSize">
            <summary>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ActualSize"/> can be exceed the max size by layout restrictions (unwrappable line, set image size, etc.).<br/>
            Set zero for unlimited (width\height separately).<br/>
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ActualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.SetHtml(System.String,TheArtOfDev.HtmlRenderer.Core.CssData)">
            <summary>
            Init with optional document and stylesheet.
            </summary>
            <param name="htmlSource">the html to init with, init empty if not given</param>
            <param name="baseCssData">optional: the stylesheet to init with, init default if not given</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetHtml(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Get html from the current DOM tree with style if requested.
            </summary>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated (default: <see cref="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle.Inline"/>)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetAttributeAt(System.Drawing.Point,System.String)">
            <summary>
            Get attribute value of element at the given x,y location by given key.<br/>
            If more than one element exist with the attribute at the location the inner most is returned.
            </summary>
            <param name="location">the location to find the attribute at</param>
            <param name="attribute">the attribute key to get value by</param>
            <returns>found attribute value or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetLinks">
            <summary>
            Get all the links in the HTML with the element rectangle and href data.
            </summary>
            <returns>collection of all the links in the HTML</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetLinkAt(System.Drawing.Point)">
            <summary>
            Get css link href at the given x,y location.
            </summary>
            <param name="location">the location to find the link at</param>
            <returns>css link href if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.PerformLayout(System.Drawing.Graphics)">
            <summary>
            Measures the bounds of box and children, recursively.
            </summary>
            <param name="g">Device context to draw</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.PerformPaint(System.Drawing.Graphics)">
            <summary>
            Render the html using the given device.
            </summary>
            <param name="g">the device to use to render</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseDown(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseUp(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseDoubleClick(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseMove(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseLeave(System.Windows.Forms.Control)">
            <summary>
            Handle mouse leave to handle hover cursor.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle key down event for selection and copy.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the pressed key</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.CreateMouseEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Create HtmlRenderer mouse event from win forms mouse event.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.CreateKeyEevent(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Create HtmlRenderer key event from win forms key event.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender">
            <summary>
            Standalone static class for simple and direct HTML rendering.<br/>
            For low-level control and performance consider using <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer"/>.<br/>
            </summary>
            <remarks>
            <para>
            <b>GDI vs. GDI+ text rendering</b><br/>
            Windows supports two text rendering technologies: GDI and GDI+.<br/> 
            GDI is older, has better performance and looks better on standard monitors but doesn't support alpha channel for transparency.<br/> 
            GDI+ is newer, device independent so work better for printers but is slower and looks worse on monitors.<br/>
            HtmlRender supports both GDI and GDI+ text rendering to accommodate different needs, GDI+ text rendering methods have "GdiPlus" suffix
            in their name where GDI do not.<br/>
            </para>
            <para>
            <b>Rendering to image</b><br/>
            See https://htmlrenderer.codeplex.com/wikipage?title=Image%20generation <br/>
            Because of GDI text rendering issue with alpha channel clear type text rendering rendering to image requires special handling.<br/>
            <u>Solid color background -</u> generate an image where the background is filled with solid color and all the html is rendered on top
            of the background color, GDI text rendering will be used. (RenderToImage method where the first argument is html string)<br/>
            <u>Image background -</u> render html on top of existing image with whatever currently exist but it cannot have transparent pixels, 
            GDI text rendering will be used. (RenderToImage method where the first argument is Image object)<br/>
            <u>Transparent background -</u> render html to empty image using GDI+ text rendering, the generated image can be transparent.
            Text rendering can be controlled using <see cref="T:System.Drawing.Text.TextRenderingHint"/>, note that <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/>
            doesn't render well on transparent background. (RenderToImageGdiPlus method)<br/>
            </para>
            <para>
            <b>Overwrite stylesheet resolution</b><br/>
            Exposed by optional "stylesheetLoad" delegate argument.<br/>
            Invoked when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>Overwrite image resolution</b><br/>
            Exposed by optional "imageLoad" delegate argument.<br/>
            Invoked when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and provide 
            file path to load the image from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            Note: Cannot use asynchronous scheme overwrite scheme.<br/>
            </para>
            </remarks>
            <example>
            <para>
            <b>Simple rendering</b><br/>
            HtmlRender.Render(g, "<![CDATA[<div>Hello <b>World</b></div>]]>");<br/>
            HtmlRender.Render(g, "<![CDATA[<div>Hello <b>World</b></div>]]>", 10, 10, 500, CssData.Parse("body {font-size: 20px}")");<br/>
            </para>
            <para>
            <b>Image rendering</b><br/>
            HtmlRender.RenderToImage("<![CDATA[<div>Hello <b>World</b></div>]]>", new Size(600,400));<br/>
            HtmlRender.RenderToImage("<![CDATA[<div>Hello <b>World</b></div>]]>", 600);<br/>
            HtmlRender.RenderToImage(existingImage, "<![CDATA[<div>Hello <b>World</b></div>]]>");<br/>
            </para>
            </example>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.AddFontFamily(System.Drawing.FontFamily)">
            <summary>
            Adds a font family to be used in html rendering.<br/>
            The added font will be used by all rendering function including <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer"/> and all WinForms controls.
            </summary>
            <remarks>
            The given font family instance must be remain alive while the renderer is in use.<br/>
            If loaded to <see cref="T:System.Drawing.Text.PrivateFontCollection"/> then the collection must be alive.<br/>
            If loaded from file then the file must not be deleted.
            </remarks>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <remarks>
            This fonts mapping can be used as a fallback in case the requested font is not installed in the client system.
            </remarks>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.ParseStyleSheet(System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet to <see cref="T:TheArtOfDev.HtmlRenderer.Core.CssData"/> object.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso href="http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="stylesheet">the stylesheet source to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the parsed css data</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.Measure(System.Drawing.Graphics,System.String,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given max width restriction.<br/>
            If no max width restriction is given the layout will use the maximum possible width required by the content,
            it can be the longest text line or full image width.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.MeasureGdiPlus(System.Drawing.Graphics,System.String,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given max width restriction.<br/>
            If no max width restriction is given the layout will use the maximum possible width required by the content,
            it can be the longest text line or full image width.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.Render(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max width restriction.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="left">optional: the left most location to start render the html at (default - 0)</param>
            <param name="top">optional: the top most location to start render the html at (default - 0)</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.Render(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderGdiPlus(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="left">optional: the left most location to start render the html at (default - 0)</param>
            <param name="top">optional: the top most location to start render the html at (default - 0)</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderGdiPlus(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.Drawing.Image,System.String,System.Drawing.PointF,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML on top of the given image.<br/>
            <paramref name="image"/> will contain the rendered html in it on top of original content.<br/>
            <paramref name="image"/> must not contain transparent pixels as it will corrupt the rendered html text.<br/>
            The HTML will be layout by the given image size but may be clipped if cannot fit.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="image">the image to render the html on</param>
            <param name="html">HTML source to render</param>
            <param name="location">optional: the top-left most location to start render the html at (default - 0,0)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.Drawing.Image,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML on top of the given image.<br/>
            <paramref name="image"/> will contain the rendered html in it on top of original content.<br/>
            <paramref name="image"/> must not contain transparent pixels as it will corrupt the rendered html text.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="image">the image to render the html on</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Drawing.Size,System.Drawing.Color,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of the requested size.<br/>
            The HTML will be layout by the given size but will be clipped if cannot fit.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="size">The size of the image to render into, layout html by width and clipped by height</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Int32,System.Int32,System.Drawing.Color,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by max width/height and HTML layout.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxHeight"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: the max width of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="maxHeight">optional: the max height of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Drawing.Size,System.Drawing.Size,System.Drawing.Color,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by min/max width/height and HTML layout.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            If <paramref name="minSize"/> (Width/Height) is above zero the rendered image will not be smaller than the given min size.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="minSize">optional: the min size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">optional: the max size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Drawing.Size,System.Drawing.Text.TextRenderingHint,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of the requested size.<br/>
            The HTML will be layout by the given size but will be clipped if cannot fit.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="size">The size of the image to render into, layout html by width and clipped by height</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Int32,System.Int32,System.Drawing.Text.TextRenderingHint,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by max width/height and HTML layout.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxHeight"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: the max width of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="maxHeight">optional: the max height of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Drawing.Size,System.Drawing.Size,System.Drawing.Text.TextRenderingHint,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by min/max width/height and HTML layout.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            If <paramref name="minSize"/> (Width/Height) is above zero the rendered image will not be smaller than the given min size.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="minSize">optional: the min size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">optional: the max size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.Measure(System.Drawing.Graphics,System.String,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given width and height restrictions.<br/>
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.MeasureHtmlByRestrictions(TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Measure the size of the html by performing layout under the given restrictions.
            </summary>
            <param name="htmlContainer">the html to calculate the layout for</param>
            <param name="minSize">the minimal size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">the maximum size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <returns>return: the size of the html to be rendered within the min/max limits</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderClip(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Clip the graphics so the html will not be rendered outside the max height bound given.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderHtml(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.CopyBufferToImage(System.IntPtr,System.Drawing.Image)">
            <summary>
            Copy all the bitmap bits from memory bitmap buffer to the given image.
            </summary>
            <param name="memoryHdc">the source memory bitmap buffer to copy from</param>
            <param name="image">the destination bitmap image to copy to</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper">
            <summary>
            Helper to encode and set HTML fragment to clipboard.<br/>
            See http://theartofdev.wordpress.com/2012/11/11/setting-html-and-plain-text-formatting-to-clipboard/.<br/>
            <seealso cref="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)"/>.
            </summary>
            <remarks>
            The MIT License (MIT) Copyright (c) 2014 Arthur Teplitzki.
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.Header">
            <summary>
            The string contains index references to other spots in the string, so we need placeholders so we can compute the offsets. <br/>
            The <![CDATA[<<<<<<<]]>_ strings are just placeholders. We'll back-patch them actual values afterwards. <br/>
            The string layout (<![CDATA[<<<]]>) also ensures that it can't appear in the body of the html because the <![CDATA[<]]> <br/>
            character must be escaped. <br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.StartFragment">
            <summary>
            html comment to point the beginning of html fragment
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.EndFragment">
            <summary>
            html comment to point the end of html fragment
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper._byteCount">
            <summary>
            Used to calculate characters byte count in UTF-8
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)">
            <summary>
            Create <see cref="T:System.Windows.Forms.DataObject"/> with given html and plain-text ready to be used for clipboard or drag and drop.<br/>
            Handle missing <![CDATA[<html>]]> tags, specified start\end segments and Unicode characters.
            </summary>
            <remarks>
            <para>
            Windows Clipboard works with UTF-8 Unicode encoding while .NET strings use with UTF-16 so for clipboard to correctly
            decode Unicode string added to it from .NET we needs to be re-encoded it using UTF-8 encoding.
            </para>
            <para>
            Builds the CF_HTML header correctly for all possible HTMLs<br/>
            If given html contains start/end fragments then it will use them in the header:
            <code><![CDATA[<html><body><!--StartFragment-->hello <b>world</b><!--EndFragment--></body></html>]]></code>
            If given html contains html/body tags then it will inject start/end fragments to exclude html/body tags:
            <code><![CDATA[<html><body>hello <b>world</b></body></html>]]></code>
            If given html doesn't contain html/body tags then it will inject the tags and start/end fragments properly:
            <code><![CDATA[hello <b>world</b>]]></code>
            In all cases creating a proper CF_HTML header:<br/>
            <code>
            <![CDATA[
            Version:1.0
            StartHTML:000000177
            EndHTML:000000329
            StartFragment:000000277
            EndFragment:000000295
            StartSelection:000000277
            EndSelection:000000277
            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
            <html><body><!--StartFragment-->hello <b>world</b><!--EndFragment--></body></html>
            ]]>
            </code>
            See format specification here: http://msdn.microsoft.com/library/default.asp?url=/workshop/networking/clipboard/htmlclipboard.asp
            </para>
            </remarks>
            <param name="html">a html fragment</param>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CopyToClipboard(System.String,System.String)">
            <summary>
            Clears clipboard and sets the given HTML and plain text fragment to the clipboard, providing additional meta-information for HTML.<br/>
            See <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)"/> for HTML fragment details.<br/>
            </summary>
            <example>
            ClipboardHelper.CopyToClipboard("Hello <b>World</b>", "Hello World");
            </example>
            <param name="html">a html fragment</param>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CopyToClipboard(System.String)">
            <summary>
            Clears clipboard and sets the given plain text fragment to the clipboard.<br/>
            </summary>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.GetHtmlDataString(System.String)">
            <summary>
            Generate HTML fragment data string with header that is required for the clipboard.
            </summary>
            <param name="html">the html to generate for</param>
            <returns>the resulted string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.GetByteCount(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding the string in the string builder in UTF-8 and not .NET default string encoding.
            </summary>
            <param name="sb">the string builder to count its string</param>
            <param name="start">optional: the start index to calculate from (default - start of string)</param>
            <param name="end">optional: the end index to calculate to (default - end of string)</param>
            <returns>the number of bytes required to encode the string in UTF-8</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils">
            <summary>
            Utilities for converting WinForms entities to HtmlRenderer core entities.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.PointF)">
            <summary>
            Convert from WinForms point to core point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint[])">
            <summary>
            Convert from WinForms point to core point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Convert from core point to WinForms point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Convert from core point to WinForms point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.SizeF)">
            <summary>
            Convert from WinForms size to core size.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Convert from core size to WinForms size.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Convert from core size to WinForms size.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.RectangleF)">
            <summary>
            Convert from WinForms rectangle to core rectangle.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Convert from core rectangle to WinForms rectangle.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Convert from core rectangle to WinForms rectangle.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.Color)">
            <summary>
            Convert from WinForms color to core color.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Convert from core color to WinForms color.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.CreateGraphics(System.Windows.Forms.Control)">
            <summary>
            mono has issue throwing exception for no reason.
            </summary>
            <param name="control">the control to create graphics object from</param>
            <returns>new graphics object or null in mono if failed</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils">
            <summary>
            Utility for Win32 API.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.BitBltCopy">
            <summary>
            Const for BitBlt copy raster-operation code.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.BitBltPaint">
            <summary>
            Const for BitBlt paint raster-operation code.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.CreateMemoryHdc(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Create a compatible memory HDC from the given HDC.<br/>
            The memory HDC can be rendered into without effecting the original HDC.<br/>
            The returned memory HDC and <paramref name="dib"/> must be released using <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.ReleaseMemoryHdc(System.IntPtr,System.IntPtr)"/>.
            </summary>
            <param name="hdc">the HDC to create memory HDC from</param>
            <param name="width">the width of the memory HDC to create</param>
            <param name="height">the height of the memory HDC to create</param>
            <param name="dib">returns used bitmap memory section that must be released when done with memory HDC</param>
            <returns>memory HDC</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.ReleaseMemoryHdc(System.IntPtr,System.IntPtr)">
            <summary>
            Release the given memory HDC and dib section created from <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.CreateMemoryHdc(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)"/>.
            </summary>
            <param name="memoryHdc">Memory HDC to release</param>
            <param name="dib">bitmap section to release</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.GetWindowRect(System.IntPtr,System.Drawing.Rectangle@)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <remarks>
            In conformance with conventions for the RECT structure, the bottom-right coordinates of the returned rectangle are exclusive. In other words, 
            the pixel at (right, bottom) lies immediately outside the rectangle.
            </remarks>
            <param name="hWnd">A handle to the window.</param>
            <param name="lpRect">A pointer to a RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.GetWindowRectangle(System.IntPtr)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <remarks>
            In conformance with conventions for the RECT structure, the bottom-right coordinates of the returned rectangle are exclusive. In other words, 
            the pixel at (right, bottom) lies immediately outside the rectangle.
            </remarks>
            <param name="handle">A handle to the window.</param>
            <returns>RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</returns>
        </member>
    </members>
</doc>
